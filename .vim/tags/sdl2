!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
ANativeWindow	/usr/include/SDL2/SDL_syswm.h	/^typedef struct ANativeWindow ANativeWindow;$/;"	t	typeref:struct:ANativeWindow
APIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#  define APIENTRY /;"	d
APIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#define APIENTRY /;"	d
APIENTRY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define APIENTRY$/;"	d
APIENTRY	/usr/include/SDL2/SDL_opengles.h	/^#define APIENTRY$/;"	d
APIENTRY	/usr/include/SDL2/SDL_opengles2.h	/^#define APIENTRY /;"	d
APIENTRYP	/usr/include/SDL2/SDL_opengl.h	/^#define APIENTRYP /;"	d
APIENTRYP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define APIENTRYP /;"	d
ASSERT_FAIL	/usr/include/SDL2/SDL_test_assert.h	/^#define ASSERT_FAIL /;"	d
ASSERT_PASS	/usr/include/SDL2/SDL_test_assert.h	/^#define ASSERT_PASS /;"	d
AUDIO_F32	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_F32 /;"	d
AUDIO_F32LSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_F32LSB /;"	d
AUDIO_F32MSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_F32MSB /;"	d
AUDIO_F32SYS	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_F32SYS /;"	d
AUDIO_S16	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S16 /;"	d
AUDIO_S16LSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S16LSB /;"	d
AUDIO_S16MSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S16MSB /;"	d
AUDIO_S16SYS	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S16SYS /;"	d
AUDIO_S32	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S32 /;"	d
AUDIO_S32LSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S32LSB /;"	d
AUDIO_S32MSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S32MSB /;"	d
AUDIO_S32SYS	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S32SYS /;"	d
AUDIO_S8	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_S8 /;"	d
AUDIO_U16	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_U16 /;"	d
AUDIO_U16LSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_U16LSB /;"	d
AUDIO_U16MSB	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_U16MSB /;"	d
AUDIO_U16SYS	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_U16SYS /;"	d
AUDIO_U8	/usr/include/SDL2/SDL_audio.h	/^#define AUDIO_U8 /;"	d
Aloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Aloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Amask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Ashift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Ashift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BitsPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Bshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BytesPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
CRC32_POLY	/usr/include/SDL2/SDL_test_crc32.h	/^ #define CRC32_POLY /;"	d
CrcUint32	/usr/include/SDL2/SDL_test_crc32.h	/^ #define CrcUint32 /;"	d
CrcUint8	/usr/include/SDL2/SDL_test_crc32.h	/^ #define CrcUint8 /;"	d
Cursor	/usr/include/SDL2/SDL_syswm.h	/^#define Cursor /;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	/^#    define DECLSPEC /;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	/^#    define DECLSPEC$/;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	/^#   define DECLSPEC /;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	/^#   define DECLSPEC$/;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	/^#define DECLSPEC$/;"	d
DEFAULT_WINDOW_HEIGHT	/usr/include/SDL2/SDL_test_common.h	/^#define DEFAULT_WINDOW_HEIGHT /;"	d
DEFAULT_WINDOW_WIDTH	/usr/include/SDL2/SDL_test_common.h	/^#define DEFAULT_WINDOW_WIDTH /;"	d
DUMMY_ENUM_VALUE	/usr/include/SDL2/SDL_stdinc.h	/^    DUMMY_ENUM_VALUE$/;"	e	enum:__anonea0bf3f10203	access:public
DWORD_PTR	/usr/include/SDL2/SDL_config.h	/^#define DWORD_PTR /;"	d
DWORD_PTR	/usr/include/SDL2/SDL_config_windows.h	/^#define DWORD_PTR /;"	d
DWORD_PTR	/usr/include/SDL2/SDL_config_winrt.h	/^#define DWORD_PTR /;"	d
EGLAPI	/usr/include/SDL2/SDL_egl.h	/^#define EGLAPI /;"	d
EGLAPIENTRY	/usr/include/SDL2/SDL_egl.h	/^#define EGLAPIENTRY /;"	d
EGLAPIENTRYP	/usr/include/SDL2/SDL_egl.h	/^#define EGLAPIENTRYP /;"	d
EGLAttrib	/usr/include/SDL2/SDL_egl.h	/^typedef intptr_t EGLAttrib;$/;"	t	typeref:typename:intptr_t
EGLAttribKHR	/usr/include/SDL2/SDL_egl.h	/^typedef intptr_t EGLAttribKHR;$/;"	t	typeref:typename:intptr_t
EGLBoolean	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned int EGLBoolean;$/;"	t	typeref:typename:unsigned int
EGLClientBuffer	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLClientBuffer;$/;"	t	typeref:typename:void *
EGLClientPixmapHI	/usr/include/SDL2/SDL_egl.h	/^struct EGLClientPixmapHI {$/;"	s
EGLClientPixmapHI::iHeight	/usr/include/SDL2/SDL_egl.h	/^    EGLint iHeight;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::iStride	/usr/include/SDL2/SDL_egl.h	/^    EGLint iStride;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::iWidth	/usr/include/SDL2/SDL_egl.h	/^    EGLint iWidth;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::pData	/usr/include/SDL2/SDL_egl.h	/^    void  *pData;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:void *	access:public
EGLConfig	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLConfig;$/;"	t	typeref:typename:void *
EGLContext	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLContext;$/;"	t	typeref:typename:void *
EGLDeviceEXT	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLDeviceEXT;$/;"	t	typeref:typename:void *
EGLDisplay	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLDisplay;$/;"	t	typeref:typename:void *
EGLGetBlobFuncANDROID	/usr/include/SDL2/SDL_egl.h	/^typedef EGLsizeiANDROID (*EGLGetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, void/;"	t	typeref:typename:EGLsizeiANDROID (*)(const void * key,EGLsizeiANDROID keySize,void * value,EGLsizeiANDROID valueSize)
EGLImage	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLImage;$/;"	t	typeref:typename:void *
EGLImageKHR	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLImageKHR;$/;"	t	typeref:typename:void *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef Display *EGLNativeDisplayType;$/;"	t	typeref:typename:Display *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef HDC     EGLNativeDisplayType;$/;"	t	typeref:typename:HDC
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef IUnknown * EGLNativeDisplayType;$/;"	t	typeref:typename:IUnknown *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef MirEGLNativeDisplayType EGLNativeDisplayType;$/;"	t	typeref:typename:MirEGLNativeDisplayType
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef int   EGLNativeDisplayType;$/;"	t	typeref:typename:int
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef struct gbm_device  *EGLNativeDisplayType;$/;"	t	typeref:struct:gbm_device *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef struct wl_display     *EGLNativeDisplayType;$/;"	t	typeref:struct:wl_display *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef void                        *EGLNativeDisplayType;$/;"	t	typeref:typename:void *
EGLNativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef void            *EGLNativeDisplayType;$/;"	t	typeref:typename:void *
EGLNativeFileDescriptorKHR	/usr/include/SDL2/SDL_egl.h	/^typedef int EGLNativeFileDescriptorKHR;$/;"	t	typeref:typename:int
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef HBITMAP EGLNativePixmapType;$/;"	t	typeref:typename:HBITMAP
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef IUnknown * EGLNativePixmapType;$/;"	t	typeref:typename:IUnknown *
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef Pixmap   EGLNativePixmapType;$/;"	t	typeref:typename:Pixmap
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_uintptr_t EGLNativePixmapType;$/;"	t	typeref:typename:khronos_uintptr_t
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef struct egl_native_pixmap_t  *EGLNativePixmapType;$/;"	t	typeref:struct:egl_native_pixmap_t *
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef struct gbm_bo      *EGLNativePixmapType;$/;"	t	typeref:struct:gbm_bo *
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef struct wl_egl_pixmap  *EGLNativePixmapType;$/;"	t	typeref:struct:wl_egl_pixmap *
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef void                   *EGLNativePixmapType;$/;"	t	typeref:typename:void *
EGLNativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLNativePixmapType;$/;"	t	typeref:typename:void *
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef HWND    EGLNativeWindowType;$/;"	t	typeref:typename:HWND
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef IUnknown * EGLNativeWindowType;$/;"	t	typeref:typename:IUnknown *
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef MirEGLNativeWindowType  EGLNativeWindowType;$/;"	t	typeref:typename:MirEGLNativeWindowType
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef Window   EGLNativeWindowType;$/;"	t	typeref:typename:Window
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_uintptr_t EGLNativeWindowType;$/;"	t	typeref:typename:khronos_uintptr_t
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef struct ANativeWindow        *EGLNativeWindowType;$/;"	t	typeref:struct:ANativeWindow *
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef struct wl_egl_window  *EGLNativeWindowType;$/;"	t	typeref:struct:wl_egl_window *
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef void               *EGLNativeWindowType;$/;"	t	typeref:typename:void *
EGLNativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLNativeWindowType;$/;"	t	typeref:typename:void *
EGLOutputLayerEXT	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLOutputLayerEXT;$/;"	t	typeref:typename:void *
EGLOutputPortEXT	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLOutputPortEXT;$/;"	t	typeref:typename:void *
EGLSetBlobFuncANDROID	/usr/include/SDL2/SDL_egl.h	/^typedef void (*EGLSetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, const void *val/;"	t	typeref:typename:void (*)(const void * key,EGLsizeiANDROID keySize,const void * value,EGLsizeiANDROID valueSize)
EGLStreamKHR	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLStreamKHR;$/;"	t	typeref:typename:void *
EGLSurface	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLSurface;$/;"	t	typeref:typename:void *
EGLSurface	/usr/include/SDL2/SDL_syswm.h	/^typedef void *EGLSurface;$/;"	t	typeref:typename:void *
EGLSync	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLSync;$/;"	t	typeref:typename:void *
EGLSyncKHR	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLSyncKHR;$/;"	t	typeref:typename:void *
EGLSyncNV	/usr/include/SDL2/SDL_egl.h	/^typedef void *EGLSyncNV;$/;"	t	typeref:typename:void *
EGLTime	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTime;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeKHR	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTimeKHR;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeNV	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTimeNV;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGL_ALPHA_FORMAT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALPHA_FORMAT /;"	d
EGL_ALPHA_FORMAT_NONPRE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALPHA_FORMAT_NONPRE /;"	d
EGL_ALPHA_FORMAT_PRE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALPHA_FORMAT_PRE /;"	d
EGL_ALPHA_MASK_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALPHA_MASK_SIZE /;"	d
EGL_ALPHA_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALPHA_SIZE /;"	d
EGL_ALREADY_SIGNALED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ALREADY_SIGNALED_NV /;"	d
EGL_ANDROID_blob_cache	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANDROID_blob_cache /;"	d
EGL_ANDROID_framebuffer_target	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANDROID_framebuffer_target /;"	d
EGL_ANDROID_image_native_buffer	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANDROID_image_native_buffer /;"	d
EGL_ANDROID_native_fence_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANDROID_native_fence_sync /;"	d
EGL_ANDROID_recordable	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANDROID_recordable /;"	d
EGL_ANGLE_d3d_share_handle_client_buffer	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANGLE_d3d_share_handle_client_buffer /;"	d
EGL_ANGLE_device_d3d	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANGLE_device_d3d /;"	d
EGL_ANGLE_query_surface_pointer	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANGLE_query_surface_pointer /;"	d
EGL_ANGLE_surface_d3d_texture_2d_share_handle	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANGLE_surface_d3d_texture_2d_share_handle /;"	d
EGL_ANGLE_window_fixed_size	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ANGLE_window_fixed_size /;"	d
EGL_ARM_pixmap_multisample_discard	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ARM_pixmap_multisample_discard /;"	d
EGL_AUTO_STEREO_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_AUTO_STEREO_NV /;"	d
EGL_BACK_BUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BACK_BUFFER /;"	d
EGL_BAD_ACCESS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_ACCESS /;"	d
EGL_BAD_ALLOC	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_ALLOC /;"	d
EGL_BAD_ATTRIBUTE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_ATTRIBUTE /;"	d
EGL_BAD_CONFIG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_CONFIG /;"	d
EGL_BAD_CONTEXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_CONTEXT /;"	d
EGL_BAD_CURRENT_SURFACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_CURRENT_SURFACE /;"	d
EGL_BAD_DEVICE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_DEVICE_EXT /;"	d
EGL_BAD_DISPLAY	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_DISPLAY /;"	d
EGL_BAD_MATCH	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_MATCH /;"	d
EGL_BAD_NATIVE_PIXMAP	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_NATIVE_PIXMAP /;"	d
EGL_BAD_NATIVE_WINDOW	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_NATIVE_WINDOW /;"	d
EGL_BAD_OUTPUT_LAYER_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_OUTPUT_LAYER_EXT /;"	d
EGL_BAD_OUTPUT_PORT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_OUTPUT_PORT_EXT /;"	d
EGL_BAD_PARAMETER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_PARAMETER /;"	d
EGL_BAD_STATE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_STATE_KHR /;"	d
EGL_BAD_STREAM_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_STREAM_KHR /;"	d
EGL_BAD_SURFACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BAD_SURFACE /;"	d
EGL_BIND_TO_TEXTURE_RGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BIND_TO_TEXTURE_RGB /;"	d
EGL_BIND_TO_TEXTURE_RGBA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BIND_TO_TEXTURE_RGBA /;"	d
EGL_BITMAP_ORIGIN_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_ORIGIN_KHR /;"	d
EGL_BITMAP_PITCH_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PITCH_KHR /;"	d
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_RED_OFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_RED_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_SIZE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_PIXEL_SIZE_KHR /;"	d
EGL_BITMAP_POINTER_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BITMAP_POINTER_KHR /;"	d
EGL_BLUE_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BLUE_SIZE /;"	d
EGL_BUFFER_AGE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BUFFER_AGE_EXT /;"	d
EGL_BUFFER_AGE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BUFFER_AGE_KHR /;"	d
EGL_BUFFER_DESTROYED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BUFFER_DESTROYED /;"	d
EGL_BUFFER_PRESERVED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BUFFER_PRESERVED /;"	d
EGL_BUFFER_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_BUFFER_SIZE /;"	d
EGL_CLIENT_APIS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CLIENT_APIS /;"	d
EGL_CLIENT_PIXMAP_POINTER_HI	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CLIENT_PIXMAP_POINTER_HI /;"	d
EGL_CL_EVENT_HANDLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CL_EVENT_HANDLE /;"	d
EGL_CL_EVENT_HANDLE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CL_EVENT_HANDLE_KHR /;"	d
EGL_COLORSPACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLORSPACE /;"	d
EGL_COLORSPACE_LINEAR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLORSPACE_LINEAR /;"	d
EGL_COLORSPACE_sRGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLORSPACE_sRGB /;"	d
EGL_COLOR_ARGB_HI	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLOR_ARGB_HI /;"	d
EGL_COLOR_BUFFER_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLOR_BUFFER_TYPE /;"	d
EGL_COLOR_FORMAT_HI	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLOR_FORMAT_HI /;"	d
EGL_COLOR_RGBA_HI	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLOR_RGBA_HI /;"	d
EGL_COLOR_RGB_HI	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COLOR_RGB_HI /;"	d
EGL_CONDITION_SATISFIED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONDITION_SATISFIED /;"	d
EGL_CONDITION_SATISFIED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONDITION_SATISFIED_KHR /;"	d
EGL_CONDITION_SATISFIED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONDITION_SATISFIED_NV /;"	d
EGL_CONFIG_CAVEAT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONFIG_CAVEAT /;"	d
EGL_CONFIG_ID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONFIG_ID /;"	d
EGL_CONFORMANT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONFORMANT /;"	d
EGL_CONFORMANT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONFORMANT_KHR /;"	d
EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR /;"	d
EGL_CONSUMER_FRAME_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONSUMER_FRAME_KHR /;"	d
EGL_CONSUMER_LATENCY_USEC_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONSUMER_LATENCY_USEC_KHR /;"	d
EGL_CONTEXT_CLIENT_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_CLIENT_TYPE /;"	d
EGL_CONTEXT_CLIENT_VERSION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_CLIENT_VERSION /;"	d
EGL_CONTEXT_FLAGS_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_FLAGS_KHR /;"	d
EGL_CONTEXT_LOST	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_LOST /;"	d
EGL_CONTEXT_MAJOR_VERSION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_MAJOR_VERSION /;"	d
EGL_CONTEXT_MAJOR_VERSION_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_MAJOR_VERSION_KHR /;"	d
EGL_CONTEXT_MINOR_VERSION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_MINOR_VERSION /;"	d
EGL_CONTEXT_MINOR_VERSION_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_MINOR_VERSION_KHR /;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT /;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT /;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_DEBUG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_DEBUG /;"	d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE /;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_NO_ERROR_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_NO_ERROR_KHR /;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK /;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT /;"	d
EGL_CONTEXT_PRIORITY_HIGH_IMG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_HIGH_IMG /;"	d
EGL_CONTEXT_PRIORITY_LEVEL_IMG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_LEVEL_IMG /;"	d
EGL_CONTEXT_PRIORITY_LOW_IMG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_LOW_IMG /;"	d
EGL_CONTEXT_PRIORITY_MEDIUM_IMG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_MEDIUM_IMG /;"	d
EGL_CORE_NATIVE_ENGINE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CORE_NATIVE_ENGINE /;"	d
EGL_COVERAGE_BUFFERS_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COVERAGE_BUFFERS_NV /;"	d
EGL_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COVERAGE_SAMPLES_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NV /;"	d
EGL_CUDA_DEVICE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CUDA_DEVICE_NV /;"	d
EGL_CUDA_EVENT_HANDLE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_CUDA_EVENT_HANDLE_NV /;"	d
EGL_D3D11_DEVICE_ANGLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_D3D11_DEVICE_ANGLE /;"	d
EGL_D3D9_DEVICE_ANGLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_D3D9_DEVICE_ANGLE /;"	d
EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE /;"	d
EGL_DEFAULT_DISPLAY	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEFAULT_DISPLAY /;"	d
EGL_DEPTH_ENCODING_NONE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NONE_NV /;"	d
EGL_DEPTH_ENCODING_NONLINEAR_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NONLINEAR_NV /;"	d
EGL_DEPTH_ENCODING_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NV /;"	d
EGL_DEPTH_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEPTH_SIZE /;"	d
EGL_DEVICE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DEVICE_EXT /;"	d
EGL_DISCARD_SAMPLES_ARM	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DISCARD_SAMPLES_ARM /;"	d
EGL_DISPLAY_SCALING	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DISPLAY_SCALING /;"	d
EGL_DMA_BUF_PLANE0_FD_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_FD_EXT /;"	d
EGL_DMA_BUF_PLANE0_OFFSET_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE0_PITCH_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_PITCH_EXT /;"	d
EGL_DMA_BUF_PLANE1_FD_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_FD_EXT /;"	d
EGL_DMA_BUF_PLANE1_OFFSET_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE1_PITCH_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_PITCH_EXT /;"	d
EGL_DMA_BUF_PLANE2_FD_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_FD_EXT /;"	d
EGL_DMA_BUF_PLANE2_OFFSET_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE2_PITCH_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_PITCH_EXT /;"	d
EGL_DONT_CARE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DONT_CARE /;"	d
EGL_DRAW	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRAW /;"	d
EGL_DRM_BUFFER_FORMAT_ARGB32_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_FORMAT_ARGB32_MESA /;"	d
EGL_DRM_BUFFER_FORMAT_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_FORMAT_MESA /;"	d
EGL_DRM_BUFFER_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_MESA /;"	d
EGL_DRM_BUFFER_STRIDE_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_STRIDE_MESA /;"	d
EGL_DRM_BUFFER_USE_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_MESA /;"	d
EGL_DRM_BUFFER_USE_SCANOUT_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_SCANOUT_MESA /;"	d
EGL_DRM_BUFFER_USE_SHARE_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_SHARE_MESA /;"	d
EGL_DRM_CONNECTOR_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_CONNECTOR_EXT /;"	d
EGL_DRM_CRTC_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_CRTC_EXT /;"	d
EGL_DRM_DEVICE_FILE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_DEVICE_FILE_EXT /;"	d
EGL_DRM_PLANE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_DRM_PLANE_EXT /;"	d
EGL_EGLEXT_VERSION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EGLEXT_VERSION /;"	d
EGL_EXTENSIONS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXTENSIONS /;"	d
EGL_EXT_buffer_age	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_buffer_age /;"	d
EGL_EXT_client_extensions	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_client_extensions /;"	d
EGL_EXT_create_context_robustness	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_create_context_robustness /;"	d
EGL_EXT_device_base	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_device_base /;"	d
EGL_EXT_device_drm	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_device_drm /;"	d
EGL_EXT_device_enumeration	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_device_enumeration /;"	d
EGL_EXT_device_openwf	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_device_openwf /;"	d
EGL_EXT_device_query	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_device_query /;"	d
EGL_EXT_image_dma_buf_import	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_image_dma_buf_import /;"	d
EGL_EXT_multiview_window	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_multiview_window /;"	d
EGL_EXT_output_base	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_output_base /;"	d
EGL_EXT_output_drm	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_output_drm /;"	d
EGL_EXT_output_openwf	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_output_openwf /;"	d
EGL_EXT_platform_base	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_platform_base /;"	d
EGL_EXT_platform_device	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_platform_device /;"	d
EGL_EXT_platform_wayland	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_platform_wayland /;"	d
EGL_EXT_platform_x11	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_platform_x11 /;"	d
EGL_EXT_protected_surface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_protected_surface /;"	d
EGL_EXT_stream_consumer_egloutput	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_stream_consumer_egloutput /;"	d
EGL_EXT_swap_buffers_with_damage	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_swap_buffers_with_damage /;"	d
EGL_EXT_yuv_surface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_EXT_yuv_surface /;"	d
EGL_FALSE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FALSE /;"	d
EGL_FIXED_SIZE_ANGLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FIXED_SIZE_ANGLE /;"	d
EGL_FOREVER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FOREVER /;"	d
EGL_FOREVER_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FOREVER_KHR /;"	d
EGL_FOREVER_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FOREVER_NV /;"	d
EGL_FORMAT_RGBA_8888_EXACT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FORMAT_RGBA_8888_EXACT_KHR /;"	d
EGL_FORMAT_RGBA_8888_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FORMAT_RGBA_8888_KHR /;"	d
EGL_FORMAT_RGB_565_EXACT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FORMAT_RGB_565_EXACT_KHR /;"	d
EGL_FORMAT_RGB_565_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FORMAT_RGB_565_KHR /;"	d
EGL_FRAMEBUFFER_TARGET_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_FRAMEBUFFER_TARGET_ANDROID /;"	d
EGL_GL_COLORSPACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE /;"	d
EGL_GL_COLORSPACE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE_KHR /;"	d
EGL_GL_COLORSPACE_LINEAR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE_LINEAR /;"	d
EGL_GL_COLORSPACE_LINEAR_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE_LINEAR_KHR /;"	d
EGL_GL_COLORSPACE_SRGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE_SRGB /;"	d
EGL_GL_COLORSPACE_SRGB_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_COLORSPACE_SRGB_KHR /;"	d
EGL_GL_RENDERBUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_RENDERBUFFER /;"	d
EGL_GL_RENDERBUFFER_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_RENDERBUFFER_KHR /;"	d
EGL_GL_TEXTURE_2D	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_2D /;"	d
EGL_GL_TEXTURE_2D_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_2D_KHR /;"	d
EGL_GL_TEXTURE_3D	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_3D /;"	d
EGL_GL_TEXTURE_3D_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_3D_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR /;"	d
EGL_GL_TEXTURE_LEVEL	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_LEVEL /;"	d
EGL_GL_TEXTURE_LEVEL_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_LEVEL_KHR /;"	d
EGL_GL_TEXTURE_ZOFFSET	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_ZOFFSET /;"	d
EGL_GL_TEXTURE_ZOFFSET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GL_TEXTURE_ZOFFSET_KHR /;"	d
EGL_GREEN_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_GREEN_SIZE /;"	d
EGL_HEIGHT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_HEIGHT /;"	d
EGL_HI_clientpixmap	/usr/include/SDL2/SDL_egl.h	/^#define EGL_HI_clientpixmap /;"	d
EGL_HI_colorformats	/usr/include/SDL2/SDL_egl.h	/^#define EGL_HI_colorformats /;"	d
EGL_HORIZONTAL_RESOLUTION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_HORIZONTAL_RESOLUTION /;"	d
EGL_IMAGE_PRESERVED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_IMAGE_PRESERVED /;"	d
EGL_IMAGE_PRESERVED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_IMAGE_PRESERVED_KHR /;"	d
EGL_IMG_context_priority	/usr/include/SDL2/SDL_egl.h	/^#define EGL_IMG_context_priority /;"	d
EGL_ITU_REC2020_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ITU_REC2020_EXT /;"	d
EGL_ITU_REC601_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ITU_REC601_EXT /;"	d
EGL_ITU_REC709_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_ITU_REC709_EXT /;"	d
EGL_KHR_cl_event	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_cl_event /;"	d
EGL_KHR_cl_event2	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_cl_event2 /;"	d
EGL_KHR_client_get_all_proc_addresses	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_client_get_all_proc_addresses /;"	d
EGL_KHR_config_attribs	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_config_attribs /;"	d
EGL_KHR_create_context	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_create_context /;"	d
EGL_KHR_create_context_no_error	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_create_context_no_error /;"	d
EGL_KHR_fence_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_fence_sync /;"	d
EGL_KHR_get_all_proc_addresses	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_get_all_proc_addresses /;"	d
EGL_KHR_gl_colorspace	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_gl_colorspace /;"	d
EGL_KHR_gl_renderbuffer_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_gl_renderbuffer_image /;"	d
EGL_KHR_gl_texture_2D_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_gl_texture_2D_image /;"	d
EGL_KHR_gl_texture_3D_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_gl_texture_3D_image /;"	d
EGL_KHR_gl_texture_cubemap_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_gl_texture_cubemap_image /;"	d
EGL_KHR_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_image /;"	d
EGL_KHR_image_base	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_image_base /;"	d
EGL_KHR_image_pixmap	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_image_pixmap /;"	d
EGL_KHR_lock_surface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_lock_surface /;"	d
EGL_KHR_lock_surface2	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_lock_surface2 /;"	d
EGL_KHR_lock_surface3	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_lock_surface3 /;"	d
EGL_KHR_partial_update	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_partial_update /;"	d
EGL_KHR_platform_android	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_platform_android /;"	d
EGL_KHR_platform_gbm	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_platform_gbm /;"	d
EGL_KHR_platform_wayland	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_platform_wayland /;"	d
EGL_KHR_platform_x11	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_platform_x11 /;"	d
EGL_KHR_reusable_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_reusable_sync /;"	d
EGL_KHR_stream	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream /;"	d
EGL_KHR_stream_consumer_gltexture	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream_consumer_gltexture /;"	d
EGL_KHR_stream_cross_process_fd	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream_cross_process_fd /;"	d
EGL_KHR_stream_fifo	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream_fifo /;"	d
EGL_KHR_stream_producer_aldatalocator	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream_producer_aldatalocator /;"	d
EGL_KHR_stream_producer_eglsurface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_stream_producer_eglsurface /;"	d
EGL_KHR_surfaceless_context	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_surfaceless_context /;"	d
EGL_KHR_swap_buffers_with_damage	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_swap_buffers_with_damage /;"	d
EGL_KHR_vg_parent_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_vg_parent_image /;"	d
EGL_KHR_wait_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_KHR_wait_sync /;"	d
EGL_LARGEST_PBUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LARGEST_PBUFFER /;"	d
EGL_LEVEL	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LEVEL /;"	d
EGL_LINUX_DMA_BUF_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LINUX_DMA_BUF_EXT /;"	d
EGL_LINUX_DRM_FOURCC_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LINUX_DRM_FOURCC_EXT /;"	d
EGL_LOCK_SURFACE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOCK_SURFACE_BIT_KHR /;"	d
EGL_LOCK_USAGE_HINT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOCK_USAGE_HINT_KHR /;"	d
EGL_LOSE_CONTEXT_ON_RESET	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET /;"	d
EGL_LOSE_CONTEXT_ON_RESET_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_EXT /;"	d
EGL_LOSE_CONTEXT_ON_RESET_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_KHR /;"	d
EGL_LOWER_LEFT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LOWER_LEFT_KHR /;"	d
EGL_LUMINANCE_BUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LUMINANCE_BUFFER /;"	d
EGL_LUMINANCE_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_LUMINANCE_SIZE /;"	d
EGL_MAP_PRESERVE_PIXELS_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MAP_PRESERVE_PIXELS_KHR /;"	d
EGL_MATCH_FORMAT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MATCH_FORMAT_KHR /;"	d
EGL_MATCH_NATIVE_PIXMAP	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MATCH_NATIVE_PIXMAP /;"	d
EGL_MAX_PBUFFER_HEIGHT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MAX_PBUFFER_HEIGHT /;"	d
EGL_MAX_PBUFFER_PIXELS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MAX_PBUFFER_PIXELS /;"	d
EGL_MAX_PBUFFER_WIDTH	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MAX_PBUFFER_WIDTH /;"	d
EGL_MAX_SWAP_INTERVAL	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MAX_SWAP_INTERVAL /;"	d
EGL_MESA_drm_image	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MESA_drm_image /;"	d
EGL_MESA_image_dma_buf_export	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MESA_image_dma_buf_export /;"	d
EGL_MESA_platform_gbm	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MESA_platform_gbm /;"	d
EGL_MIN_SWAP_INTERVAL	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MIN_SWAP_INTERVAL /;"	d
EGL_MIPMAP_LEVEL	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MIPMAP_LEVEL /;"	d
EGL_MIPMAP_TEXTURE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MIPMAP_TEXTURE /;"	d
EGL_MULTISAMPLE_RESOLVE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE /;"	d
EGL_MULTISAMPLE_RESOLVE_BOX	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX /;"	d
EGL_MULTISAMPLE_RESOLVE_BOX_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX_BIT /;"	d
EGL_MULTISAMPLE_RESOLVE_DEFAULT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_DEFAULT /;"	d
EGL_MULTIVIEW_VIEW_COUNT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_MULTIVIEW_VIEW_COUNT_EXT /;"	d
EGL_NATIVE_BUFFER_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_BUFFER_ANDROID /;"	d
EGL_NATIVE_BUFFER_TIZEN	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_BUFFER_TIZEN /;"	d
EGL_NATIVE_PIXMAP_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_PIXMAP_KHR /;"	d
EGL_NATIVE_RENDERABLE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_RENDERABLE /;"	d
EGL_NATIVE_SURFACE_TIZEN	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_SURFACE_TIZEN /;"	d
EGL_NATIVE_VISUAL_ID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_VISUAL_ID /;"	d
EGL_NATIVE_VISUAL_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NATIVE_VISUAL_TYPE /;"	d
EGL_NOK_swap_region	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NOK_swap_region /;"	d
EGL_NOK_swap_region2	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NOK_swap_region2 /;"	d
EGL_NOK_texture_from_pixmap	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NOK_texture_from_pixmap /;"	d
EGL_NONE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NONE /;"	d
EGL_NON_CONFORMANT_CONFIG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NON_CONFORMANT_CONFIG /;"	d
EGL_NOT_INITIALIZED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NOT_INITIALIZED /;"	d
EGL_NO_CONTEXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_CONTEXT /;"	d
EGL_NO_DEVICE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_DEVICE_EXT /;"	d
EGL_NO_DISPLAY	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_DISPLAY /;"	d
EGL_NO_FILE_DESCRIPTOR_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_FILE_DESCRIPTOR_KHR /;"	d
EGL_NO_IMAGE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_IMAGE /;"	d
EGL_NO_IMAGE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_IMAGE_KHR /;"	d
EGL_NO_NATIVE_FENCE_FD_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_NATIVE_FENCE_FD_ANDROID /;"	d
EGL_NO_OUTPUT_LAYER_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_OUTPUT_LAYER_EXT /;"	d
EGL_NO_OUTPUT_PORT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_OUTPUT_PORT_EXT /;"	d
EGL_NO_RESET_NOTIFICATION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION /;"	d
EGL_NO_RESET_NOTIFICATION_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION_EXT /;"	d
EGL_NO_RESET_NOTIFICATION_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION_KHR /;"	d
EGL_NO_STREAM_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_STREAM_KHR /;"	d
EGL_NO_SURFACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_SURFACE /;"	d
EGL_NO_SYNC	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_SYNC /;"	d
EGL_NO_SYNC_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_SYNC_KHR /;"	d
EGL_NO_SYNC_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_SYNC_NV /;"	d
EGL_NO_TEXTURE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NO_TEXTURE /;"	d
EGL_NV_3dvision_surface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_3dvision_surface /;"	d
EGL_NV_coverage_sample	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_coverage_sample /;"	d
EGL_NV_coverage_sample_resolve	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_coverage_sample_resolve /;"	d
EGL_NV_cuda_event	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_cuda_event /;"	d
EGL_NV_depth_nonlinear	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_depth_nonlinear /;"	d
EGL_NV_device_cuda	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_device_cuda /;"	d
EGL_NV_native_query	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_native_query /;"	d
EGL_NV_post_convert_rounding	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_post_convert_rounding /;"	d
EGL_NV_post_sub_buffer	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_post_sub_buffer /;"	d
EGL_NV_stream_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_stream_sync /;"	d
EGL_NV_sync	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_sync /;"	d
EGL_NV_system_time	/usr/include/SDL2/SDL_egl.h	/^#define EGL_NV_system_time /;"	d
EGL_OPENGL_API	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_API /;"	d
EGL_OPENGL_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_BIT /;"	d
EGL_OPENGL_ES2_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_ES2_BIT /;"	d
EGL_OPENGL_ES3_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_ES3_BIT /;"	d
EGL_OPENGL_ES3_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_ES3_BIT_KHR /;"	d
EGL_OPENGL_ES_API	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_ES_API /;"	d
EGL_OPENGL_ES_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENGL_ES_BIT /;"	d
EGL_OPENVG_API	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENVG_API /;"	d
EGL_OPENVG_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENVG_BIT /;"	d
EGL_OPENVG_IMAGE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENVG_IMAGE /;"	d
EGL_OPENWF_DEVICE_ID_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENWF_DEVICE_ID_EXT /;"	d
EGL_OPENWF_PIPELINE_ID_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENWF_PIPELINE_ID_EXT /;"	d
EGL_OPENWF_PORT_ID_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPENWF_PORT_ID_EXT /;"	d
EGL_OPTIMAL_FORMAT_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_OPTIMAL_FORMAT_BIT_KHR /;"	d
EGL_PBUFFER_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PBUFFER_BIT /;"	d
EGL_PIXEL_ASPECT_RATIO	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PIXEL_ASPECT_RATIO /;"	d
EGL_PIXMAP_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PIXMAP_BIT /;"	d
EGL_PLATFORM_ANDROID_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_ANDROID_KHR /;"	d
EGL_PLATFORM_DEVICE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_DEVICE_EXT /;"	d
EGL_PLATFORM_GBM_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_GBM_KHR /;"	d
EGL_PLATFORM_GBM_MESA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_GBM_MESA /;"	d
EGL_PLATFORM_WAYLAND_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_WAYLAND_EXT /;"	d
EGL_PLATFORM_WAYLAND_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_WAYLAND_KHR /;"	d
EGL_PLATFORM_X11_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_X11_EXT /;"	d
EGL_PLATFORM_X11_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_X11_KHR /;"	d
EGL_PLATFORM_X11_SCREEN_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_X11_SCREEN_EXT /;"	d
EGL_PLATFORM_X11_SCREEN_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PLATFORM_X11_SCREEN_KHR /;"	d
EGL_POST_SUB_BUFFER_SUPPORTED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_POST_SUB_BUFFER_SUPPORTED_NV /;"	d
EGL_PRODUCER_FRAME_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PRODUCER_FRAME_KHR /;"	d
EGL_PROTECTED_CONTENT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_PROTECTED_CONTENT_EXT /;"	d
EGL_READ	/usr/include/SDL2/SDL_egl.h	/^#define EGL_READ /;"	d
EGL_READ_SURFACE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_READ_SURFACE_BIT_KHR /;"	d
EGL_RECORDABLE_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_RECORDABLE_ANDROID /;"	d
EGL_RED_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_RED_SIZE /;"	d
EGL_RENDERABLE_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_RENDERABLE_TYPE /;"	d
EGL_RENDER_BUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_RENDER_BUFFER /;"	d
EGL_RGB_BUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_RGB_BUFFER /;"	d
EGL_SAMPLES	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SAMPLES /;"	d
EGL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SAMPLE_BUFFERS /;"	d
EGL_SAMPLE_RANGE_HINT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SAMPLE_RANGE_HINT_EXT /;"	d
EGL_SIGNALED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SIGNALED /;"	d
EGL_SIGNALED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SIGNALED_KHR /;"	d
EGL_SIGNALED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SIGNALED_NV /;"	d
EGL_SINGLE_BUFFER	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SINGLE_BUFFER /;"	d
EGL_SLOW_CONFIG	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SLOW_CONFIG /;"	d
EGL_STENCIL_SIZE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STENCIL_SIZE /;"	d
EGL_STREAM_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_BIT_KHR /;"	d
EGL_STREAM_FIFO_LENGTH_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_FIFO_LENGTH_KHR /;"	d
EGL_STREAM_STATE_CONNECTING_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_CONNECTING_KHR /;"	d
EGL_STREAM_STATE_CREATED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_CREATED_KHR /;"	d
EGL_STREAM_STATE_DISCONNECTED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_DISCONNECTED_KHR /;"	d
EGL_STREAM_STATE_EMPTY_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_EMPTY_KHR /;"	d
EGL_STREAM_STATE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_KHR /;"	d
EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR /;"	d
EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR /;"	d
EGL_STREAM_TIME_CONSUMER_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_TIME_CONSUMER_KHR /;"	d
EGL_STREAM_TIME_NOW_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_TIME_NOW_KHR /;"	d
EGL_STREAM_TIME_PRODUCER_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_STREAM_TIME_PRODUCER_KHR /;"	d
EGL_SUCCESS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SUCCESS /;"	d
EGL_SURFACE_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SURFACE_TYPE /;"	d
EGL_SWAP_BEHAVIOR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SWAP_BEHAVIOR /;"	d
EGL_SWAP_BEHAVIOR_PRESERVED_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SWAP_BEHAVIOR_PRESERVED_BIT /;"	d
EGL_SWAP_INTERVAL_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SWAP_INTERVAL_EXT /;"	d
EGL_SYNC_CL_EVENT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CL_EVENT /;"	d
EGL_SYNC_CL_EVENT_COMPLETE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE /;"	d
EGL_SYNC_CL_EVENT_COMPLETE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE_KHR /;"	d
EGL_SYNC_CL_EVENT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_KHR /;"	d
EGL_SYNC_CONDITION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CONDITION /;"	d
EGL_SYNC_CONDITION_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CONDITION_KHR /;"	d
EGL_SYNC_CONDITION_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CONDITION_NV /;"	d
EGL_SYNC_CUDA_EVENT_COMPLETE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CUDA_EVENT_COMPLETE_NV /;"	d
EGL_SYNC_CUDA_EVENT_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_CUDA_EVENT_NV /;"	d
EGL_SYNC_FENCE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FENCE /;"	d
EGL_SYNC_FENCE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FENCE_KHR /;"	d
EGL_SYNC_FENCE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FENCE_NV /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_KHR /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_NV /;"	d
EGL_SYNC_NATIVE_FENCE_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_ANDROID /;"	d
EGL_SYNC_NATIVE_FENCE_FD_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_FD_ANDROID /;"	d
EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID /;"	d
EGL_SYNC_NEW_FRAME_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_NEW_FRAME_NV /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV /;"	d
EGL_SYNC_REUSABLE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_REUSABLE_KHR /;"	d
EGL_SYNC_STATUS	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_STATUS /;"	d
EGL_SYNC_STATUS_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_STATUS_KHR /;"	d
EGL_SYNC_STATUS_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_STATUS_NV /;"	d
EGL_SYNC_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_TYPE /;"	d
EGL_SYNC_TYPE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_TYPE_KHR /;"	d
EGL_SYNC_TYPE_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_SYNC_TYPE_NV /;"	d
EGL_TEXTURE_2D	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TEXTURE_2D /;"	d
EGL_TEXTURE_FORMAT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TEXTURE_FORMAT /;"	d
EGL_TEXTURE_RGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TEXTURE_RGB /;"	d
EGL_TEXTURE_RGBA	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TEXTURE_RGBA /;"	d
EGL_TEXTURE_TARGET	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TEXTURE_TARGET /;"	d
EGL_TIMEOUT_EXPIRED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED /;"	d
EGL_TIMEOUT_EXPIRED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED_KHR /;"	d
EGL_TIMEOUT_EXPIRED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED_NV /;"	d
EGL_TIZEN_image_native_buffer	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TIZEN_image_native_buffer /;"	d
EGL_TIZEN_image_native_surface	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TIZEN_image_native_surface /;"	d
EGL_TRANSPARENT_BLUE_VALUE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRANSPARENT_BLUE_VALUE /;"	d
EGL_TRANSPARENT_GREEN_VALUE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRANSPARENT_GREEN_VALUE /;"	d
EGL_TRANSPARENT_RED_VALUE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRANSPARENT_RED_VALUE /;"	d
EGL_TRANSPARENT_RGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRANSPARENT_RGB /;"	d
EGL_TRANSPARENT_TYPE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRANSPARENT_TYPE /;"	d
EGL_TRUE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_TRUE /;"	d
EGL_UNKNOWN	/usr/include/SDL2/SDL_egl.h	/^#define EGL_UNKNOWN /;"	d
EGL_UNSIGNALED	/usr/include/SDL2/SDL_egl.h	/^#define EGL_UNSIGNALED /;"	d
EGL_UNSIGNALED_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_UNSIGNALED_KHR /;"	d
EGL_UNSIGNALED_NV	/usr/include/SDL2/SDL_egl.h	/^#define EGL_UNSIGNALED_NV /;"	d
EGL_UPPER_LEFT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_UPPER_LEFT_KHR /;"	d
EGL_VENDOR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VENDOR /;"	d
EGL_VERSION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION /;"	d
EGL_VERSION_1_0	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_0 /;"	d
EGL_VERSION_1_1	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_1 /;"	d
EGL_VERSION_1_2	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_2 /;"	d
EGL_VERSION_1_3	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_3 /;"	d
EGL_VERSION_1_4	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_4 /;"	d
EGL_VERSION_1_5	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERSION_1_5 /;"	d
EGL_VERTICAL_RESOLUTION	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VERTICAL_RESOLUTION /;"	d
EGL_VG_ALPHA_FORMAT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT /;"	d
EGL_VG_ALPHA_FORMAT_NONPRE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_NONPRE /;"	d
EGL_VG_ALPHA_FORMAT_PRE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE /;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT /;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR /;"	d
EGL_VG_COLORSPACE	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_COLORSPACE /;"	d
EGL_VG_COLORSPACE_LINEAR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR /;"	d
EGL_VG_COLORSPACE_LINEAR_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT /;"	d
EGL_VG_COLORSPACE_LINEAR_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT_KHR /;"	d
EGL_VG_COLORSPACE_sRGB	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_COLORSPACE_sRGB /;"	d
EGL_VG_PARENT_IMAGE_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_VG_PARENT_IMAGE_KHR /;"	d
EGL_WIDTH	/usr/include/SDL2/SDL_egl.h	/^#define EGL_WIDTH /;"	d
EGL_WINDOW_BIT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_WINDOW_BIT /;"	d
EGL_WRITE_SURFACE_BIT_KHR	/usr/include/SDL2/SDL_egl.h	/^#define EGL_WRITE_SURFACE_BIT_KHR /;"	d
EGL_YUV_BUFFER_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_BUFFER_EXT /;"	d
EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT /;"	d
EGL_YUV_CHROMA_SITING_0_5_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CHROMA_SITING_0_5_EXT /;"	d
EGL_YUV_CHROMA_SITING_0_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CHROMA_SITING_0_EXT /;"	d
EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT /;"	d
EGL_YUV_COLOR_SPACE_HINT_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_COLOR_SPACE_HINT_EXT /;"	d
EGL_YUV_CSC_STANDARD_2020_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_2020_EXT /;"	d
EGL_YUV_CSC_STANDARD_601_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_601_EXT /;"	d
EGL_YUV_CSC_STANDARD_709_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_709_EXT /;"	d
EGL_YUV_CSC_STANDARD_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_EXT /;"	d
EGL_YUV_DEPTH_RANGE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_EXT /;"	d
EGL_YUV_DEPTH_RANGE_FULL_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_FULL_EXT /;"	d
EGL_YUV_DEPTH_RANGE_LIMITED_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_LIMITED_EXT /;"	d
EGL_YUV_FULL_RANGE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_FULL_RANGE_EXT /;"	d
EGL_YUV_NARROW_RANGE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_NARROW_RANGE_EXT /;"	d
EGL_YUV_NUMBER_OF_PLANES_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_NUMBER_OF_PLANES_EXT /;"	d
EGL_YUV_ORDER_AYUV_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_AYUV_EXT /;"	d
EGL_YUV_ORDER_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_EXT /;"	d
EGL_YUV_ORDER_UYVY_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_UYVY_EXT /;"	d
EGL_YUV_ORDER_VYUY_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_VYUY_EXT /;"	d
EGL_YUV_ORDER_YUV_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_YUV_EXT /;"	d
EGL_YUV_ORDER_YUYV_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_YUYV_EXT /;"	d
EGL_YUV_ORDER_YVU_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_YVU_EXT /;"	d
EGL_YUV_ORDER_YVYU_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_ORDER_YVYU_EXT /;"	d
EGL_YUV_PLANE_BPP_0_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_0_EXT /;"	d
EGL_YUV_PLANE_BPP_10_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_10_EXT /;"	d
EGL_YUV_PLANE_BPP_8_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_8_EXT /;"	d
EGL_YUV_PLANE_BPP_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_2_0_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_2_0_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_2_2_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_2_2_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_4_4_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_4_4_EXT /;"	d
EGL_YUV_SUBSAMPLE_EXT	/usr/include/SDL2/SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_EXT /;"	d
EGL_Y_INVERTED_NOK	/usr/include/SDL2/SDL_egl.h	/^#define EGL_Y_INVERTED_NOK /;"	d
EGLenum	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned int EGLenum;$/;"	t	typeref:typename:unsigned int
EGLint	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_int32_t EGLint;$/;"	t	typeref:typename:khronos_int32_t
EGLsizeiANDROID	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_ssize_t EGLsizeiANDROID;$/;"	t	typeref:typename:khronos_ssize_t
EGLuint64KHR	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_uint64_t EGLuint64KHR;$/;"	t	typeref:typename:khronos_uint64_t
EGLuint64NV	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLuint64NV;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
FONT_CHARACTER_SIZE	/usr/include/SDL2/SDL_test_font.h	/^#define FONT_CHARACTER_SIZE /;"	d
FPS_DEFAULT	/usr/include/SDL2/SDL2_framerate.h	/^#define FPS_DEFAULT	/;"	d
FPS_LOWER_LIMIT	/usr/include/SDL2/SDL2_framerate.h	/^#define FPS_LOWER_LIMIT	/;"	d
FPS_UPPER_LIMIT	/usr/include/SDL2/SDL2_framerate.h	/^#define FPS_UPPER_LIMIT	/;"	d
FPSmanager	/usr/include/SDL2/SDL2_framerate.h	/^	} FPSmanager;$/;"	t	typeref:struct:__anon04d11f350108
GLAPI	/usr/include/SDL2/SDL_opengl.h	/^#    define GLAPI /;"	d
GLAPI	/usr/include/SDL2/SDL_opengl.h	/^#  define GLAPI /;"	d
GLAPI	/usr/include/SDL2/SDL_opengl.h	/^#define GLAPI /;"	d
GLAPI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GLAPI /;"	d
GLAPIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#    define GLAPIENTRY /;"	d
GLAPIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#  define GLAPIENTRY /;"	d
GLAPIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#  define GLAPIENTRY$/;"	d
GLAPIENTRY	/usr/include/SDL2/SDL_opengl.h	/^#define GLAPIENTRY$/;"	d
GLAPIENTRYP	/usr/include/SDL2/SDL_opengl.h	/^#define GLAPIENTRYP /;"	d
GLDEBUGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengt/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,G/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLEXT_64_TYPES_DEFINED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GL_1PASS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_1PASS_SGIS /;"	d
GL_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_2D	/;"	d
GL_2PASS_0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_2X_BIT_ATI /;"	d
GL_2_BYTES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_2_BYTES	/;"	d
GL_3D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_3D	/;"	d
GL_3DC_XY_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_3DC_XY_AMD /;"	d
GL_3DC_X_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_3DC_X_AMD /;"	d
GL_3DFX_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_3D_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_3D_COLOR	/;"	d
GL_3D_COLOR_TEXTURE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_3D_COLOR_TEXTURE	/;"	d
GL_3_BYTES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_3_BYTES	/;"	d
GL_422_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_422_REV_EXT /;"	d
GL_4D_COLOR_TEXTURE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_4D_COLOR_TEXTURE	/;"	d
GL_4PASS_0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_4X_BIT_ATI /;"	d
GL_4_BYTES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_4_BYTES	/;"	d
GL_8X_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM	/;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACCUM_ALPHA_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_ALPHA_BITS	/;"	d
GL_ACCUM_BLUE_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_BLUE_BITS	/;"	d
GL_ACCUM_BUFFER_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_BUFFER_BIT	/;"	d
GL_ACCUM_CLEAR_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_CLEAR_VALUE	/;"	d
GL_ACCUM_GREEN_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_GREEN_BITS	/;"	d
GL_ACCUM_RED_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACCUM_RED_BITS	/;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTES	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_PROGRAM_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE	/;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE_ARB	/;"	d
GL_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ADD	/;"	d
GL_ADD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ADD_SIGNED	/;"	d
GL_ADD_SIGNED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE	/;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALIASED_POINT_SIZE_RANGE	/;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_ATTRIB_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALL_ATTRIB_BITS	/;"	d
GL_ALL_BARRIER_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_CLIENT_ATTRIB_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALL_CLIENT_ATTRIB_BITS /;"	d
GL_ALL_COMPLETED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_COMPLETED_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_SHADER_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_SHADER_BITS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALL_SHADER_BITS_EXT /;"	d
GL_ALL_STATIC_DATA_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA	/;"	d
GL_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ALPHA /;"	d
GL_ALPHA12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA12	/;"	d
GL_ALPHA12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA16	/;"	d
GL_ALPHA16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA16F_EXT /;"	d
GL_ALPHA16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA32F_EXT /;"	d
GL_ALPHA32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA4	/;"	d
GL_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA8	/;"	d
GL_ALPHA8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA8_OES /;"	d
GL_ALPHA8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_BIAS	/;"	d
GL_ALPHA_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_BITS	/;"	d
GL_ALPHA_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ALPHA_BITS /;"	d
GL_ALPHA_BLEND_EQUATION_ATI	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_BLEND_EQUATION_ATI	/;"	d
GL_ALPHA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_SCALE	/;"	d
GL_ALPHA_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALPHA_TEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_TEST	/;"	d
GL_ALPHA_TEST_FUNC	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_TEST_FUNC	/;"	d
GL_ALPHA_TEST_FUNC_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_FUNC_QCOM /;"	d
GL_ALPHA_TEST_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_QCOM /;"	d
GL_ALPHA_TEST_REF	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALPHA_TEST_REF	/;"	d
GL_ALPHA_TEST_REF_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_REF_QCOM /;"	d
GL_ALREADY_SIGNALED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALREADY_SIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ALREADY_SIGNALED_APPLE /;"	d
GL_ALWAYS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ALWAYS	/;"	d
GL_ALWAYS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ALWAYS /;"	d
GL_ALWAYS_FAST_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMBIENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AMBIENT	/;"	d
GL_AMBIENT_AND_DIFFUSE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AMBIENT_AND_DIFFUSE	/;"	d
GL_AMD_blend_minmax_factor	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_compressed_3DC_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_AMD_compressed_3DC_texture /;"	d
GL_AMD_compressed_ATC_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_AMD_compressed_ATC_texture /;"	d
GL_AMD_conservative_depth	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_gcn_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_gcn_shader /;"	d
GL_AMD_gpu_shader_int64	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_gpu_shader_int64 /;"	d
GL_AMD_interleaved_elements	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_performance_monitor	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_program_binary_Z400	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_AMD_program_binary_Z400 /;"	d
GL_AMD_query_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_stencil_export	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_trinary_minmax	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_texture4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_transform_feedback4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_transform_feedback4 /;"	d
GL_AMD_vertex_shader_layer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_AND	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AND	/;"	d
GL_AND_INVERTED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AND_INVERTED	/;"	d
GL_AND_REVERSE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AND_REVERSE	/;"	d
GL_ANGLE_depth_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_depth_texture /;"	d
GL_ANGLE_framebuffer_blit	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_framebuffer_blit /;"	d
GL_ANGLE_framebuffer_multisample	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_framebuffer_multisample /;"	d
GL_ANGLE_instanced_arrays	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_instanced_arrays /;"	d
GL_ANGLE_pack_reverse_row_order	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_pack_reverse_row_order /;"	d
GL_ANGLE_program_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_program_binary /;"	d
GL_ANGLE_texture_compression_dxt3	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_compression_dxt3 /;"	d
GL_ANGLE_texture_compression_dxt5	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_compression_dxt5 /;"	d
GL_ANGLE_texture_usage	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_usage /;"	d
GL_ANGLE_translated_shader_source	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_translated_shader_source /;"	d
GL_ANY_SAMPLES_PASSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT /;"	d
GL_ANY_SAMPLES_PASSED_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ANY_SAMPLES_PASSED_EXT /;"	d
GL_APICALL	/usr/include/SDL2/SDL_opengles2_gl2platform.h	/^#define GL_APICALL /;"	d
GL_APIENTRY	/usr/include/SDL2/SDL_opengles2_gl2platform.h	/^#define GL_APIENTRY /;"	d
GL_APIENTRYP	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#   define GL_APIENTRYP /;"	d
GL_APPLE_aux_depth_stencil	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_copy_texture_levels	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_copy_texture_levels /;"	d
GL_APPLE_element_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_framebuffer_multisample	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_framebuffer_multisample /;"	d
GL_APPLE_object_purgeable	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_rgb_422	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_rgb_422	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_sync	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_sync /;"	d
GL_APPLE_texture_format_BGRA8888	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_texture_format_BGRA8888 /;"	d
GL_APPLE_texture_max_level	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_APPLE_texture_max_level /;"	d
GL_APPLE_texture_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_compatibility	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_color_buffer_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conservative_depth	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_debug_output	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_draw_buffers	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_framebuffer_no_attachments	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_gpu_shader5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_pixel	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_imaging	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_multitexture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_pixel_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_program_interface_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_shading	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_draw_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_lod	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shading_language_100	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_stencil_texturing	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_border_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transpose_matrix	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARM_mali_program_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ARM_mali_program_binary /;"	d
GL_ARM_mali_shader_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ARM_mali_shader_binary /;"	d
GL_ARM_rgba8	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ARM_rgba8 /;"	d
GL_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD /;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD /;"	d
GL_ATC_RGB_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGB_AMD /;"	d
GL_ATI_blend_equation_separate	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ATI_blend_equation_separate /;"	d
GL_ATI_draw_buffers	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pixel_format_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_pixel_format_float /;"	d
GL_ATI_pn_triangles	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_text_fragment_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_env_combine3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTACHED_SHADERS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_ATTRIB_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ATTRIB_STACK_DEPTH	/;"	d
GL_AUTO_GENERATE_MIPMAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUTO_NORMAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUTO_NORMAL	/;"	d
GL_AUX0	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUX0	/;"	d
GL_AUX1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUX1	/;"	d
GL_AUX2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUX2	/;"	d
GL_AUX3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUX3	/;"	d
GL_AUX_BUFFERS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_AUX_BUFFERS	/;"	d
GL_AUX_DEPTH_STENCIL_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AVERAGE_EXT /;"	d
GL_AVERAGE_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_AVERAGE_HP /;"	d
GL_BACK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BACK	/;"	d
GL_BACK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BACK_LEFT	/;"	d
GL_BACK_NORMALS_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_RIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BACK_RIGHT	/;"	d
GL_BACK_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BEVEL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BGR	/;"	d
GL_BGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGR /;"	d
GL_BGRA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BGRA	/;"	d
GL_BGRA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGRA /;"	d
GL_BGRA8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BGRA8_EXT /;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BGRA_IMG /;"	d
GL_BGRA_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BIAS_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINNING_CONTROL_HINT_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BINNING_CONTROL_HINT_QCOM /;"	d
GL_BINORMAL_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BITMAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BITMAP	/;"	d
GL_BITMAP_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BITMAP_TOKEN	/;"	d
GL_BLEND	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLEND	/;"	d
GL_BLEND	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLEND_COLOR	/;"	d
GL_BLEND_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLEND_DST	/;"	d
GL_BLEND_DST_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLEND_EQUATION	/;"	d
GL_BLEND_EQUATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_OVERLAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLEND_SRC	/;"	d
GL_BLEND_SRC_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLOCK_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLUE	/;"	d
GL_BLUE_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLUE_BIAS	/;"	d
GL_BLUE_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLUE_BITS	/;"	d
GL_BLUE_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BLUE_BITS /;"	d
GL_BLUE_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BLUE_NV /;"	d
GL_BLUE_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BLUE_SCALE	/;"	d
GL_BOLD_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL /;"	d
GL_BOOL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_ACCESS_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_ACCESS_OES /;"	d
GL_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_KHR /;"	d
GL_BUFFER_MAPPED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAPPED_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_MAPPED_OES /;"	d
GL_BUFFER_MAP_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_MAP_POINTER_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_MAP_POINTER_OES /;"	d
GL_BUFFER_OBJECT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_BYTE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_BYTE	/;"	d
GL_BYTE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_BYTE /;"	d
GL_C3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_C3F_V3F	/;"	d
GL_C4F_N3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_C4F_N3F_V3F	/;"	d
GL_C4UB_V2F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_C4UB_V2F	/;"	d
GL_C4UB_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_C4UB_V3F	/;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	d
GL_CAVEAT_SUPPORT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CCW	/;"	d
GL_CCW	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CCW /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLAMP	/;"	d
GL_CLAMP_FRAGMENT_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLAMP_TO_BORDER	/;"	d
GL_CLAMP_TO_BORDER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CLAMP_TO_BORDER_NV /;"	d
GL_CLAMP_TO_BORDER_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLAMP_TO_EDGE	/;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLEAR	/;"	d
GL_CLEAR_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE	/;"	d
GL_CLIENT_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB	/;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_ALL_ATTRIB_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_ALL_ATTRIB_BITS /;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_ATTRIB_STACK_DEPTH	/;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_PIXEL_STORE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_PIXEL_STORE_BIT	/;"	d
GL_CLIENT_STORAGE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIENT_VERTEX_ARRAY_BIT	/;"	d
GL_CLIP_DISTANCE0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_DISTANCE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_PLANE0	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE0	/;"	d
GL_CLIP_PLANE1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE1	/;"	d
GL_CLIP_PLANE2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE2	/;"	d
GL_CLIP_PLANE3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE3	/;"	d
GL_CLIP_PLANE4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE4	/;"	d
GL_CLIP_PLANE5	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CLIP_PLANE5	/;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CND_ATI /;"	d
GL_COEFF	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COEFF	/;"	d
GL_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR	/;"	d
GL_COLOR3_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_ARRAY	/;"	d
GL_COLOR_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_ARRAY_POINTER	/;"	d
GL_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_ARRAY_SIZE	/;"	d
GL_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_ARRAY_STRIDE	/;"	d
GL_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_ARRAY_TYPE	/;"	d
GL_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT0_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT0_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT0_NV /;"	d
GL_COLOR_ATTACHMENT1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT10_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT10_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT10_NV /;"	d
GL_COLOR_ATTACHMENT11	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT11_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT11_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT11_NV /;"	d
GL_COLOR_ATTACHMENT12	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT12_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT12_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT12_NV /;"	d
GL_COLOR_ATTACHMENT13	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT13_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT13_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT13_NV /;"	d
GL_COLOR_ATTACHMENT14	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT14_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT14_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT14_NV /;"	d
GL_COLOR_ATTACHMENT15	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT15_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT15_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT15_NV /;"	d
GL_COLOR_ATTACHMENT1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT1_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT1_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT1_NV /;"	d
GL_COLOR_ATTACHMENT2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT2_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT2_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT2_NV /;"	d
GL_COLOR_ATTACHMENT3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT3_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT3_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT3_NV /;"	d
GL_COLOR_ATTACHMENT4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT4_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT4_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT4_NV /;"	d
GL_COLOR_ATTACHMENT5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT5_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT5_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT5_NV /;"	d
GL_COLOR_ATTACHMENT6	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT6_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT6_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT6_NV /;"	d
GL_COLOR_ATTACHMENT7	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT7_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT7_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT7_NV /;"	d
GL_COLOR_ATTACHMENT8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT8_NV /;"	d
GL_COLOR_ATTACHMENT9	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_ATTACHMENT9_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_ATTACHMENT9_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT9_NV /;"	d
GL_COLOR_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT_EXT /;"	d
GL_COLOR_BUFFER_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_BUFFER_BIT	/;"	d
GL_COLOR_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT0_QCOM /;"	d
GL_COLOR_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT1_QCOM /;"	d
GL_COLOR_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT2_QCOM /;"	d
GL_COLOR_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT3_QCOM /;"	d
GL_COLOR_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT4_QCOM /;"	d
GL_COLOR_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT5_QCOM /;"	d
GL_COLOR_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT6_QCOM /;"	d
GL_COLOR_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT7_QCOM /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_CLEAR_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_CLEAR_VALUE	/;"	d
GL_COLOR_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COLOR_EXT /;"	d
GL_COLOR_FLOAT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_INDEX	/;"	d
GL_COLOR_INDEX12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_INDEXES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_INDEXES	/;"	d
GL_COLOR_LOGIC_OP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_LOGIC_OP	/;"	d
GL_COLOR_MATERIAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_MATERIAL	/;"	d
GL_COLOR_MATERIAL_FACE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_MATERIAL_FACE	/;"	d
GL_COLOR_MATERIAL_PARAMETER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_MATERIAL_PARAMETER	/;"	d
GL_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_MATRIX	/;"	d
GL_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH	/;"	d
GL_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE	/;"	d
GL_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE	/;"	d
GL_COLOR_TABLE_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_BIAS	/;"	d
GL_COLOR_TABLE_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_BLUE_SIZE	/;"	d
GL_COLOR_TABLE_BLUE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_FORMAT	/;"	d
GL_COLOR_TABLE_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_GREEN_SIZE	/;"	d
GL_COLOR_TABLE_GREEN_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE	/;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE	/;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_RED_SIZE	/;"	d
GL_COLOR_TABLE_RED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_SCALE	/;"	d
GL_COLOR_TABLE_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_TABLE_WIDTH	/;"	d
GL_COLOR_TABLE_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COLOR_WRITEMASK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COLOR_WRITEMASK	/;"	d
GL_COLOR_WRITEMASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMBINE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMBINE	/;"	d
GL_COMBINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMBINE_ALPHA	/;"	d
GL_COMBINE_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMBINE_RGB	/;"	d
GL_COMBINE_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_REF_TO_TEXTURE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPARE_REF_TO_TEXTURE_EXT /;"	d
GL_COMPARE_R_TO_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPILE	/;"	d
GL_COMPILE_AND_EXECUTE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPILE_AND_EXECUTE	/;"	d
GL_COMPILE_STATUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPILE_STATUS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_ALPHA	/;"	d
GL_COMPRESSED_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_INTENSITY	/;"	d
GL_COMPRESSED_INTENSITY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE	/;"	d
GL_COMPRESSED_LUMINANCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA	/;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_R11_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_RGB	/;"	d
GL_COMPRESSED_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA	/;"	d
GL_COMPRESSED_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV /;"	d
GL_COMPRESSED_SRGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS	/;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONDITION_SATISFIED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CONDITION_SATISFIED_APPLE /;"	d
GL_CONJOINT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONSTANT	/;"	d
GL_CONSTANT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONSTANT_ALPHA	/;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_ATTENUATION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONSTANT_ATTENUATION	/;"	d
GL_CONSTANT_BORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONSTANT_BORDER	/;"	d
GL_CONSTANT_BORDER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_BORDER_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_BORDER_HP /;"	d
GL_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONSTANT_COLOR	/;"	d
GL_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_PROFILE_MASK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_CONTEXT_ROBUST_ACCESS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CONTEXT_ROBUST_ACCESS_EXT /;"	d
GL_CONTINUOUS_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_1D	/;"	d
GL_CONVOLUTION_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_2D	/;"	d
GL_CONVOLUTION_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_COLOR	/;"	d
GL_CONVOLUTION_BORDER_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	d
GL_CONVOLUTION_BORDER_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_MODE	/;"	d
GL_CONVOLUTION_BORDER_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_BIAS	/;"	d
GL_CONVOLUTION_FILTER_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_SCALE	/;"	d
GL_CONVOLUTION_FILTER_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_FORMAT	/;"	d
GL_CONVOLUTION_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_HEIGHT	/;"	d
GL_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CONVOLUTION_WIDTH	/;"	d
GL_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_10_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_10_ATI /;"	d
GL_CON_11_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_11_ATI /;"	d
GL_CON_12_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_12_ATI /;"	d
GL_CON_13_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_13_ATI /;"	d
GL_CON_14_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_14_ATI /;"	d
GL_CON_15_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_15_ATI /;"	d
GL_CON_16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_16_ATI /;"	d
GL_CON_17_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_17_ATI /;"	d
GL_CON_18_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_18_ATI /;"	d
GL_CON_19_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_19_ATI /;"	d
GL_CON_1_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_20_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_20_ATI /;"	d
GL_CON_21_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_21_ATI /;"	d
GL_CON_22_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_22_ATI /;"	d
GL_CON_23_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_23_ATI /;"	d
GL_CON_24_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_24_ATI /;"	d
GL_CON_25_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_25_ATI /;"	d
GL_CON_26_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_26_ATI /;"	d
GL_CON_27_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_27_ATI /;"	d
GL_CON_28_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_28_ATI /;"	d
GL_CON_29_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_29_ATI /;"	d
GL_CON_2_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_30_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_30_ATI /;"	d
GL_CON_31_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_31_ATI /;"	d
GL_CON_3_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_7_ATI /;"	d
GL_CON_8_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_8_ATI /;"	d
GL_CON_9_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CON_9_ATI /;"	d
GL_COORD_REPLACE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COPY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COPY	/;"	d
GL_COPY_INVERTED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COPY_INVERTED	/;"	d
GL_COPY_PIXEL_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_COPY_PIXEL_TOKEN	/;"	d
GL_COPY_READ_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COUNTER_RANGE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_RANGE_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNTER_TYPE_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_COUNT_UP_NV /;"	d
GL_COVERAGE_ALL_FRAGMENTS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_ALL_FRAGMENTS_NV /;"	d
GL_COVERAGE_ATTACHMENT_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_ATTACHMENT_NV /;"	d
GL_COVERAGE_AUTOMATIC_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_AUTOMATIC_NV /;"	d
GL_COVERAGE_BUFFERS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_BUFFERS_NV /;"	d
GL_COVERAGE_BUFFER_BIT_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_BUFFER_BIT_NV /;"	d
GL_COVERAGE_COMPONENT4_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_COMPONENT4_NV /;"	d
GL_COVERAGE_COMPONENT_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_COMPONENT_NV /;"	d
GL_COVERAGE_EDGE_FRAGMENTS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_EDGE_FRAGMENTS_NV /;"	d
GL_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_SAMPLES_NV /;"	d
GL_CPU_OPTIMIZED_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CPU_OPTIMIZED_QCOM /;"	d
GL_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CUBIC_HP /;"	d
GL_CULL_FACE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CULL_FACE	/;"	d
GL_CULL_FACE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CULL_FACE_MODE	/;"	d
GL_CULL_FACE_MODE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CULL_FRAGMENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_BIT	/;"	d
GL_CURRENT_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_COLOR	/;"	d
GL_CURRENT_FOG_COORD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_INDEX	/;"	d
GL_CURRENT_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_NORMAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_NORMAL	/;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_PROGRAM	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_QUERY_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_CURRENT_QUERY_EXT /;"	d
GL_CURRENT_RASTER_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_COLOR	/;"	d
GL_CURRENT_RASTER_DISTANCE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_DISTANCE	/;"	d
GL_CURRENT_RASTER_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_INDEX	/;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	d
GL_CURRENT_RASTER_POSITION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_POSITION	/;"	d
GL_CURRENT_RASTER_POSITION_VALID	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_POSITION_VALID	/;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_RASTER_TEXTURE_COORDS	/;"	d
GL_CURRENT_SECONDARY_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TEXTURE_COORDS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CURRENT_TEXTURE_COORDS	/;"	d
GL_CURRENT_TIME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_CW	/usr/include/SDL2/SDL_opengl.h	/^#define GL_CW	/;"	d
GL_CW	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_CW /;"	d
GL_DARKEN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_FUNCTION_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_KHR /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_KHR /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_GROUP_STACK_DEPTH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH_KHR /;"	d
GL_DEBUG_LOGGED_MESSAGES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_LOGGED_MESSAGES_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_KHR /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR /;"	d
GL_DEBUG_OUTPUT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_OUTPUT_KHR /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR /;"	d
GL_DEBUG_SEVERITY_HIGH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_HIGH_KHR /;"	d
GL_DEBUG_SEVERITY_LOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_LOW_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_LOW_KHR /;"	d
GL_DEBUG_SEVERITY_MEDIUM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_KHR /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR /;"	d
GL_DEBUG_SOURCE_API	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_API_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_API_KHR /;"	d
GL_DEBUG_SOURCE_APPLICATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_KHR /;"	d
GL_DEBUG_SOURCE_OTHER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_OTHER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_OTHER_KHR /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR /;"	d
GL_DEBUG_TYPE_ERROR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_ERROR_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_ERROR_KHR /;"	d
GL_DEBUG_TYPE_MARKER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_MARKER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_MARKER_KHR /;"	d
GL_DEBUG_TYPE_OTHER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_OTHER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_OTHER_KHR /;"	d
GL_DEBUG_TYPE_PERFORMANCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_KHR /;"	d
GL_DEBUG_TYPE_POP_GROUP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_POP_GROUP_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_POP_GROUP_KHR /;"	d
GL_DEBUG_TYPE_PORTABILITY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PORTABILITY_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_KHR /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_PUSH_GROUP_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP_KHR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR /;"	d
GL_DECAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DECAL	/;"	d
GL_DECODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DECODE_EXT /;"	d
GL_DECODE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DECR	/;"	d
GL_DECR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEFORMATIONS_MASK_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	d
GL_DELETE_STATUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DELETE_STATUS /;"	d
GL_DELETE_STATUS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH	/;"	d
GL_DEPTH24_STENCIL8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH24_STENCIL8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH24_STENCIL8_OES /;"	d
GL_DEPTH32F_STENCIL8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_BIAS	/;"	d
GL_DEPTH_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_BITS	/;"	d
GL_DEPTH_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_BITS /;"	d
GL_DEPTH_BOUNDS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_BUFFER_BIT	/;"	d
GL_DEPTH_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT0_QCOM /;"	d
GL_DEPTH_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT1_QCOM /;"	d
GL_DEPTH_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT2_QCOM /;"	d
GL_DEPTH_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT3_QCOM /;"	d
GL_DEPTH_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT4_QCOM /;"	d
GL_DEPTH_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT5_QCOM /;"	d
GL_DEPTH_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT6_QCOM /;"	d
GL_DEPTH_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT7_QCOM /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_FAR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_CLEAR_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_CLEAR_VALUE	/;"	d
GL_DEPTH_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT	/;"	d
GL_DEPTH_COMPONENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_NONLINEAR_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16_NONLINEAR_NV /;"	d
GL_DEPTH_COMPONENT16_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16_OES /;"	d
GL_DEPTH_COMPONENT16_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT24_OES /;"	d
GL_DEPTH_COMPONENT24_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT32_OES /;"	d
GL_DEPTH_COMPONENT32_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_EXT /;"	d
GL_DEPTH_FUNC	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_FUNC	/;"	d
GL_DEPTH_FUNC	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_RANGE	/;"	d
GL_DEPTH_RANGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_SCALE	/;"	d
GL_DEPTH_STENCIL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_MESA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_STENCIL_MESA	/;"	d
GL_DEPTH_STENCIL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_STENCIL_OES /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_TEST	/;"	d
GL_DEPTH_TEST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_TEXTURE_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DEPTH_WRITEMASK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DEPTH_WRITEMASK	/;"	d
GL_DEPTH_WRITEMASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	d
GL_DETAIL_TEXTURE_2D_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	d
GL_DIFFERENCE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DIFFUSE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DIFFUSE	/;"	d
GL_DISCARD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DISTANCE_ATTENUATION_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	d
GL_DITHER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DITHER	/;"	d
GL_DITHER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DITHER /;"	d
GL_DMP_shader_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DMP_shader_binary /;"	d
GL_DOMAIN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DOMAIN	/;"	d
GL_DONT_CARE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DONT_CARE	/;"	d
GL_DONT_CARE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DONT_CARE /;"	d
GL_DOT2_ADD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DOT3_RGB	/;"	d
GL_DOT3_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DOT3_RGBA	/;"	d
GL_DOT3_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DOUBLE	/;"	d
GL_DOUBLEBUFFER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DOUBLEBUFFER	/;"	d
GL_DOUBLE_MAT2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DRAW_BUFFER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DRAW_BUFFER	/;"	d
GL_DRAW_BUFFER0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER0_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER0_EXT /;"	d
GL_DRAW_BUFFER0_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER0_NV /;"	d
GL_DRAW_BUFFER1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER10_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER10_EXT /;"	d
GL_DRAW_BUFFER10_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER10_NV /;"	d
GL_DRAW_BUFFER11	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER11_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER11_EXT /;"	d
GL_DRAW_BUFFER11_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER11_NV /;"	d
GL_DRAW_BUFFER12	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER12_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER12_EXT /;"	d
GL_DRAW_BUFFER12_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER12_NV /;"	d
GL_DRAW_BUFFER13	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER13_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER13_EXT /;"	d
GL_DRAW_BUFFER13_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER13_NV /;"	d
GL_DRAW_BUFFER14	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER14_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER14_EXT /;"	d
GL_DRAW_BUFFER14_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER14_NV /;"	d
GL_DRAW_BUFFER15	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER15_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER15_EXT /;"	d
GL_DRAW_BUFFER15_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER15_NV /;"	d
GL_DRAW_BUFFER1_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER1_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER1_EXT /;"	d
GL_DRAW_BUFFER1_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER1_NV /;"	d
GL_DRAW_BUFFER2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER2_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER2_EXT /;"	d
GL_DRAW_BUFFER2_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER2_NV /;"	d
GL_DRAW_BUFFER3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER3_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER3_EXT /;"	d
GL_DRAW_BUFFER3_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER3_NV /;"	d
GL_DRAW_BUFFER4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER4_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER4_EXT /;"	d
GL_DRAW_BUFFER4_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER4_NV /;"	d
GL_DRAW_BUFFER5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER5_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER5_EXT /;"	d
GL_DRAW_BUFFER5_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER5_NV /;"	d
GL_DRAW_BUFFER6	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER6_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER6_EXT /;"	d
GL_DRAW_BUFFER6_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER6_NV /;"	d
GL_DRAW_BUFFER7	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER7_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER7_EXT /;"	d
GL_DRAW_BUFFER7_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER7_NV /;"	d
GL_DRAW_BUFFER8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER8_EXT /;"	d
GL_DRAW_BUFFER8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER8_NV /;"	d
GL_DRAW_BUFFER9	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_BUFFER9_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER9_EXT /;"	d
GL_DRAW_BUFFER9_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER9_NV /;"	d
GL_DRAW_BUFFER_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER_EXT /;"	d
GL_DRAW_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_APPLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_NV /;"	d
GL_DRAW_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_FRAMEBUFFER_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_NV /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DRAW_PIXEL_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DRAW_PIXEL_TOKEN	/;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DST_ALPHA	/;"	d
GL_DST_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_ATOP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_DST_COLOR	/;"	d
GL_DST_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DST_COLOR /;"	d
GL_DST_IN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUAL_ALPHA12_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	d
GL_DUAL_ALPHA16_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	d
GL_DUAL_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	d
GL_DUAL_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	d
GL_DUAL_INTENSITY12_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	d
GL_DUAL_INTENSITY16_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	d
GL_DUAL_INTENSITY4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	d
GL_DUAL_INTENSITY8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	d
GL_DUAL_LUMINANCE12_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	d
GL_DUAL_LUMINANCE16_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	d
GL_DUAL_LUMINANCE4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	d
GL_DUAL_LUMINANCE8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	d
GL_DUDV_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGEFLAG_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EDGE_FLAG	/;"	d
GL_EDGE_FLAG_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY	/;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER	/;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE	/;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EIGHTH_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EMISSION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EMISSION	/;"	d
GL_ENABLE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ENABLE_BIT	/;"	d
GL_EQUAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EQUAL	/;"	d
GL_EQUAL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EQUIV	/;"	d
GL_ES_VERSION_2_0	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ES_VERSION_2_0 /;"	d
GL_ETC1_RGB8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ETC1_RGB8_OES /;"	d
GL_ETC1_SRGB8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_ETC1_SRGB8_NV /;"	d
GL_EVAL_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EVAL_BIT	/;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EXP	/;"	d
GL_EXP2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EXP2	/;"	d
GL_EXPAND_NEGATE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTENSIONS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EXTENSIONS	/;"	d
GL_EXTENSIONS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_EXTENSIONS /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_abgr	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_minmax	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_buffer_half_float	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_color_buffer_half_float /;"	d
GL_EXT_color_subtable	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_label	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_debug_marker	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_direct_state_access	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_discard_framebuffer	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_discard_framebuffer /;"	d
GL_EXT_disjoint_timer_query	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_disjoint_timer_query /;"	d
GL_EXT_draw_buffers	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_draw_buffers /;"	d
GL_EXT_draw_buffers2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_instanced	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_fog_coord	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_framebuffer_blit	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_shader4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_histogram	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_map_buffer_range	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_map_buffer_range /;"	d
GL_EXT_misc_attribute	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multi_draw_arrays	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_multisampled_render_to_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_multisampled_render_to_texture /;"	d
GL_EXT_multiview_draw_buffers	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_multiview_draw_buffers /;"	d
GL_EXT_occlusion_query_boolean	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_occlusion_query_boolean /;"	d
GL_EXT_packed_depth_stencil	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_provoking_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_read_format_bgra	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_read_format_bgra /;"	d
GL_EXT_rescale_normal	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_robustness	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_robustness /;"	d
GL_EXT_sRGB	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_sRGB /;"	d
GL_EXT_sRGB_write_control	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_sRGB_write_control /;"	d
GL_EXT_secondary_color	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_separate_shader_objects	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_shader_objects	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_framebuffer_fetch	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_shader_framebuffer_fetch /;"	d
GL_EXT_shader_image_load_formatted	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_shader_image_load_formatted /;"	d
GL_EXT_shader_image_load_store	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_integer_mix	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shader_texture_lod	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_shader_texture_lod /;"	d
GL_EXT_shadow_funcs	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shadow_samplers	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_shadow_samplers /;"	d
GL_EXT_shared_texture_palette	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_stencil_clear_tag	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_dxt1	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_compression_dxt1 /;"	d
GL_EXT_texture_compression_latc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_cube_map	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_env_add	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_filter_anisotropic	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_format_BGRA8888	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_format_BGRA8888 /;"	d
GL_EXT_texture_integer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_rg	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_rg /;"	d
GL_EXT_texture_sRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_decode	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_sRGB_decode	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shared_exponent	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_storage	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_storage /;"	d
GL_EXT_texture_swizzle	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_texture_type_2_10_10_10_REV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_type_2_10_10_10_REV /;"	d
GL_EXT_timer_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_unpack_subimage	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_EXT_unpack_subimage /;"	d
GL_EXT_vertex_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_attrib_64bit	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_x11_sync_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EYE_LINEAR	/;"	d
GL_EYE_LINE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_EYE_PLANE	/;"	d
GL_EYE_PLANE_ABSOLUTE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_MAX_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FAILURE_NV /;"	d
GL_FALSE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FALSE	/;"	d
GL_FALSE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FALSE /;"	d
GL_FASTEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FASTEST	/;"	d
GL_FASTEST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FASTEST /;"	d
GL_FEEDBACK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FEEDBACK	/;"	d
GL_FEEDBACK_BUFFER_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_POINTER	/;"	d
GL_FEEDBACK_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_SIZE	/;"	d
GL_FEEDBACK_BUFFER_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_TYPE	/;"	d
GL_FENCE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_CONDITION_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FENCE_STATUS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FIELDS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FILL	/;"	d
GL_FILTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FILTER /;"	d
GL_FILTER4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FILTER4_SGIS /;"	d
GL_FIRST_TO_REST_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIXED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIXED /;"	d
GL_FIXED	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FIXED /;"	d
GL_FIXED_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIXED_OES /;"	d
GL_FIXED_ONLY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FJ_shader_binary_GCCSO	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FJ_shader_binary_GCCSO /;"	d
GL_FLAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FLAT	/;"	d
GL_FLOAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FLOAT	/;"	d
GL_FLOAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT /;"	d
GL_FLOAT16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_R16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG	/;"	d
GL_FOG_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_BIT	/;"	d
GL_FOG_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_COLOR	/;"	d
GL_FOG_COORD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DENSITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_DENSITY	/;"	d
GL_FOG_DISTANCE_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_END	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_END	/;"	d
GL_FOG_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	d
GL_FOG_FUNC_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_FUNC_SGIS /;"	d
GL_FOG_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_HINT	/;"	d
GL_FOG_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_INDEX	/;"	d
GL_FOG_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_MODE	/;"	d
GL_FOG_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FOG_START	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FOG_START	/;"	d
GL_FONT_ASCENDER_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRACTIONAL_EVEN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	d
GL_FRAGMENT_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_LIGHT0_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	d
GL_FRAGMENT_LIGHT1_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	d
GL_FRAGMENT_LIGHT2_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	d
GL_FRAGMENT_LIGHT3_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	d
GL_FRAGMENT_LIGHT4_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	d
GL_FRAGMENT_LIGHT5_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	d
GL_FRAGMENT_LIGHT6_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	d
GL_FRAGMENT_LIGHT7_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	d
GL_FRAGMENT_LIGHTING_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_BIT_EXT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES /;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT /;"	d
GL_FRAGMENT_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BLEND	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_RENDERABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_UNDEFINED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNDEFINED_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_UNDEFINED_OES /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_FRAMEZOOM_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAMEZOOM_SGIX /;"	d
GL_FRAME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FRAME_NV /;"	d
GL_FRONT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FRONT	/;"	d
GL_FRONT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FRONT_AND_BACK	/;"	d
GL_FRONT_AND_BACK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FRONT_FACE	/;"	d
GL_FRONT_FACE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FRONT_LEFT	/;"	d
GL_FRONT_RIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FRONT_RIGHT	/;"	d
GL_FULL_RANGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FUNC_ADD	/;"	d
GL_FUNC_ADD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FUNC_REVERSE_SUBTRACT	/;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_FUNC_SUBTRACT	/;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GCCSO_SHADER_BINARY_FJ	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_GCCSO_SHADER_BINARY_FJ /;"	d
GL_GENERATE_MIPMAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_DEFORMATION_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	d
GL_GEOMETRY_INPUT_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_OUTPUT_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GEQUAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GEQUAL	/;"	d
GL_GEQUAL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLEXT_VERSION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLEXT_VERSION /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GPU_DISJOINT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_GPU_DISJOINT_EXT /;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX /;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX /;"	d
GL_GPU_OPTIMIZED_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_GPU_OPTIMIZED_QCOM /;"	d
GL_GREATER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GREATER	/;"	d
GL_GREATER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_GREATER /;"	d
GL_GREEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GREEN	/;"	d
GL_GREEN_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GREEN_BIAS	/;"	d
GL_GREEN_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GREEN_BITS	/;"	d
GL_GREEN_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_GREEN_BITS /;"	d
GL_GREEN_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREEN_NV /;"	d
GL_GREEN_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_GREEN_SCALE	/;"	d
GL_GREMEDY_frame_terminator	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_GUILTY_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_GUILTY_CONTEXT_RESET_EXT /;"	d
GL_HALF_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HALF_FLOAT_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_HALF_FLOAT_OES /;"	d
GL_HARDLIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_FLOAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HIGH_INT /;"	d
GL_HIGH_INT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HILO_NV /;"	d
GL_HINT_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HINT_BIT	/;"	d
GL_HISTOGRAM	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM	/;"	d
GL_HISTOGRAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_ALPHA_SIZE	/;"	d
GL_HISTOGRAM_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_BLUE_SIZE	/;"	d
GL_HISTOGRAM_BLUE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_FORMAT	/;"	d
GL_HISTOGRAM_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_GREEN_SIZE	/;"	d
GL_HISTOGRAM_GREEN_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE	/;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_RED_SIZE	/;"	d
GL_HISTOGRAM_RED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_SINK	/;"	d
GL_HISTOGRAM_SINK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_HISTOGRAM_WIDTH	/;"	d
GL_HISTOGRAM_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IGNORE_BORDER_HP /;"	d
GL_IMAGE_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_CLASS_10_10_10_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_MAG_FILTER_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	d
GL_IMAGE_MIN_FILTER_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	d
GL_IMAGE_PIXEL_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_ROTATE_ANGLE_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	d
GL_IMAGE_SCALE_X_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_SCALE_X_HP /;"	d
GL_IMAGE_SCALE_Y_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	d
GL_IMAGE_TEXEL_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMAGE_TRANSFORM_2D_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	d
GL_IMAGE_TRANSLATE_X_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	d
GL_IMAGE_TRANSLATE_Y_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	d
GL_IMG_multisampled_render_to_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_multisampled_render_to_texture /;"	d
GL_IMG_program_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_program_binary /;"	d
GL_IMG_read_format	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_read_format /;"	d
GL_IMG_shader_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_shader_binary /;"	d
GL_IMG_texture_compression_pvrtc	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_texture_compression_pvrtc /;"	d
GL_IMG_texture_compression_pvrtc2	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_IMG_texture_compression_pvrtc2 /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INCR	/;"	d
GL_INCR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_ARRAY	/;"	d
GL_INDEX_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_ARRAY_POINTER	/;"	d
GL_INDEX_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_ARRAY_STRIDE	/;"	d
GL_INDEX_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_ARRAY_TYPE	/;"	d
GL_INDEX_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_BITS	/;"	d
GL_INDEX_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_CLEAR_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_CLEAR_VALUE	/;"	d
GL_INDEX_LOGIC_OP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_LOGIC_OP	/;"	d
GL_INDEX_MATERIAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_EXT /;"	d
GL_INDEX_MATERIAL_FACE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	d
GL_INDEX_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_MODE	/;"	d
GL_INDEX_OFFSET	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_OFFSET	/;"	d
GL_INDEX_SHIFT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_SHIFT	/;"	d
GL_INDEX_TEST_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_TEST_EXT /;"	d
GL_INDEX_TEST_FUNC_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	d
GL_INDEX_TEST_REF_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INDEX_TEST_REF_EXT /;"	d
GL_INDEX_WRITEMASK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INDEX_WRITEMASK	/;"	d
GL_INFO_LOG_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INFO_LOG_LENGTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_blend_func_separate	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INGR_blend_func_separate /;"	d
GL_INGR_color_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INNOCENT_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_INNOCENT_CONTEXT_RESET_EXT /;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	d
GL_INT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INT	/;"	d
GL_INT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INT /;"	d
GL_INT16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_fragment_shader_ordering	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_map_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTENSITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTENSITY	/;"	d
GL_INTENSITY12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTENSITY12	/;"	d
GL_INTENSITY12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTENSITY16	/;"	d
GL_INTENSITY16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTENSITY4	/;"	d
GL_INTENSITY4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTENSITY8	/;"	d
GL_INTENSITY8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INTERPOLATE	/;"	d
GL_INTERPOLATE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_10_10_10_2_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_INT_10_10_10_2_OES /;"	d
GL_INT_2_10_10_10_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_ENUM	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INVALID_ENUM	/;"	d
GL_INVALID_ENUM	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INVALID_OPERATION	/;"	d
GL_INVALID_OPERATION	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INVALID_VALUE	/;"	d
GL_INVALID_VALUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVARIANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_INVERT	/;"	d
GL_INVERT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_INVERT /;"	d
GL_INVERTED_SCREEN_W_REND	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_IR_INSTRUMENT1_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	d
GL_ISOLINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_IUI_N3F_V2F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IUI_N3F_V2F_EXT /;"	d
GL_IUI_N3F_V3F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IUI_N3F_V3F_EXT /;"	d
GL_IUI_V2F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IUI_V2F_EXT /;"	d
GL_IUI_V3F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_IUI_V3F_EXT /;"	d
GL_KEEP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_KEEP	/;"	d
GL_KEEP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_KEEP /;"	d
GL_KHR_debug	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_KHR_debug /;"	d
GL_KHR_debug	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_KHR_debug /;"	d
GL_KHR_texture_compression_astc_hdr	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KHR_texture_compression_astc_ldr	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_LARGE_CCW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAYER_NV /;"	d
GL_LAYER_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYOUT_DEFAULT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LEFT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LEFT	/;"	d
GL_LEQUAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LEQUAL	/;"	d
GL_LEQUAL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LEQUAL /;"	d
GL_LERP_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LERP_ATI /;"	d
GL_LESS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LESS	/;"	d
GL_LESS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LESS /;"	d
GL_LIGHT0	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT0	/;"	d
GL_LIGHT1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT1	/;"	d
GL_LIGHT2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT2	/;"	d
GL_LIGHT3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT3	/;"	d
GL_LIGHT4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT4	/;"	d
GL_LIGHT5	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT5	/;"	d
GL_LIGHT6	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT6	/;"	d
GL_LIGHT7	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT7	/;"	d
GL_LIGHTEN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHTING	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHTING	/;"	d
GL_LIGHTING_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHTING_BIT	/;"	d
GL_LIGHT_ENV_MODE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	d
GL_LIGHT_MODEL_AMBIENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT_MODEL_AMBIENT	/;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL	/;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT_MODEL_LOCAL_VIEWER	/;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LIGHT_MODEL_TWO_SIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIGHT_MODEL_TWO_SIDE	/;"	d
GL_LINE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE	/;"	d
GL_LINEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINEAR	/;"	d
GL_LINEAR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINEAR /;"	d
GL_LINEARBURN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_ATTENUATION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINEAR_ATTENUATION	/;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	d
GL_LINEAR_DETAIL_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	d
GL_LINEAR_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINEAR_MIPMAP_LINEAR	/;"	d
GL_LINEAR_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINEAR_MIPMAP_NEAREST	/;"	d
GL_LINEAR_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	d
GL_LINEAR_SHARPEN_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	d
GL_LINES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINES	/;"	d
GL_LINES	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_BIT	/;"	d
GL_LINE_LOOP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_LOOP	/;"	d
GL_LINE_LOOP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_RESET_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_RESET_TOKEN	/;"	d
GL_LINE_SMOOTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_SMOOTH	/;"	d
GL_LINE_SMOOTH_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_SMOOTH_HINT	/;"	d
GL_LINE_STIPPLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_STIPPLE	/;"	d
GL_LINE_STIPPLE_PATTERN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_STIPPLE_PATTERN	/;"	d
GL_LINE_STIPPLE_REPEAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_STIPPLE_REPEAT	/;"	d
GL_LINE_STRIP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_STRIP	/;"	d
GL_LINE_STRIP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_TOKEN	/;"	d
GL_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINE_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_WIDTH	/;"	d
GL_LINE_WIDTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_WIDTH_GRANULARITY	/;"	d
GL_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LINE_WIDTH_RANGE	/;"	d
GL_LINK_STATUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LINK_STATUS /;"	d
GL_LINK_STATUS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_BASE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIST_BASE	/;"	d
GL_LIST_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIST_BIT	/;"	d
GL_LIST_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIST_INDEX	/;"	d
GL_LIST_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LIST_MODE	/;"	d
GL_LIST_PRIORITY_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LIST_PRIORITY_SGIX /;"	d
GL_LOAD	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LOAD	/;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOGIC_OP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LOGIC_OP	/;"	d
GL_LOGIC_OP_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LOGIC_OP_MODE	/;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOSE_CONTEXT_ON_RESET_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_EXT /;"	d
GL_LOWER_LEFT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_FLOAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LOW_INT /;"	d
GL_LOW_INT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUMINANCE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE	/;"	d
GL_LUMINANCE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LUMINANCE /;"	d
GL_LUMINANCE12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE12	/;"	d
GL_LUMINANCE12_ALPHA12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA12	/;"	d
GL_LUMINANCE12_ALPHA12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA4	/;"	d
GL_LUMINANCE12_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE16	/;"	d
GL_LUMINANCE16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE16F_EXT /;"	d
GL_LUMINANCE16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE16_ALPHA16	/;"	d
GL_LUMINANCE16_ALPHA16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE32F_EXT /;"	d
GL_LUMINANCE32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE4	/;"	d
GL_LUMINANCE4_ALPHA4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE4_ALPHA4	/;"	d
GL_LUMINANCE4_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_ALPHA4_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE4_ALPHA4_OES /;"	d
GL_LUMINANCE4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE6_ALPHA2	/;"	d
GL_LUMINANCE6_ALPHA2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE8	/;"	d
GL_LUMINANCE8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE8_ALPHA8	/;"	d
GL_LUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_ALPHA8_OES /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_OES /;"	d
GL_LUMINANCE8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA	/;"	d
GL_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_LUMINANCE_ALPHA /;"	d
GL_LUMINANCE_ALPHA16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE_ALPHA16F_EXT /;"	d
GL_LUMINANCE_ALPHA16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE_ALPHA32F_EXT /;"	d
GL_LUMINANCE_ALPHA32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MALI_PROGRAM_BINARY_ARM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MALI_PROGRAM_BINARY_ARM /;"	d
GL_MALI_SHADER_BINARY_ARM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MALI_SHADER_BINARY_ARM /;"	d
GL_MANUAL_GENERATE_MIPMAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_COLOR_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_COLOR_4	/;"	d
GL_MAP1_GRID_DOMAIN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_GRID_DOMAIN	/;"	d
GL_MAP1_GRID_SEGMENTS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_GRID_SEGMENTS	/;"	d
GL_MAP1_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_INDEX	/;"	d
GL_MAP1_NORMAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_NORMAL	/;"	d
GL_MAP1_TANGENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_TEXTURE_COORD_1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_1	/;"	d
GL_MAP1_TEXTURE_COORD_2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_2	/;"	d
GL_MAP1_TEXTURE_COORD_3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_3	/;"	d
GL_MAP1_TEXTURE_COORD_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_4	/;"	d
GL_MAP1_VERTEX_3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_VERTEX_3	/;"	d
GL_MAP1_VERTEX_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP1_VERTEX_4	/;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_COLOR_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_COLOR_4	/;"	d
GL_MAP2_GRID_DOMAIN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_GRID_DOMAIN	/;"	d
GL_MAP2_GRID_SEGMENTS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_GRID_SEGMENTS	/;"	d
GL_MAP2_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_INDEX	/;"	d
GL_MAP2_NORMAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_NORMAL	/;"	d
GL_MAP2_TANGENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_TEXTURE_COORD_1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_1	/;"	d
GL_MAP2_TEXTURE_COORD_2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_2	/;"	d
GL_MAP2_TEXTURE_COORD_3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_3	/;"	d
GL_MAP2_TEXTURE_COORD_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_4	/;"	d
GL_MAP2_VERTEX_3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_VERTEX_3	/;"	d
GL_MAP2_VERTEX_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP2_VERTEX_4	/;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP_COLOR	/;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT_EXT /;"	d
GL_MAP_PERSISTENT_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_READ_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_READ_BIT_EXT /;"	d
GL_MAP_STENCIL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAP_STENCIL	/;"	d
GL_MAP_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT_EXT /;"	d
GL_MAP_WRITE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MAP_WRITE_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAP_WRITE_BIT_EXT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MATRIX_MODE	/;"	d
GL_MATRIX_PALETTE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX	/;"	d
GL_MAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_3D_TEXTURE_SIZE	/;"	d
GL_MAX_3D_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_3D_TEXTURE_SIZE_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_OES /;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_ATTRIB_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_ATTRIB_STACK_DEPTH	/;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	/;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_MAX_CLIP_DISTANCES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_CLIP_PLANES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_CLIP_PLANES	/;"	d
GL_MAX_COLOR_ATTACHMENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_ATTACHMENTS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_NV /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH	/;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_HEIGHT	/;"	d
GL_MAX_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_WIDTH	/;"	d
GL_MAX_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE	/;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	d
GL_MAX_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DRAW_BUFFERS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_DRAW_BUFFERS_EXT /;"	d
GL_MAX_DRAW_BUFFERS_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_DRAW_BUFFERS_NV /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_INDICES	/;"	d
GL_MAX_ELEMENTS_INDICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_VERTICES	/;"	d
GL_MAX_ELEMENTS_VERTICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EVAL_ORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_EVAL_ORDER	/;"	d
GL_MAX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_MAX_GENERAL_COMBINERS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LABEL_LENGTH_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_LABEL_LENGTH_KHR /;"	d
GL_MAX_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_LIGHTS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_LIGHTS	/;"	d
GL_MAX_LIST_NESTING	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_LIST_NESTING	/;"	d
GL_MAX_MAP_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_MODELVIEW_STACK_DEPTH	/;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_MULTIVIEW_BUFFERS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_MULTIVIEW_BUFFERS_EXT /;"	d
GL_MAX_NAME_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NAME_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_NAME_STACK_DEPTH	/;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PATCH_VERTICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PIXEL_MAP_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_PIXEL_MAP_TABLE	/;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_PROJECTION_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_PROJECTION_STACK_DEPTH	/;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RENDERBUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_ANGLE /;"	d
GL_MAX_SAMPLES_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_APPLE /;"	d
GL_MAX_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_IMG /;"	d
GL_MAX_SAMPLES_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_NV /;"	d
GL_MAX_SAMPLE_MASK_WORDS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHININESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPOT_EXPONENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBROUTINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_COORDS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_TEXTURE_SIZE	/;"	d
GL_MAX_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_TEXTURE_STACK_DEPTH	/;"	d
GL_MAX_TEXTURE_UNITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS	/;"	d
GL_MAX_TEXTURE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS_ARB	/;"	d
GL_MAX_TEXTURE_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VARYING_VECTORS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORT_DIMS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MAX_VIEWPORT_DIMS	/;"	d
GL_MAX_VIEWPORT_DIMS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_FLOAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MEDIUM_INT /;"	d
GL_MEDIUM_INT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MEDIUM_INT /;"	d
GL_MESAX_texture_stack	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_pack_invert	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_packed_depth_stencil	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MESA_packed_depth_stencil /;"	d
GL_MESA_resize_buffers	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_window_pos	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MIN	/;"	d
GL_MIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN /;"	d
GL_MINMAX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MINMAX	/;"	d
GL_MINMAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MINMAX_FORMAT	/;"	d
GL_MINMAX_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MINMAX_SINK	/;"	d
GL_MINMAX_SINK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_LOD_WARNING_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SPARSE_LEVEL_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIN_SPARSE_LEVEL_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIN_SPARSE_LEVEL_ARB /;"	d
GL_MIPMAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MITER_REVERT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MODELVIEW	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MODELVIEW	/;"	d
GL_MODELVIEW0_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MODELVIEW_MATRIX	/;"	d
GL_MODELVIEW_PROJECTION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODELVIEW_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MODELVIEW_STACK_DEPTH	/;"	d
GL_MODULATE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MODULATE	/;"	d
GL_MODULATE_ADD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SUBTRACT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MOVE_TO_CONTINUES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MOV_ATI /;"	d
GL_MULT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MULT	/;"	d
GL_MULTIPLY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MULTISAMPLE	/;"	d
GL_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT	/;"	d
GL_MULTISAMPLE_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MULTIVIEW_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_MULTIVIEW_EXT /;"	d
GL_MUL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_N3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_N3F_V3F	/;"	d
GL_NAMED_STRING_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAME_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NAME_STACK_DEPTH	/;"	d
GL_NAND	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NAND	/;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NEAREST	/;"	d
GL_NEAREST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	d
GL_NEAREST_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NEAREST_MIPMAP_LINEAR	/;"	d
GL_NEAREST_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NEAREST_MIPMAP_NEAREST	/;"	d
GL_NEAREST_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEGATE_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_W_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEVER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NEVER	/;"	d
GL_NEVER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NEVER /;"	d
GL_NEXT_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEXT_BUFFER_NV /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NICEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NICEST	/;"	d
GL_NICEST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NICEST /;"	d
GL_NONE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NONE	/;"	d
GL_NONE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NONE /;"	d
GL_NOOP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NOOP	/;"	d
GL_NOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NOR	/;"	d
GL_NORMALIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMALIZE	/;"	d
GL_NORMALIZED_RANGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMAL_ARRAY	/;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_POINTER	/;"	d
GL_NORMAL_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_STRIDE	/;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_TYPE	/;"	d
GL_NORMAL_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NORMAL_MAP	/;"	d
GL_NORMAL_MAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NOTEQUAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NOTEQUAL	/;"	d
GL_NOTEQUAL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NO_ERROR /;"	d
GL_NO_ERROR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NO_RESET_NOTIFICATION_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NO_RESET_NOTIFICATION_EXT /;"	d
GL_NUM_ACTIVE_VARIABLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS	/;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_EXTENSIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS_OES /;"	d
GL_NUM_SAMPLE_COUNTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NVX_conditional_render	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NVX_conditional_render /;"	d
GL_NVX_gpu_memory_info	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NVX_gpu_memory_info /;"	d
GL_NV_bindless_multi_draw_indirect	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_square	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_blend_square /;"	d
GL_NV_compute_program5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_conditional_render	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_copy_depth_to_color	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_copy_image /;"	d
GL_NV_coverage_sample	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_coverage_sample /;"	d
GL_NV_deep_texture3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_depth_nonlinear	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_depth_nonlinear /;"	d
GL_NV_draw_buffers	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_draw_buffers /;"	d
GL_NV_draw_instanced	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_draw_instanced /;"	d
GL_NV_draw_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_evaluators	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fbo_color_attachments	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_fbo_color_attachments /;"	d
GL_NV_fence	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fence /;"	d
GL_NV_fence	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_fence /;"	d
GL_NV_float_buffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_program	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_framebuffer_blit	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_framebuffer_blit /;"	d
GL_NV_framebuffer_multisample	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_framebuffer_multisample /;"	d
GL_NV_framebuffer_multisample_coverage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_generate_mipmap_sRGB	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_generate_mipmap_sRGB /;"	d
GL_NV_geometry_program4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_gpu_program4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_shader5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_half_float /;"	d
GL_NV_instanced_arrays	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_instanced_arrays /;"	d
GL_NV_light_max_exponent	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_coverage	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_parameter_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_pixel_data_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_present_video	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_read_buffer	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_read_buffer /;"	d
GL_NV_read_buffer_front	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_read_buffer_front /;"	d
GL_NV_read_depth	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_read_depth /;"	d
GL_NV_read_depth_stencil	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_read_depth_stencil /;"	d
GL_NV_read_stencil	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_read_stencil /;"	d
GL_NV_register_combiners	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_sRGB_formats	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_sRGB_formats /;"	d
GL_NV_shader_atomic_counters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_buffer_load	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_buffer_store	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_buffer_store /;"	d
GL_NV_shader_storage_buffer_object	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_shader_thread_group	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_thread_group /;"	d
GL_NV_shader_thread_shuffle	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_shader_thread_shuffle /;"	d
GL_NV_shadow_samplers_array	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_shadow_samplers_array /;"	d
GL_NV_shadow_samplers_cube	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_shadow_samplers_cube /;"	d
GL_NV_tessellation_program5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_barrier	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_border_clamp	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_border_clamp /;"	d
GL_NV_texture_compression_s3tc_update	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_compression_s3tc_update /;"	d
GL_NV_texture_compression_vtc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_npot_2D_mipmap	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_npot_2D_mipmap /;"	d
GL_NV_texture_rectangle	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_shader	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_vdpau_interop	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vertex_array_range	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_NV_video_capture /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINEAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OBJECT_LINEAR	/;"	d
GL_OBJECT_LINE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_PLANE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OBJECT_PLANE	/;"	d
GL_OBJECT_POINT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OBJECT_TYPE_APPLE /;"	d
GL_OBJECT_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OCCLUSION_TEST_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OCCLUSION_TEST_HP /;"	d
GL_OCCLUSION_TEST_RESULT_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	d
GL_OES_EGL_image	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OES_EGL_image /;"	d
GL_OES_EGL_image	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_EGL_image /;"	d
GL_OES_EGL_image_external	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_EGL_image_external /;"	d
GL_OES_byte_coordinates	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_ETC1_RGB8_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_compressed_ETC1_RGB8_texture /;"	d
GL_OES_compressed_paletted_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_compressed_paletted_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_depth24	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_depth24 /;"	d
GL_OES_depth32	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_depth32 /;"	d
GL_OES_depth_texture	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_depth_texture /;"	d
GL_OES_element_index_uint	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_element_index_uint /;"	d
GL_OES_fbo_render_mipmap	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_fbo_render_mipmap /;"	d
GL_OES_fixed_point	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_fixed_point /;"	d
GL_OES_fragment_precision_high	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_fragment_precision_high /;"	d
GL_OES_get_program_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_get_program_binary /;"	d
GL_OES_mapbuffer	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_mapbuffer /;"	d
GL_OES_packed_depth_stencil	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_packed_depth_stencil /;"	d
GL_OES_query_matrix	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_query_matrix /;"	d
GL_OES_read_format	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_read_format /;"	d
GL_OES_required_internalformat	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_required_internalformat /;"	d
GL_OES_rgb8_rgba8	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_rgb8_rgba8 /;"	d
GL_OES_single_precision	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OES_single_precision /;"	d
GL_OES_standard_derivatives	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_standard_derivatives /;"	d
GL_OES_stencil1	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_stencil1 /;"	d
GL_OES_stencil4	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_stencil4 /;"	d
GL_OES_surfaceless_context	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_surfaceless_context /;"	d
GL_OES_texture_3D	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_3D /;"	d
GL_OES_texture_float	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_float /;"	d
GL_OES_texture_float_linear	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_float_linear /;"	d
GL_OES_texture_half_float	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_half_float /;"	d
GL_OES_texture_half_float_linear	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_half_float_linear /;"	d
GL_OES_texture_npot	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_npot /;"	d
GL_OES_vertex_array_object	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_array_object /;"	d
GL_OES_vertex_half_float	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_half_float /;"	d
GL_OES_vertex_type_10_10_10_2	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_type_10_10_10_2 /;"	d
GL_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OML_subsample /;"	d
GL_ONE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE	/;"	d
GL_ONE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE /;"	d
GL_ONE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA	/;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR	/;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_DST_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA	/;"	d
GL_ONE_MINUS_DST_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR	/;"	d
GL_ONE_MINUS_DST_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA	/;"	d
GL_ONE_MINUS_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR	/;"	d
GL_ONE_MINUS_SRC_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OPERAND0_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND0_ALPHA	/;"	d
GL_OPERAND0_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND0_RGB	/;"	d
GL_OPERAND0_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND1_ALPHA	/;"	d
GL_OPERAND1_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND1_RGB	/;"	d
GL_OPERAND1_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND2_ALPHA	/;"	d
GL_OPERAND2_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OPERAND2_RGB	/;"	d
GL_OPERAND2_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OP_ADD_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OR	/;"	d
GL_ORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ORDER	/;"	d
GL_OR_INVERTED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OR_INVERTED	/;"	d
GL_OR_REVERSE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OR_REVERSE	/;"	d
GL_OUTPUT_COLOR0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OUT_OF_MEMORY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_OUT_OF_MEMORY	/;"	d
GL_OUT_OF_MEMORY	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_OVERLAY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_OVERLAY_NV /;"	d
GL_PACK_ALIGNMENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_ALIGNMENT	/;"	d
GL_PACK_ALIGNMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_CMYK_HINT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_DEPTH_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	d
GL_PACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_IMAGE_HEIGHT	/;"	d
GL_PACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_LSB_FIRST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_LSB_FIRST	/;"	d
GL_PACK_RESAMPLE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PACK_REVERSE_ROW_ORDER_ANGLE /;"	d
GL_PACK_ROW_BYTES_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_ROW_LENGTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_ROW_LENGTH	/;"	d
GL_PACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_SKIP_IMAGES	/;"	d
GL_PACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_PIXELS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_SKIP_PIXELS	/;"	d
GL_PACK_SKIP_ROWS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_SKIP_ROWS	/;"	d
GL_PACK_SKIP_VOLUMES_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PACK_SWAP_BYTES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PACK_SWAP_BYTES	/;"	d
GL_PALETTE4_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGB8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA4_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE4_RGBA8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGB8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA4_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PALETTE8_RGBA8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PASS_THROUGH_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PASS_THROUGH_TOKEN	/;"	d
GL_PATCHES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MITER_LIMIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PERCENTAGE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERCENTAGE_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_GLOBAL_MODE_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_GLOBAL_MODE_QCOM /;"	d
GL_PERFMON_RESULT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERSPECTIVE_CORRECTION_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PERSPECTIVE_CORRECTION_HINT	/;"	d
GL_PERTURB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_STAGE_CONSTANTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	d
GL_PIXEL_GROUP_COLOR_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	d
GL_PIXEL_MAG_FILTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MAP_A_TO_A	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_A_TO_A	/;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_A_TO_A_SIZE	/;"	d
GL_PIXEL_MAP_B_TO_B	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_B_TO_B	/;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_B_TO_B_SIZE	/;"	d
GL_PIXEL_MAP_G_TO_G	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_G_TO_G	/;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_G_TO_G_SIZE	/;"	d
GL_PIXEL_MAP_I_TO_A	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_A	/;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_A_SIZE	/;"	d
GL_PIXEL_MAP_I_TO_B	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_B	/;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_B_SIZE	/;"	d
GL_PIXEL_MAP_I_TO_G	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_G	/;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_G_SIZE	/;"	d
GL_PIXEL_MAP_I_TO_I	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_I	/;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_I_SIZE	/;"	d
GL_PIXEL_MAP_I_TO_R	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_R	/;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_R_SIZE	/;"	d
GL_PIXEL_MAP_R_TO_R	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_R_TO_R	/;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_R_TO_R_SIZE	/;"	d
GL_PIXEL_MAP_S_TO_S	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_S_TO_S	/;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MAP_S_TO_S_SIZE	/;"	d
GL_PIXEL_MIN_FILTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_MODE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PIXEL_MODE_BIT	/;"	d
GL_PIXEL_PACK_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TEXTURE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	d
GL_PIXEL_TEX_GEN_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_WIDTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT	/;"	d
GL_POINTS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINTS	/;"	d
GL_POINTS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_POINTS /;"	d
GL_POINT_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_BIT	/;"	d
GL_POINT_DISTANCE_ATTENUATION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	d
GL_POINT_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_SIZE	/;"	d
GL_POINT_SIZE_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_MAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MAX_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	d
GL_POINT_SIZE_MIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_MIN_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	d
GL_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_SIZE_RANGE	/;"	d
GL_POINT_SMOOTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_SMOOTH	/;"	d
GL_POINT_SMOOTH_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_SMOOTH_HINT	/;"	d
GL_POINT_SPRITE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POINT_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POINT_TOKEN	/;"	d
GL_POLYGON	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON	/;"	d
GL_POLYGON_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_BIT	/;"	d
GL_POLYGON_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_MODE	/;"	d
GL_POLYGON_OFFSET_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_FACTOR	/;"	d
GL_POLYGON_OFFSET_FACTOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POLYGON_OFFSET_FILL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_FILL	/;"	d
GL_POLYGON_OFFSET_FILL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_LINE	/;"	d
GL_POLYGON_OFFSET_POINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_POINT	/;"	d
GL_POLYGON_OFFSET_UNITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_UNITS	/;"	d
GL_POLYGON_OFFSET_UNITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_SMOOTH	/;"	d
GL_POLYGON_SMOOTH_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_SMOOTH_HINT	/;"	d
GL_POLYGON_STIPPLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_STIPPLE	/;"	d
GL_POLYGON_STIPPLE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_STIPPLE_BIT	/;"	d
GL_POLYGON_TOKEN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POLYGON_TOKEN	/;"	d
GL_POSITION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POSITION	/;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS	/;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE	/;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS	/;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE	/;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE	/;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS	/;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE	/;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS	/;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE	/;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS	/;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE	/;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS	/;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE	/;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE	/;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS	/;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE	/;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_BIAS	/;"	d
GL_POST_CONVOLUTION_RED_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_SCALE	/;"	d
GL_POST_CONVOLUTION_RED_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PREVIOUS	/;"	d
GL_PREVIOUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PRIMARY_COLOR	/;"	d
GL_PRIMARY_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVE_ID_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_ANGLE /;"	d
GL_PROGRAM_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_FORMATS_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_FORMATS_OES /;"	d
GL_PROGRAM_BINARY_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_LENGTH_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_LENGTH_OES /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_KHR /;"	d
GL_PROGRAM_LENGTH_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_BINDING_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_PIPELINE_BINDING_EXT /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_SEPARABLE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_SEPARABLE_EXT /;"	d
GL_PROGRAM_STRING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROJECTION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROJECTION	/;"	d
GL_PROJECTION_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROJECTION_MATRIX	/;"	d
GL_PROJECTION_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROJECTION_STACK_DEPTH	/;"	d
GL_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_COLOR_TABLE	/;"	d
GL_PROXY_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_HISTOGRAM	/;"	d
GL_PROXY_HISTOGRAM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_PROXY_TEXTURE_1D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_1D	/;"	d
GL_PROXY_TEXTURE_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_2D	/;"	d
GL_PROXY_TEXTURE_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_3D	/;"	d
GL_PROXY_TEXTURE_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_4D_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP	/;"	d
GL_PROXY_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_Q	/usr/include/SDL2/SDL_opengl.h	/^#define GL_Q	/;"	d
GL_QCOM_alpha_test	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_alpha_test /;"	d
GL_QCOM_binning_control	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_binning_control /;"	d
GL_QCOM_driver_control	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_driver_control /;"	d
GL_QCOM_extended_get	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_extended_get /;"	d
GL_QCOM_extended_get2	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_extended_get2 /;"	d
GL_QCOM_perfmon_global_mode	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_perfmon_global_mode /;"	d
GL_QCOM_tiled_rendering	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_tiled_rendering /;"	d
GL_QCOM_writeonly_rendering	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QCOM_writeonly_rendering /;"	d
GL_QUADRATIC_ATTENUATION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_QUADRATIC_ATTENUATION	/;"	d
GL_QUADRATIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_QUADS	/;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUAD_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	d
GL_QUAD_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	d
GL_QUAD_INTENSITY4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	d
GL_QUAD_INTENSITY8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	d
GL_QUAD_LUMINANCE4_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	d
GL_QUAD_LUMINANCE8_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	d
GL_QUAD_MESH_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_STRIP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_QUAD_STRIP	/;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	d
GL_QUARTER_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_COUNTER_BITS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QUERY_COUNTER_BITS_EXT /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QUERY_KHR /;"	d
GL_QUERY_NO_WAIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QUERY_RESULT_AVAILABLE_EXT /;"	d
GL_QUERY_RESULT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_QUERY_RESULT_EXT /;"	d
GL_QUERY_RESULT_NO_WAIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_WAIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R	/usr/include/SDL2/SDL_opengl.h	/^#define GL_R	/;"	d
GL_R11F_G11F_B10F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R16 /;"	d
GL_R16F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R16F /;"	d
GL_R16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_R16F_EXT /;"	d
GL_R16I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R16I /;"	d
GL_R16UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R16_SNORM /;"	d
GL_R1UI_C3F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R32F /;"	d
GL_R32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_R32F_EXT /;"	d
GL_R32I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R32I /;"	d
GL_R32UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_R3_G3_B2	/;"	d
GL_R8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R8 /;"	d
GL_R8I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R8I /;"	d
GL_R8UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R8UI /;"	d
GL_R8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_R8_EXT /;"	d
GL_R8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_READ_BUFFER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_READ_BUFFER	/;"	d
GL_READ_BUFFER_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_BUFFER_EXT /;"	d
GL_READ_BUFFER_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_BUFFER_NV /;"	d
GL_READ_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_ANGLE /;"	d
GL_READ_FRAMEBUFFER_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_APPLE /;"	d
GL_READ_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_READ_FRAMEBUFFER_BINDING_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_APPLE /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_NV /;"	d
GL_READ_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_FRAMEBUFFER_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_NV /;"	d
GL_READ_ONLY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RECT_NV /;"	d
GL_RED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RED	/;"	d
GL_REDUCE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_REDUCE	/;"	d
GL_REDUCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIAS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RED_BIAS	/;"	d
GL_RED_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RED_BITS	/;"	d
GL_RED_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RED_BITS /;"	d
GL_RED_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RED_EXT /;"	d
GL_RED_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_NV /;"	d
GL_RED_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RED_SCALE	/;"	d
GL_RED_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	d
GL_REFERENCE_PLANE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	d
GL_REFLECTION_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_REFLECTION_MAP	/;"	d
GL_REFLECTION_MAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGISTER_COMBINERS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_10_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_10_ATI /;"	d
GL_REG_11_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_11_ATI /;"	d
GL_REG_12_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_12_ATI /;"	d
GL_REG_13_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_13_ATI /;"	d
GL_REG_14_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_14_ATI /;"	d
GL_REG_15_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_15_ATI /;"	d
GL_REG_16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_16_ATI /;"	d
GL_REG_17_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_17_ATI /;"	d
GL_REG_18_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_18_ATI /;"	d
GL_REG_19_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_19_ATI /;"	d
GL_REG_1_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_20_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_20_ATI /;"	d
GL_REG_21_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_21_ATI /;"	d
GL_REG_22_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_22_ATI /;"	d
GL_REG_23_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_23_ATI /;"	d
GL_REG_24_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_24_ATI /;"	d
GL_REG_25_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_25_ATI /;"	d
GL_REG_26_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_26_ATI /;"	d
GL_REG_27_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_27_ATI /;"	d
GL_REG_28_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_28_ATI /;"	d
GL_REG_29_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_29_ATI /;"	d
GL_REG_2_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_30_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_30_ATI /;"	d
GL_REG_31_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_31_ATI /;"	d
GL_REG_3_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_5_ATI /;"	d
GL_REG_6_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_6_ATI /;"	d
GL_REG_7_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_7_ATI /;"	d
GL_REG_8_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_8_ATI /;"	d
GL_REG_9_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REG_9_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RENDER	/;"	d
GL_RENDERBUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_ANGLE /;"	d
GL_RENDERBUFFER_SAMPLES_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_APPLE /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_IMG /;"	d
GL_RENDERBUFFER_SAMPLES_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_NV /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_RENDERER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RENDERER	/;"	d
GL_RENDERER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RENDERER /;"	d
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM /;"	d
GL_RENDER_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RENDER_MODE	/;"	d
GL_REND_screen_coordinates	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPEAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_REPEAT	/;"	d
GL_REPEAT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_REPLACE	/;"	d
GL_REPLACE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_REPLACE /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_REPLICATE_BORDER	/;"	d
GL_REPLICATE_BORDER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPLICATE_BORDER_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_REPLICATE_BORDER_HP /;"	d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES /;"	d
GL_RESAMPLE_AVERAGE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RESCALE_NORMAL	/;"	d
GL_RESCALE_NORMAL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESET_NOTIFICATION_STRATEGY_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_EXT /;"	d
GL_RESTART_PATH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RETURN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RETURN	/;"	d
GL_RG	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG /;"	d
GL_RG16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG16 /;"	d
GL_RG16F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG16F /;"	d
GL_RG16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RG16F_EXT /;"	d
GL_RG16I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG16I /;"	d
GL_RG16UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG32F /;"	d
GL_RG32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RG32F_EXT /;"	d
GL_RG32I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG32I /;"	d
GL_RG32UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG32UI /;"	d
GL_RG8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG8 /;"	d
GL_RG8I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG8I /;"	d
GL_RG8UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG8UI /;"	d
GL_RG8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RG8_EXT /;"	d
GL_RG8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB	/;"	d
GL_RGB	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RGB /;"	d
GL_RGB10	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB10	/;"	d
GL_RGB10_A2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB10_A2	/;"	d
GL_RGB10_A2UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_A2_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB10_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB12	/;"	d
GL_RGB12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB16	/;"	d
GL_RGB16F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB16F_EXT /;"	d
GL_RGB16I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB32F_EXT /;"	d
GL_RGB32I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB4	/;"	d
GL_RGB4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB5	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB5	/;"	d
GL_RGB565	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB565 /;"	d
GL_RGB565	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RGB565 /;"	d
GL_RGB565_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB565_OES /;"	d
GL_RGB5_A1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB5_A1	/;"	d
GL_RGB5_A1	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB5_A1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB5_A1_OES /;"	d
GL_RGB5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB8	/;"	d
GL_RGB8I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB8_OES /;"	d
GL_RGB8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA	/;"	d
GL_RGBA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RGBA /;"	d
GL_RGBA12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA12	/;"	d
GL_RGBA12_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA16	/;"	d
GL_RGBA16F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGBA16F_EXT /;"	d
GL_RGBA16I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA2	/;"	d
GL_RGBA2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32F_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGBA32F_EXT /;"	d
GL_RGBA32I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA4	/;"	d
GL_RGBA4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_RGBA4 /;"	d
GL_RGBA4_DXT5_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGBA4_OES /;"	d
GL_RGBA4_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA8	/;"	d
GL_RGBA8I	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGBA8_OES /;"	d
GL_RGBA8_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_FLOAT_MODE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	d
GL_RGBA_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGBA_MODE	/;"	d
GL_RGBA_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_422_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RGB_SCALE	/;"	d
GL_RGB_SCALE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_RG_EXT /;"	d
GL_RG_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_RG_SNORM /;"	d
GL_RIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_RIGHT	/;"	d
GL_ROUND_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ROUND_NV /;"	d
GL_S	/usr/include/SDL2/SDL_opengl.h	/^#define GL_S	/;"	d
GL_S3_s3tc	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_NV /;"	d
GL_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_2D_SHADOW_EXT /;"	d
GL_SAMPLER_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_3D_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_3D_OES /;"	d
GL_SAMPLER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_CUBE_SHADOW_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_CUBE_SHADOW_NV /;"	d
GL_SAMPLER_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_EXTERNAL_OES /;"	d
GL_SAMPLER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_KHR /;"	d
GL_SAMPLER_OBJECT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLES	/;"	d
GL_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE	/;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE	/;"	d
GL_SAMPLE_ALPHA_TO_ONE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS	/;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE	/;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_INVERT	/;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_VALUE	/;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SATURATE_BIT_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCISSOR_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SCISSOR_BIT	/;"	d
GL_SCISSOR_BOX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SCISSOR_BOX	/;"	d
GL_SCISSOR_BOX	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SCISSOR_TEST	/;"	d
GL_SCISSOR_TEST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SCREEN_COORDINATES_REND	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SELECT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SELECT	/;"	d
GL_SELECTION_BUFFER_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SELECTION_BUFFER_POINTER	/;"	d
GL_SELECTION_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SELECTION_BUFFER_SIZE	/;"	d
GL_SEPARABLE_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SEPARABLE_2D	/;"	d
GL_SEPARABLE_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SEPARATE_SPECULAR_COLOR	/;"	d
GL_SEPARATE_SPECULAR_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SET	/;"	d
GL_SET_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_detail_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_point_parameters	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_point_parameters /;"	d
GL_SGIS_sharpen_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_color_mask	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_color_mask /;"	d
GL_SGIS_texture_edge_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_calligraphic_fragment	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_pass_instrument	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fragment_lighting	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_fragment_lighting /;"	d
GL_SGIX_framezoom	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_igloo_interface	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_instruments	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_instruments /;"	d
GL_SGIX_interlace	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_tiles	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_reference_plane	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subsample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_scale_bias	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_vertex_preclip	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_ycrcb	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_matrix	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SGX_BINARY_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SGX_BINARY_IMG /;"	d
GL_SGX_PROGRAM_BINARY_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SGX_PROGRAM_BINARY_IMG /;"	d
GL_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_DMP	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SHADER_BINARY_DMP /;"	d
GL_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_VIV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SHADER_BINARY_VIV /;"	d
GL_SHADER_COMPILER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_COMPILER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SHADER_KHR /;"	d
GL_SHADER_OBJECT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_SOURCE_LENGTH	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADER_TYPE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADE_MODEL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SHADE_MODEL	/;"	d
GL_SHADING_LANGUAGE_VERSION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_SHININESS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SHININESS	/;"	d
GL_SHORT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SHORT	/;"	d
GL_SHORT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNALED /;"	d
GL_SIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SIGNALED_APPLE /;"	d
GL_SIGNED_ALPHA8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SINGLE_COLOR	/;"	d
GL_SINGLE_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_COMPONENTS1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS1_NV /;"	d
GL_SKIP_COMPONENTS2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS2_NV /;"	d
GL_SKIP_COMPONENTS3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS3_NV /;"	d
GL_SKIP_COMPONENTS4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS4_NV /;"	d
GL_SKIP_DECODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_DECODE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLUMINANCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_ALPHA8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE8_ALPHA8_NV /;"	d
GL_SLUMINANCE8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE8_NV /;"	d
GL_SLUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_ALPHA_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE_ALPHA_NV /;"	d
GL_SLUMINANCE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SLUMINANCE_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE_NV /;"	d
GL_SMALL_CCW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SMOOTH	/;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY	/;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE	/;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY	/;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE	/;"	d
GL_SMOOTH_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SM_COUNT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SM_COUNT_NV /;"	d
GL_SOFTLIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE0_ALPHA	/;"	d
GL_SOURCE0_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE0_RGB	/;"	d
GL_SOURCE0_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE1_ALPHA	/;"	d
GL_SOURCE1_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE1_RGB	/;"	d
GL_SOURCE1_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE2_ALPHA	/;"	d
GL_SOURCE2_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SOURCE2_RGB	/;"	d
GL_SOURCE2_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPECULAR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SPECULAR	/;"	d
GL_SPHERE_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SPHERE_MAP	/;"	d
GL_SPOT_CUTOFF	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SPOT_CUTOFF	/;"	d
GL_SPOT_DIRECTION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SPOT_DIRECTION	/;"	d
GL_SPOT_EXPONENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SPOT_EXPONENT	/;"	d
GL_SPRITE_AXIAL_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	d
GL_SPRITE_AXIS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_AXIS_SGIX /;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	d
GL_SPRITE_MODE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_MODE_SGIX /;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	d
GL_SPRITE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_SGIX /;"	d
GL_SPRITE_TRANSLATION_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	d
GL_SQUARE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SQUARE_NV /;"	d
GL_SRC0_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ALPHA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SRC_ALPHA	/;"	d
GL_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SRC_ALPHA_SATURATE	/;"	d
GL_SRC_ALPHA_SATURATE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_ATOP_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SRC_COLOR	/;"	d
GL_SRC_COLOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SRC_COLOR /;"	d
GL_SRC_IN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB /;"	d
GL_SRGB8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB8_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SRGB8_NV /;"	d
GL_SRGB_ALPHA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STACK_OVERFLOW	/;"	d
GL_STACK_OVERFLOW_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STACK_OVERFLOW_KHR /;"	d
GL_STACK_UNDERFLOW	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STACK_UNDERFLOW	/;"	d
GL_STACK_UNDERFLOW_KHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STACK_UNDERFLOW_KHR /;"	d
GL_STANDARD_FONT_NAME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATE_RESTORE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STATE_RESTORE /;"	d
GL_STATIC_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STENCIL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL	/;"	d
GL_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_REF	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_VALUE_MASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BACK_WRITEMASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_BITS	/;"	d
GL_STENCIL_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BITS /;"	d
GL_STENCIL_BUFFER_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_BUFFER_BIT	/;"	d
GL_STENCIL_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT0_QCOM /;"	d
GL_STENCIL_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT1_QCOM /;"	d
GL_STENCIL_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT2_QCOM /;"	d
GL_STENCIL_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT3_QCOM /;"	d
GL_STENCIL_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT4_QCOM /;"	d
GL_STENCIL_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT5_QCOM /;"	d
GL_STENCIL_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT6_QCOM /;"	d
GL_STENCIL_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT7_QCOM /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_CLEAR_VALUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_CLEAR_VALUE	/;"	d
GL_STENCIL_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_EXT /;"	d
GL_STENCIL_FAIL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_FAIL	/;"	d
GL_STENCIL_FAIL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_FUNC	/;"	d
GL_STENCIL_FUNC	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_INDEX	/;"	d
GL_STENCIL_INDEX1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX1_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_INDEX1_OES /;"	d
GL_STENCIL_INDEX4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX4_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_INDEX4_OES /;"	d
GL_STENCIL_INDEX8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_OP_VALUE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL	/;"	d
GL_STENCIL_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_PASS_DEPTH_PASS	/;"	d
GL_STENCIL_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_REF	/;"	d
GL_STENCIL_REF	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_RENDERABLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TAG_BITS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_TEST	/;"	d
GL_STENCIL_TEST	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STENCIL_VALUE_MASK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_VALUE_MASK	/;"	d
GL_STENCIL_VALUE_MASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STENCIL_WRITEMASK	/;"	d
GL_STENCIL_WRITEMASK	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	/usr/include/SDL2/SDL_opengl.h	/^#define GL_STEREO	/;"	d
GL_STORAGE_CACHED_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_RASTERIZATION_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_RASTERIZATION_AMD /;"	d
GL_STREAM_READ	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBPIXEL_BITS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SUBPIXEL_BITS	/;"	d
GL_SUBPIXEL_BITS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_SUBTRACT	/;"	d
GL_SUBTRACT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_slice_accum	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SUN_vertex /;"	d
GL_SURFACE_MAPPED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_CONDITION_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_CONDITION_APPLE /;"	d
GL_SYNC_FENCE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FENCE_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FENCE_APPLE /;"	d
GL_SYNC_FLAGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLAGS_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FLAGS_APPLE /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE /;"	d
GL_SYNC_OBJECT_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_OBJECT_APPLE /;"	d
GL_SYNC_STATUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_STATUS_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_SYNC_STATUS_APPLE /;"	d
GL_SYNC_X11_FENCE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T	/;"	d
GL_T2F_C3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T2F_C3F_V3F	/;"	d
GL_T2F_C4F_N3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T2F_C4F_N3F_V3F	/;"	d
GL_T2F_C4UB_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T2F_C4UB_V3F	/;"	d
GL_T2F_IUI_N3F_V2F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	d
GL_T2F_IUI_N3F_V3F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	d
GL_T2F_IUI_V2F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_T2F_IUI_V2F_EXT /;"	d
GL_T2F_IUI_V3F_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_T2F_IUI_V3F_EXT /;"	d
GL_T2F_N3F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T2F_N3F_V3F	/;"	d
GL_T2F_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T2F_V3F	/;"	d
GL_T4F_C4F_N3F_V4F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T4F_C4F_N3F_V4F	/;"	d
GL_T4F_V4F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_T4F_V4F	/;"	d
GL_TABLE_TOO_LARGE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TABLE_TOO_LARGE	/;"	d
GL_TABLE_TOO_LARGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TABLE_TOO_LARGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	d
GL_TANGENT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TESSELLATION_FACTOR_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXCOORD1_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE	/;"	d
GL_TEXTURE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE0	/;"	d
GL_TEXTURE0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE0_ARB	/;"	d
GL_TEXTURE0_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE1	/;"	d
GL_TEXTURE1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE1	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE10	/;"	d
GL_TEXTURE10	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE10_ARB	/;"	d
GL_TEXTURE10_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE11	/;"	d
GL_TEXTURE11	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE11_ARB	/;"	d
GL_TEXTURE11_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE12	/;"	d
GL_TEXTURE12	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE12_ARB	/;"	d
GL_TEXTURE12_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE13	/;"	d
GL_TEXTURE13	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE13_ARB	/;"	d
GL_TEXTURE13_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE14	/;"	d
GL_TEXTURE14	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE14_ARB	/;"	d
GL_TEXTURE14_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE15	/;"	d
GL_TEXTURE15	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE15_ARB	/;"	d
GL_TEXTURE15_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE16	/;"	d
GL_TEXTURE16	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE16_ARB	/;"	d
GL_TEXTURE16_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE17	/;"	d
GL_TEXTURE17	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE17_ARB	/;"	d
GL_TEXTURE17_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE18	/;"	d
GL_TEXTURE18	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE18_ARB	/;"	d
GL_TEXTURE18_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE19	/;"	d
GL_TEXTURE19	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE19_ARB	/;"	d
GL_TEXTURE19_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE1_ARB	/;"	d
GL_TEXTURE1_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE2	/;"	d
GL_TEXTURE2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE2	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE20	/;"	d
GL_TEXTURE20	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE20_ARB	/;"	d
GL_TEXTURE20_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE21	/;"	d
GL_TEXTURE21	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE21_ARB	/;"	d
GL_TEXTURE21_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE22	/;"	d
GL_TEXTURE22	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE22_ARB	/;"	d
GL_TEXTURE22_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE23	/;"	d
GL_TEXTURE23	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE23_ARB	/;"	d
GL_TEXTURE23_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE24	/;"	d
GL_TEXTURE24	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE24_ARB	/;"	d
GL_TEXTURE24_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE25	/;"	d
GL_TEXTURE25	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE25_ARB	/;"	d
GL_TEXTURE25_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE26	/;"	d
GL_TEXTURE26	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE26_ARB	/;"	d
GL_TEXTURE26_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE27	/;"	d
GL_TEXTURE27	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE27_ARB	/;"	d
GL_TEXTURE27_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE28	/;"	d
GL_TEXTURE28	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE28_ARB	/;"	d
GL_TEXTURE28_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE29	/;"	d
GL_TEXTURE29	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE29_ARB	/;"	d
GL_TEXTURE29_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE2_ARB	/;"	d
GL_TEXTURE2_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE3	/;"	d
GL_TEXTURE3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE3	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE30	/;"	d
GL_TEXTURE30	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE30_ARB	/;"	d
GL_TEXTURE30_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE31	/;"	d
GL_TEXTURE31	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE31_ARB	/;"	d
GL_TEXTURE31_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE3_ARB	/;"	d
GL_TEXTURE3_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE4	/;"	d
GL_TEXTURE4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE4_ARB	/;"	d
GL_TEXTURE4_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE5	/;"	d
GL_TEXTURE5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE5_ARB	/;"	d
GL_TEXTURE5_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE6	/;"	d
GL_TEXTURE6	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE6_ARB	/;"	d
GL_TEXTURE6_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE7	/;"	d
GL_TEXTURE7	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE7_ARB	/;"	d
GL_TEXTURE7_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE8	/;"	d
GL_TEXTURE8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE8_ARB	/;"	d
GL_TEXTURE8_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE9	/;"	d
GL_TEXTURE9	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE9_ARB	/;"	d
GL_TEXTURE9_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_1D	/;"	d
GL_TEXTURE_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_2D	/;"	d
GL_TEXTURE_2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_3D	/;"	d
GL_TEXTURE_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_3D_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_3D_OES /;"	d
GL_TEXTURE_4DSIZE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	d
GL_TEXTURE_4D_BINDING_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	d
GL_TEXTURE_4D_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_4D_SGIS /;"	d
GL_TEXTURE_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_ALPHA_SIZE	/;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BASE_LEVEL	/;"	d
GL_TEXTURE_BASE_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_1D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_1D	/;"	d
GL_TEXTURE_BINDING_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_2D	/;"	d
GL_TEXTURE_BINDING_2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_3D	/;"	d
GL_TEXTURE_BINDING_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_3D_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BINDING_3D_OES /;"	d
GL_TEXTURE_BINDING_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP	/;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BINDING_EXTERNAL_OES /;"	d
GL_TEXTURE_BINDING_RECTANGLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BIT	/;"	d
GL_TEXTURE_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BLUE_SIZE	/;"	d
GL_TEXTURE_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BORDER	/;"	d
GL_TEXTURE_BORDER_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_BORDER_COLOR	/;"	d
GL_TEXTURE_BORDER_COLOR_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BORDER_COLOR_NV /;"	d
GL_TEXTURE_BORDER_VALUES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_COMPARE_FUNC_EXT /;"	d
GL_TEXTURE_COMPARE_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_MODE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_COMPARE_MODE_EXT /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COMPONENTS	/;"	d
GL_TEXTURE_COMPRESSED	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED	/;"	d
GL_TEXTURE_COMPRESSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSION_HINT	/;"	d
GL_TEXTURE_COMPRESSION_HINT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY	/;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER	/;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE	/;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE	/;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE	/;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP	/;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X	/;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEFORMATION_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	d
GL_TEXTURE_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH	/;"	d
GL_TEXTURE_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_DEPTH_QCOM /;"	d
GL_TEXTURE_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_ENV	/;"	d
GL_TEXTURE_ENV_BIAS_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	d
GL_TEXTURE_ENV_COLOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_ENV_COLOR	/;"	d
GL_TEXTURE_ENV_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_ENV_MODE	/;"	d
GL_TEXTURE_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_EXTERNAL_OES /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	d
GL_TEXTURE_FILTER_CONTROL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FORMAT_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_FORMAT_QCOM /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEN_MODE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GEN_MODE	/;"	d
GL_TEXTURE_GEN_Q	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GEN_Q	/;"	d
GL_TEXTURE_GEN_R	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GEN_R	/;"	d
GL_TEXTURE_GEN_S	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GEN_S	/;"	d
GL_TEXTURE_GEN_T	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GEN_T	/;"	d
GL_TEXTURE_GEQUAL_R_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_GREEN_SIZE	/;"	d
GL_TEXTURE_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HEIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_HEIGHT	/;"	d
GL_TEXTURE_HEIGHT_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_HEIGHT_QCOM /;"	d
GL_TEXTURE_HI_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMAGE_VALID_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_IMAGE_VALID_QCOM /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_INTENSITY_SIZE	/;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_INTERNAL_FORMAT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_INTERNAL_FORMAT	/;"	d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_INTERNAL_FORMAT_QCOM /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHTING_MODE_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	d
GL_TEXTURE_LIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	d
GL_TEXTURE_LO_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_LUMINANCE_SIZE	/;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_FILTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MAG_FILTER	/;"	d
GL_TEXTURE_MAG_FILTER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAG_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MATRIX	/;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LEVEL	/;"	d
GL_TEXTURE_MAX_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_MAX_LEVEL_APPLE /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LOD	/;"	d
GL_TEXTURE_MAX_LOD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_FILTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MIN_FILTER	/;"	d
GL_TEXTURE_MIN_FILTER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_MIN_LOD	/;"	d
GL_TEXTURE_MIN_LOD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_NUM_LEVELS_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_NUM_LEVELS_QCOM /;"	d
GL_TEXTURE_OBJECT_VALID_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_OBJECT_VALID_QCOM /;"	d
GL_TEXTURE_POST_SPECULAR_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	d
GL_TEXTURE_PRE_SPECULAR_HP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	d
GL_TEXTURE_PRIORITY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_PRIORITY	/;"	d
GL_TEXTURE_PRIORITY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_RED_SIZE	/;"	d
GL_TEXTURE_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_RESIDENT	/;"	d
GL_TEXTURE_RESIDENT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_SAMPLES_IMG /;"	d
GL_TEXTURE_SHADER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_STACK_DEPTH	/;"	d
GL_TEXTURE_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TARGET_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_TARGET_QCOM /;"	d
GL_TEXTURE_TOO_LARGE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	d
GL_TEXTURE_TYPE_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_TYPE_QCOM /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_USAGE_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_USAGE_ANGLE /;"	d
GL_TEXTURE_VIEW	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WIDTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_WIDTH	/;"	d
GL_TEXTURE_WIDTH_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_WIDTH_QCOM /;"	d
GL_TEXTURE_WRAP_Q_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	d
GL_TEXTURE_WRAP_R	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_R	/;"	d
GL_TEXTURE_WRAP_R	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXTURE_WRAP_R_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_WRAP_R_OES /;"	d
GL_TEXTURE_WRAP_S	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_S	/;"	d
GL_TEXTURE_WRAP_S	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_T	/;"	d
GL_TEXTURE_WRAP_T	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TIMEOUT_EXPIRED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_EXPIRED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TIMEOUT_EXPIRED_APPLE /;"	d
GL_TIMEOUT_IGNORED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMEOUT_IGNORED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TIMEOUT_IGNORED_APPLE /;"	d
GL_TIMESTAMP	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TIMESTAMP /;"	d
GL_TIMESTAMP_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TIMESTAMP_EXT /;"	d
GL_TIME_ELAPSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TIME_ELAPSED_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACK_MATRIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRANSFORM_BIT	/;"	d
GL_TRANSFORM_FEEDBACK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE /;"	d
GL_TRANSLATE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRANSPOSE_COLOR_MATRIX	/;"	d
GL_TRANSPOSE_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX	/;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX	/;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX	/;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRIANGLES	/;"	d
GL_TRIANGLES	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLE_FAN	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRIANGLE_FAN	/;"	d
GL_TRIANGLE_FAN	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_LIST_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRIANGLE_STRIP	/;"	d
GL_TRIANGLE_STRIP	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGULAR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TRUE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_TRUE	/;"	d
GL_TRUE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_TRUE /;"	d
GL_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNKNOWN_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_EXT /;"	d
GL_UNPACK_ALIGNMENT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_ALIGNMENT	/;"	d
GL_UNPACK_ALIGNMENT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	d
GL_UNPACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_IMAGE_HEIGHT	/;"	d
GL_UNPACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_LSB_FIRST	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_LSB_FIRST	/;"	d
GL_UNPACK_RESAMPLE_OML	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_ROW_LENGTH	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_ROW_LENGTH	/;"	d
GL_UNPACK_ROW_LENGTH_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_ROW_LENGTH_EXT /;"	d
GL_UNPACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_SKIP_IMAGES	/;"	d
GL_UNPACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_PIXELS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_SKIP_PIXELS	/;"	d
GL_UNPACK_SKIP_PIXELS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_SKIP_PIXELS_EXT /;"	d
GL_UNPACK_SKIP_ROWS	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_SKIP_ROWS	/;"	d
GL_UNPACK_SKIP_ROWS_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_SKIP_ROWS_EXT /;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNPACK_SWAP_BYTES	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNPACK_SWAP_BYTES	/;"	d
GL_UNSIGNALED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNALED_APPLE /;"	d
GL_UNSIGNED_BYTE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE	/;"	d
GL_UNSIGNED_BYTE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV	/;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_3_3_2	/;"	d
GL_UNSIGNED_BYTE_3_3_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT	/;"	d
GL_UNSIGNED_INT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_10_10_10_2	/;"	d
GL_UNSIGNED_INT_10_10_10_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_OES /;"	d
GL_UNSIGNED_INT_24_8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_MESA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_24_8_MESA	/;"	d
GL_UNSIGNED_INT_24_8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_24_8_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_24_8_OES /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV	/;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_24_REV_MESA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_24_REV_MESA	/;"	d
GL_UNSIGNED_INT_8_8_8_8	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8	/;"	d
GL_UNSIGNED_INT_8_8_8_8	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV	/;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_NORMALIZED_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_NORMALIZED_EXT /;"	d
GL_UNSIGNED_SHORT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT	/;"	d
GL_UNSIGNED_SHORT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_15_1_MESA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_15_1_MESA	/;"	d
GL_UNSIGNED_SHORT_1_15_REV_MESA	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_1_15_REV_MESA	/;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV	/;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4	/;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV	/;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1	/;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5	/;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	/usr/include/SDL2/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV	/;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_UTF8_NV /;"	d
GL_V2F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_V2F	/;"	d
GL_V3F	/usr/include/SDL2/SDL_opengl.h	/^#define GL_V3F	/;"	d
GL_VALIDATE_STATUS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VALIDATE_STATUS	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VECTOR_EXT /;"	d
GL_VENDOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VENDOR	/;"	d
GL_VENDOR	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VENDOR /;"	d
GL_VERSION	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERSION	/;"	d
GL_VERSION	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_1	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERTEX23_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERTEX_ARRAY	/;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BINDING_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ARRAY_BINDING_OES /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_POINTER	/;"	d
GL_VERTEX_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_SIZE	/;"	d
GL_VERTEX_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_STRIDE	/;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_TYPE	/;"	d
GL_VERTEX_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_BIT_EXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_SHADER_BIT_EXT /;"	d
GL_VERTEX_SHADER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VIBRANCE_BIAS_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIEWPORT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VIEWPORT	/;"	d
GL_VIEWPORT	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BIT	/usr/include/SDL2/SDL_opengl.h	/^#define GL_VIEWPORT_BIT	/;"	d
GL_VIEWPORT_BOUNDS_RANGE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VIV_shader_binary	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_VIV_shader_binary /;"	d
GL_VOLATILE_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WAIT_FAILED /;"	d
GL_WAIT_FAILED_APPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_WAIT_FAILED_APPLE /;"	d
GL_WARPS_PER_SM_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WARPS_PER_SM_NV /;"	d
GL_WARP_SIZE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WARP_SIZE_NV /;"	d
GL_WEIGHT_ARRAY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WIN_phong_shading	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WIN_specular_fog /;"	d
GL_WRAP_BORDER_SUN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITEONLY_RENDERING_QCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_WRITEONLY_RENDERING_QCOM /;"	d
GL_WRITE_DISCARD_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_ONLY_OES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_WRITE_ONLY_OES /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_W_EXT /;"	d
GL_XOR	/usr/include/SDL2/SDL_opengl.h	/^#define GL_XOR	/;"	d
GL_XOR_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_YCRCBA_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_422_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCRCB_422_SGIX /;"	d
GL_YCRCB_444_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCRCB_444_SGIX /;"	d
GL_YCRCB_SGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Y_EXT /;"	d
GL_Z400_BINARY_AMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define GL_Z400_BINARY_AMD /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ZERO	/;"	d
GL_ZERO	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define GL_ZERO /;"	d
GL_ZERO_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_ZERO_EXT /;"	d
GL_ZOOM_X	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ZOOM_X	/;"	d
GL_ZOOM_Y	/usr/include/SDL2/SDL_opengl.h	/^#define GL_ZOOM_Y	/;"	d
GL_Z_EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^#define GL_Z_EXT /;"	d
GLbitfield	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned int	GLbitfield;$/;"	t	typeref:typename:unsigned int
GLbitfield	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef unsigned int     GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned char	GLboolean;$/;"	t	typeref:typename:unsigned char
GLboolean	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef unsigned char    GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	/usr/include/SDL2/SDL_opengl.h	/^typedef signed char	GLbyte;		\/* 1-byte signed *\/$/;"	t	typeref:typename:signed char
GLbyte	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_int8_t   GLbyte;$/;"	t	typeref:typename:khronos_int8_t
GLchar	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLchar	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef char             GLchar;$/;"	t	typeref:typename:char
GLcharARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	/usr/include/SDL2/SDL_opengl.h	/^typedef double		GLclampd;	\/* double precision float in [0,1] *\/$/;"	t	typeref:typename:double
GLclampf	/usr/include/SDL2/SDL_opengl.h	/^typedef float		GLclampf;	\/* single precision float in [0,1] *\/$/;"	t	typeref:typename:float
GLclampf	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_float_t  GLclampf;$/;"	t	typeref:typename:khronos_float_t
GLdouble	/usr/include/SDL2/SDL_opengl.h	/^typedef double		GLdouble;	\/* double precision float *\/$/;"	t	typeref:typename:double
GLeglImageOES	/usr/include/SDL2/SDL_opengl.h	/^typedef void* GLeglImageOES;$/;"	t	typeref:typename:void *
GLeglImageOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void* GLeglImageOES;$/;"	t	typeref:typename:void *
GLenum	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned int	GLenum;$/;"	t	typeref:typename:unsigned int
GLenum	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef unsigned int     GLenum;$/;"	t	typeref:typename:unsigned int
GLfixed	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint GLfixed;$/;"	t	typeref:typename:GLint
GLfixed	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_int32_t  GLfixed;$/;"	t	typeref:typename:khronos_int32_t
GLfloat	/usr/include/SDL2/SDL_opengl.h	/^typedef float		GLfloat;	\/* single precision float *\/$/;"	t	typeref:typename:float
GLfloat	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_float_t  GLfloat;$/;"	t	typeref:typename:khronos_float_t
GLhalf	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint	/usr/include/SDL2/SDL_opengl.h	/^typedef int		GLint;		\/* 4-byte signed *\/$/;"	t	typeref:typename:int
GLint	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef int              GLint;$/;"	t	typeref:typename:int
GLint64	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef khronos_int64_t GLint64;$/;"	t	typeref:typename:khronos_int64_t
GLint64EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long GLintptr;$/;"	t	typeref:typename:long
GLintptr	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptr	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_intptr_t GLintptr;$/;"	t	typeref:typename:khronos_intptr_t
GLintptrARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long GLintptrARB;$/;"	t	typeref:typename:long
GLintptrARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLshort	/usr/include/SDL2/SDL_opengl.h	/^typedef short		GLshort;	\/* 2-byte signed *\/$/;"	t	typeref:typename:short
GLshort	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef short            GLshort;$/;"	t	typeref:typename:short
GLsizei	/usr/include/SDL2/SDL_opengl.h	/^typedef int		GLsizei;	\/* 4-byte signed *\/$/;"	t	typeref:typename:int
GLsizei	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef int              GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long GLsizeiptr;$/;"	t	typeref:typename:long
GLsizeiptr	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_ssize_t  GLsizeiptr;$/;"	t	typeref:typename:khronos_ssize_t
GLsizeiptrARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long GLsizeiptrARB;$/;"	t	typeref:typename:long
GLsizeiptrARB	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLsync	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned char	GLubyte;	\/* 1-byte unsigned *\/$/;"	t	typeref:typename:unsigned char
GLubyte	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef khronos_uint8_t  GLubyte;$/;"	t	typeref:typename:khronos_uint8_t
GLuint	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned int	GLuint;		\/* 4-byte unsigned *\/$/;"	t	typeref:typename:unsigned int
GLuint	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef unsigned int     GLuint;$/;"	t	typeref:typename:unsigned int
GLuint	/usr/include/SDL2/SDL_syswm.h	/^typedef Uint32 GLuint;$/;"	t	typeref:typename:Uint32
GLuint64	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef khronos_uint64_t GLuint64;$/;"	t	typeref:typename:khronos_uint64_t
GLuint64EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLushort	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned short	GLushort;	\/* 2-byte unsigned *\/$/;"	t	typeref:typename:unsigned short
GLushort	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef unsigned short   GLushort;$/;"	t	typeref:typename:unsigned short
GLvdpauSurfaceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	/usr/include/SDL2/SDL_opengl.h	/^typedef void		GLvoid;$/;"	t	typeref:typename:void
GLvoid	/usr/include/SDL2/SDL_opengles2_gl2.h	/^typedef void             GLvoid;$/;"	t	typeref:typename:void
Gloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Gmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Gshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
HAVE_ABS	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ABS /;"	d
HAVE_ABS	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ABS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ACOS /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ACOSF /;"	d
HAVE_ACOSF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ACOSF /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ASIN /;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ASIN /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ASINF /;"	d
HAVE_ASINF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ASINF /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATAN /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATAN2 /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATAN2F	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATAN2F /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATANF /;"	d
HAVE_ATANF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATANF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_ATOI /;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ATOI /;"	d
HAVE_AUDIOCLIENT_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_AUDIOCLIENT_H /;"	d
HAVE_AUDIOCLIENT_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_AUDIOCLIENT_H /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_BCOPY /;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_BCOPY /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_CALLOC /;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_CALLOC /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_CEIL /;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_CEIL /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_CEILF /;"	d
HAVE_CEILF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_CEILF /;"	d
HAVE_CLOCK_GETTIME	/usr/include/SDL2/SDL_config.h	/^#define HAVE_CLOCK_GETTIME /;"	d
HAVE_CLOCK_GETTIME	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_CLOCK_GETTIME /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COPYSIGNF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_COPYSIGNF /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_COS /;"	d
HAVE_COS	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_COS /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_COSF /;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_COSF /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_DBUS_DBUS_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_DBUS_DBUS_H /;"	d
HAVE_DDRAW_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_DDRAW_H /;"	d
HAVE_DINPUT_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_DINPUT_H /;"	d
HAVE_DSOUND_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_DSOUND_H /;"	d
HAVE_DXGI_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_DXGI_H /;"	d
HAVE_DXGI_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_DXGI_H /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_EXP /;"	d
HAVE_EXP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_EXP /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_EXPF /;"	d
HAVE_EXPF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_EXPF /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FABS /;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FABS /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FABSF /;"	d
HAVE_FABSF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FABSF /;"	d
HAVE_FCITX_FRONTEND_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FCITX_FRONTEND_H /;"	d
HAVE_FLOAT_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FLOAT_H /;"	d
HAVE_FLOAT_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_FLOAT_H /;"	d
HAVE_FLOAT_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FLOAT_H /;"	d
HAVE_FLOAT_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FLOAT_H /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FLOOR /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FLOORF /;"	d
HAVE_FLOORF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FLOORF /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FMOD /;"	d
HAVE_FMOD	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FMOD /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FMODF /;"	d
HAVE_FMODF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FMODF /;"	d
HAVE_FOPEN64	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FOPEN64 /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_FREE /;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_FREE /;"	d
HAVE_FSEEKO	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FSEEKO /;"	d
HAVE_FSEEKO64	/usr/include/SDL2/SDL_config.h	/^#define HAVE_FSEEKO64 /;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config.h	/^#define HAVE_GCC_ATOMICS /;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_GCC_ATOMICS /;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_GCC_ATOMICS /;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_GCC_ATOMICS /;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_GCC_ATOMICS /;"	d
HAVE_GCC_SYNC_LOCK_TEST_AND_SET	/usr/include/SDL2/SDL_config_minimal.h	/^#define HAVE_GCC_SYNC_LOCK_TEST_AND_SET /;"	d
HAVE_GCC_SYNC_LOCK_TEST_AND_SET	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_GCC_SYNC_LOCK_TEST_AND_SET /;"	d
HAVE_GETAUXVAL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_GETAUXVAL /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_GETENV /;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_GETENV /;"	d
HAVE_IBUS_IBUS_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_IBUS_IBUS_H /;"	d
HAVE_ICONV_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_ICONV_H /;"	d
HAVE_ICONV_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_ICONV_H /;"	d
HAVE_ICONV_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_ICONV_H /;"	d
HAVE_IMMINTRIN_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_IMMINTRIN_H /;"	d
HAVE_INDEX	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_INDEX /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_ITOA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_ITOA /;"	d
HAVE_LIBC	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LIBC /;"	d
HAVE_LIBC	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_LIBC /;"	d
HAVE_LIBC	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LIBC /;"	d
HAVE_LIBSAMPLERATE_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LIBSAMPLERATE_H /;"	d
HAVE_LIBUDEV_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LIBUDEV_H /;"	d
HAVE_LIBUNWIND_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LIBUNWIND_H /;"	d
HAVE_LIBUNWIND_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LIBUNWIND_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LIMITS_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LOG /;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_LOG /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_LOG10 /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOG10F	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_LOG10F /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_LOGF /;"	d
HAVE_LOGF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_LOGF /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MALLOC_H /;"	d
HAVE_MALLOC_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MALLOC_H /;"	d
HAVE_MALLOC_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MALLOC_H /;"	d
HAVE_MALLOC_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MALLOC_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MATH_H /;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MATH_H /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMORY_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MEMORY_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MEMORY_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MEMORY_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MEMSET /;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_MEMSET /;"	d
HAVE_MMDEVICEAPI_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_MMDEVICEAPI_H /;"	d
HAVE_MMDEVICEAPI_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_MMDEVICEAPI_H /;"	d
HAVE_MPROTECT	/usr/include/SDL2/SDL_config.h	/^#define HAVE_MPROTECT /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_M_PI /;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_M_PI /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_POLL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_POLL /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_POW /;"	d
HAVE_POW	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_POW /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_POWF /;"	d
HAVE_POWF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_POWF /;"	d
HAVE_PTHREAD_SETNAME_NP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_PTHREAD_SETNAME_NP /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_PUTENV /;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_PUTENV /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_QSORT /;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_QSORT /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_REALLOC /;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_REALLOC /;"	d
HAVE_RINDEX	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_RINDEX /;"	d
HAVE_SA_SIGACTION	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SA_SIGACTION /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SCALBN /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SCALBNF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SCALBNF /;"	d
HAVE_SEM_TIMEDWAIT	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SEM_TIMEDWAIT /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SETENV /;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SETENV /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SETJMP /;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SETJMP /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_SIN /;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SIN /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_SINF /;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SINF /;"	d
HAVE_SNPRINTF	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SNPRINTF /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SQRT /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_SQRTF /;"	d
HAVE_SQRTF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SQRTF /;"	d
HAVE_SSCANF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SSCANF /;"	d
HAVE_SSCANF	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SSCANF /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config_minimal.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDDEF_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDDEF_H /;"	d
HAVE_STDDEF_H	/usr/include/SDL2/SDL_config_minimal.h	/^#define HAVE_STDDEF_H /;"	d
HAVE_STDDEF_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STDDEF_H /;"	d
HAVE_STDDEF_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STDDEF_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDINT_H	/;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_minimal.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDLIB_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STDLIB_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STDLIB_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STDLIB_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRICMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRICMP /;"	d
HAVE_STRINGS_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRINGS_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRINGS_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRINGS_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRLCAT	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRLCAT /;"	d
HAVE_STRLCAT	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRLCAT /;"	d
HAVE_STRLCAT	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRLCAT /;"	d
HAVE_STRLCAT	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRLCAT /;"	d
HAVE_STRLCAT	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRLCAT /;"	d
HAVE_STRLCPY	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRLCPY /;"	d
HAVE_STRLCPY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRLCPY /;"	d
HAVE_STRLCPY	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRLCPY /;"	d
HAVE_STRLCPY	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRLCPY /;"	d
HAVE_STRLCPY	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRLCPY /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOK_R	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOK_R /;"	d
HAVE_STRTOK_R	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOK_R /;"	d
HAVE_STRTOK_R	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOK_R /;"	d
HAVE_STRTOK_R	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOK_R /;"	d
HAVE_STRTOK_R	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRTOK_R /;"	d
HAVE_STRTOK_S	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRTOK_S /;"	d
HAVE_STRTOK_S	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRTOK_S /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_STRTOULL /;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_STRTOULL /;"	d
HAVE_SYSCONF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYSCONF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYSCONF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYSCONF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYSCTLBYNAME	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SYSCTLBYNAME /;"	d
HAVE_SYSCTLBYNAME	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SYSCTLBYNAME /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_TAN /;"	d
HAVE_TAN	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_TAN /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_TANF /;"	d
HAVE_TANF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_TANF /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_UNSETENV /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_android.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_macosx.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_pandora.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_psp.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_VSSCANF /;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config_wiz.h	/^#define HAVE_VSSCANF /;"	d
HAVE_WCHAR_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCHAR_H /;"	d
HAVE_WCHAR_H	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCHAR_H /;"	d
HAVE_WCSCMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCSCMP /;"	d
HAVE_WCSCMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSCMP /;"	d
HAVE_WCSDUP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCSDUP /;"	d
HAVE_WCSLCAT	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSLCAT /;"	d
HAVE_WCSLCPY	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSLCPY /;"	d
HAVE_WCSLEN	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCSLEN /;"	d
HAVE_WCSLEN	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSLEN /;"	d
HAVE_WCSNCMP	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCSNCMP /;"	d
HAVE_WCSNCMP	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSNCMP /;"	d
HAVE_WCSSTR	/usr/include/SDL2/SDL_config.h	/^#define HAVE_WCSSTR /;"	d
HAVE_WCSSTR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE_WCSSTR /;"	d
HAVE_WINAPIFAMILY_H	/usr/include/SDL2/SDL_platform.h	/^#define HAVE_WINAPIFAMILY_H /;"	d
HAVE_XINPUT_H	/usr/include/SDL2/SDL_config.h	/^#define HAVE_XINPUT_H /;"	d
HAVE_XINPUT_H	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE_XINPUT_H /;"	d
HAVE_XINPUT_H	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE_XINPUT_H /;"	d
HAVE__COPYSIGN	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE__COPYSIGN /;"	d
HAVE__COPYSIGN	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__COPYSIGN /;"	d
HAVE__EXIT	/usr/include/SDL2/SDL_config.h	/^#define HAVE__EXIT /;"	d
HAVE__FSEEKI64	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__FSEEKI64 /;"	d
HAVE__FSEEKI64	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE__FSEEKI64 /;"	d
HAVE__FSEEKI64	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__FSEEKI64 /;"	d
HAVE__FTELLI64	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__FTELLI64 /;"	d
HAVE__I64TOA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__I64TOA /;"	d
HAVE__LTOA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__LTOA /;"	d
HAVE__SCALB	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__SCALB /;"	d
HAVE__STRICMP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE__STRICMP /;"	d
HAVE__STRICMP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__STRICMP /;"	d
HAVE__STRLWR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__STRLWR /;"	d
HAVE__STRNICMP	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE__STRNICMP /;"	d
HAVE__STRNICMP	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__STRNICMP /;"	d
HAVE__STRREV	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__STRREV /;"	d
HAVE__STRREV	/usr/include/SDL2/SDL_config_windows.h	/^#define HAVE__STRREV /;"	d
HAVE__STRREV	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__STRREV /;"	d
HAVE__STRUPR	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__STRUPR /;"	d
HAVE__STRUPR	/usr/include/SDL2/SDL_config_winrt.h	/^#define HAVE__STRUPR /;"	d
HAVE__UI64TOA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__UI64TOA /;"	d
HAVE__ULTOA	/usr/include/SDL2/SDL_config_os2.h	/^#define HAVE__ULTOA /;"	d
IDirect3DDevice9	/usr/include/SDL2/SDL_system.h	/^typedef struct IDirect3DDevice9 IDirect3DDevice9;$/;"	t	typeref:struct:IDirect3DDevice9
INADDR_ANY	/usr/include/SDL2/SDL_net.h	/^#define INADDR_ANY /;"	d
INADDR_BROADCAST	/usr/include/SDL2/SDL_net.h	/^#define INADDR_BROADCAST /;"	d
INADDR_LOOPBACK	/usr/include/SDL2/SDL_net.h	/^#define INADDR_LOOPBACK /;"	d
INADDR_NONE	/usr/include/SDL2/SDL_net.h	/^#define INADDR_NONE /;"	d
IPaddress	/usr/include/SDL2/SDL_net.h	/^} IPaddress;$/;"	t	typeref:struct:__anonf2bfe3b30108
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_egl.h	/^#define KHRONOS_APIATTRIBUTES /;"	d
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_egl.h	/^#define KHRONOS_APIATTRIBUTES$/;"	d
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define KHRONOS_APIATTRIBUTES /;"	d
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define KHRONOS_APIATTRIBUTES$/;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_egl.h	/^#   define KHRONOS_APICALL /;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_egl.h	/^#   define KHRONOS_APICALL$/;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APICALL /;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APICALL$/;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_egl.h	/^#   define KHRONOS_APIENTRY /;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_egl.h	/^#   define KHRONOS_APIENTRY$/;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APIENTRY /;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APIENTRY$/;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	/usr/include/SDL2/SDL_egl.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anonf21dfde40103	access:public
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anond2fc05840103	access:public
KHRONOS_FALSE	/usr/include/SDL2/SDL_egl.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anonf21dfde40103	access:public
KHRONOS_FALSE	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anond2fc05840103	access:public
KHRONOS_MAX_ENUM	/usr/include/SDL2/SDL_egl.h	/^#define KHRONOS_MAX_ENUM /;"	d
KHRONOS_MAX_ENUM	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define KHRONOS_MAX_ENUM /;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_egl.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_egl.h	/^#define KHRONOS_SUPPORT_INT64 /;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define KHRONOS_SUPPORT_INT64 /;"	d
KHRONOS_TRUE	/usr/include/SDL2/SDL_egl.h	/^    KHRONOS_TRUE = 1,$/;"	e	enum:__anonf21dfde40103	access:public
KHRONOS_TRUE	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anond2fc05840103	access:public
KMOD_ALT	/usr/include/SDL2/SDL_keycode.h	/^#define KMOD_ALT /;"	d
KMOD_CAPS	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_CAPS = 0x2000,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_CTRL	/usr/include/SDL2/SDL_keycode.h	/^#define KMOD_CTRL /;"	d
KMOD_GUI	/usr/include/SDL2/SDL_keycode.h	/^#define KMOD_GUI /;"	d
KMOD_LALT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LALT = 0x0100,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_LCTRL	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LCTRL = 0x0040,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_LGUI	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LGUI = 0x0400,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_LSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LSHIFT = 0x0001,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_MODE	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_MODE = 0x4000,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_NONE	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_NONE = 0x0000,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_NUM	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_NUM = 0x1000,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_RALT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RALT = 0x0200,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_RCTRL	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RCTRL = 0x0080,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_RESERVED	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RESERVED = 0x8000$/;"	e	enum:__anonf26700b00203	access:public
KMOD_RGUI	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RGUI = 0x0800,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_RSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RSHIFT = 0x0002,$/;"	e	enum:__anonf26700b00203	access:public
KMOD_SHIFT	/usr/include/SDL2/SDL_keycode.h	/^#define KMOD_SHIFT /;"	d
LACKS_SYS_MMAN_H	/usr/include/SDL2/SDL_config_psp.h	/^#define LACKS_SYS_MMAN_H /;"	d
LONG_PTR	/usr/include/SDL2/SDL_config.h	/^#define LONG_PTR /;"	d
LONG_PTR	/usr/include/SDL2/SDL_config_windows.h	/^#define LONG_PTR /;"	d
LONG_PTR	/usr/include/SDL2/SDL_config_winrt.h	/^#define LONG_PTR /;"	d
MD5UINT4	/usr/include/SDL2/SDL_test_md5.h	/^  typedef unsigned long int MD5UINT4;$/;"	t	typeref:typename:unsigned long int
MIX_CHANNELS	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_CHANNELS /;"	d
MIX_CHANNEL_POST	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_CHANNEL_POST /;"	d
MIX_DEFAULT_CHANNELS	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_DEFAULT_CHANNELS /;"	d
MIX_DEFAULT_FORMAT	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_DEFAULT_FORMAT /;"	d
MIX_DEFAULT_FREQUENCY	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_DEFAULT_FREQUENCY /;"	d
MIX_EFFECTSMAXSPEED	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_EFFECTSMAXSPEED /;"	d
MIX_FADING_IN	/usr/include/SDL2/SDL_mixer.h	/^    MIX_FADING_IN$/;"	e	enum:__anon5f08bdf10203	access:public
MIX_FADING_OUT	/usr/include/SDL2/SDL_mixer.h	/^    MIX_FADING_OUT,$/;"	e	enum:__anon5f08bdf10203	access:public
MIX_INIT_FLAC	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_FLAC   = 0x00000001,$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_INIT_MID	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_MID    = 0x00000020,$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_INIT_MOD	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_MOD    = 0x00000002,$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_INIT_MP3	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_MP3    = 0x00000008,$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_INIT_OGG	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_OGG    = 0x00000010,$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_INIT_OPUS	/usr/include/SDL2/SDL_mixer.h	/^    MIX_INIT_OPUS   = 0x00000040$/;"	e	enum:__anon5f08bdf10103	access:public
MIX_InitFlags	/usr/include/SDL2/SDL_mixer.h	/^} MIX_InitFlags;$/;"	t	typeref:enum:__anon5f08bdf10103
MIX_MAJOR_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_MAJOR_VERSION /;"	d
MIX_MAX_VOLUME	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_MAX_VOLUME /;"	d
MIX_MINOR_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_MINOR_VERSION /;"	d
MIX_NO_FADING	/usr/include/SDL2/SDL_mixer.h	/^    MIX_NO_FADING,$/;"	e	enum:__anon5f08bdf10203	access:public
MIX_PATCHLEVEL	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_PATCHLEVEL /;"	d
MIX_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define MIX_VERSION(/;"	d	signature:(X)
MUS_CMD	/usr/include/SDL2/SDL_mixer.h	/^    MUS_CMD,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_FLAC	/usr/include/SDL2/SDL_mixer.h	/^    MUS_FLAC,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_MID	/usr/include/SDL2/SDL_mixer.h	/^    MUS_MID,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_MOD	/usr/include/SDL2/SDL_mixer.h	/^    MUS_MOD,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_MODPLUG_UNUSED	/usr/include/SDL2/SDL_mixer.h	/^    MUS_MODPLUG_UNUSED,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_MP3	/usr/include/SDL2/SDL_mixer.h	/^    MUS_MP3,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_MP3_MAD_UNUSED	/usr/include/SDL2/SDL_mixer.h	/^    MUS_MP3_MAD_UNUSED,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_NONE	/usr/include/SDL2/SDL_mixer.h	/^    MUS_NONE,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_OGG	/usr/include/SDL2/SDL_mixer.h	/^    MUS_OGG,$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_OPUS	/usr/include/SDL2/SDL_mixer.h	/^    MUS_OPUS$/;"	e	enum:__anon5f08bdf10303	access:public
MUS_WAV	/usr/include/SDL2/SDL_mixer.h	/^    MUS_WAV,$/;"	e	enum:__anon5f08bdf10303	access:public
M_PI	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#define M_PI	/;"	d
M_PI	/usr/include/SDL2/SDL2_rotozoom.h	/^#define M_PI	/;"	d
M_PI	/usr/include/SDL2/SDL_stdinc.h	/^#define M_PI /;"	d
Mix_AllocateChannels	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_AllocateChannels(int numchans);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int numchans)
Mix_ChannelFinished	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_ChannelFinished(void (SDLCALL *channel_finished)(int channel));$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (SDLCALL * channel_finished)(int channel))
Mix_Chunk	/usr/include/SDL2/SDL_mixer.h	/^typedef struct Mix_Chunk {$/;"	s
Mix_Chunk	/usr/include/SDL2/SDL_mixer.h	/^} Mix_Chunk;$/;"	t	typeref:struct:Mix_Chunk
Mix_Chunk::abuf	/usr/include/SDL2/SDL_mixer.h	/^    Uint8 *abuf;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8 *	access:public
Mix_Chunk::alen	/usr/include/SDL2/SDL_mixer.h	/^    Uint32 alen;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint32	access:public
Mix_Chunk::allocated	/usr/include/SDL2/SDL_mixer.h	/^    int allocated;$/;"	m	struct:Mix_Chunk	typeref:typename:int	access:public
Mix_Chunk::volume	/usr/include/SDL2/SDL_mixer.h	/^    Uint8 volume;       \/* Per-sample volume, 0-128 *\/$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8	access:public
Mix_ClearError	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_ClearError /;"	d
Mix_CloseAudio	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_CloseAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_EachSoundFont	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_EachSoundFont(int (SDLCALL *function)(const char*, void*), void /;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int (SDLCALL * function)(const char *,void *),void * data)
Mix_EffectDone_t	/usr/include/SDL2/SDL_mixer.h	/^typedef void (SDLCALL *Mix_EffectDone_t)(int chan, void *udata);$/;"	t	typeref:typename:void (SDLCALL *)(int chan,void * udata)
Mix_EffectFunc_t	/usr/include/SDL2/SDL_mixer.h	/^typedef void (SDLCALL *Mix_EffectFunc_t)(int chan, void *stream, int len, void *udata);$/;"	t	typeref:typename:void (SDLCALL *)(int chan,void * stream,int len,void * udata)
Mix_ExpireChannel	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_ExpireChannel(int channel, int ticks);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int ticks)
Mix_FadeInChannel	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_FadeInChannel(/;"	d	signature:(channel,chunk,loops,ms)
Mix_FadeInChannelTimed	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInChannelTimed(int channel, Mix_Chunk *chunk, int loops, int/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_Chunk * chunk,int loops,int ms,int ticks)
Mix_FadeInMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInMusic(Mix_Music *music, int loops, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops,int ms)
Mix_FadeInMusicPos	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInMusicPos(Mix_Music *music, int loops, int ms, double posit/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops,int ms,double position)
Mix_FadeOutChannel	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutChannel(int which, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int which,int ms)
Mix_FadeOutGroup	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutGroup(int tag, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag,int ms)
Mix_FadeOutMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutMusic(int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int ms)
Mix_Fading	/usr/include/SDL2/SDL_mixer.h	/^} Mix_Fading;$/;"	t	typeref:enum:__anon5f08bdf10203
Mix_FadingChannel	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Fading SDLCALL Mix_FadingChannel(int which);$/;"	p	typeref:typename:DECLSPEC Mix_Fading SDLCALL	signature:(int which)
Mix_FadingMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Fading SDLCALL Mix_FadingMusic(void);$/;"	p	typeref:typename:DECLSPEC Mix_Fading SDLCALL	signature:(void)
Mix_FreeChunk	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_FreeChunk(Mix_Chunk *chunk);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Mix_Chunk * chunk)
Mix_FreeMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_FreeMusic(Mix_Music *music);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Mix_Music * music)
Mix_GetChunk	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_GetChunk(int channel);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(int channel)
Mix_GetChunkDecoder	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC const char * SDLCALL Mix_GetChunkDecoder(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
Mix_GetError	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_GetError /;"	d
Mix_GetMusicDecoder	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC const char * SDLCALL Mix_GetMusicDecoder(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
Mix_GetMusicHookData	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void * SDLCALL Mix_GetMusicHookData(void);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
Mix_GetMusicType	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_MusicType SDLCALL Mix_GetMusicType(const Mix_Music *music);$/;"	p	typeref:typename:DECLSPEC Mix_MusicType SDLCALL	signature:(const Mix_Music * music)
Mix_GetNumChunkDecoders	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetNumChunkDecoders(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GetNumMusicDecoders	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetNumMusicDecoders(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GetSoundFonts	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC const char* SDLCALL Mix_GetSoundFonts(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
Mix_GetSynchroValue	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetSynchroValue(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GroupAvailable	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupAvailable(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupChannel	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupChannel(int which, int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int which,int tag)
Mix_GroupChannels	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupChannels(int from, int to, int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int from,int to,int tag)
Mix_GroupCount	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupCount(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupNewer	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupNewer(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupOldest	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupOldest(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_HaltChannel	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltChannel(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_HaltGroup	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltGroup(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_HaltMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_HasChunkDecoder	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC SDL_bool SDLCALL Mix_HasChunkDecoder(const char *name);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name)
Mix_HasMusicDecoder	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC SDL_bool SDLCALL Mix_HasMusicDecoder(const char *name);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name)
Mix_HookMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_HookMusic(void (SDLCALL *mix_func)(void *udata, Uint8 *stream, /;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (SDLCALL * mix_func)(void * udata,Uint8 * stream,int len),void * arg)
Mix_HookMusicFinished	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_HookMusicFinished(void (SDLCALL *music_finished)(void));$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (SDLCALL * music_finished)(void))
Mix_Init	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Init(int flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int flags)
Mix_Linked_Version	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC const SDL_version * SDLCALL Mix_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
Mix_LoadMUS	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUS(const char *file);$/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(const char * file)
Mix_LoadMUSType_RW	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUSType_RW(SDL_RWops *src, Mix_MusicType type, int f/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(SDL_RWops * src,Mix_MusicType type,int freesrc)
Mix_LoadMUS_RW	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUS_RW(SDL_RWops *src, int freesrc);$/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(SDL_RWops * src,int freesrc)
Mix_LoadWAV	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_LoadWAV(/;"	d	signature:(file)
Mix_LoadWAV_RW	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_LoadWAV_RW(SDL_RWops *src, int freesrc);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(SDL_RWops * src,int freesrc)
Mix_Music	/usr/include/SDL2/SDL_mixer.h	/^typedef struct _Mix_Music Mix_Music;$/;"	t	typeref:struct:_Mix_Music
Mix_MusicType	/usr/include/SDL2/SDL_mixer.h	/^} Mix_MusicType;$/;"	t	typeref:enum:__anon5f08bdf10303
Mix_OpenAudio	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_OpenAudio(int frequency, Uint16 format, int channels, int chunks/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int frequency,Uint16 format,int channels,int chunksize)
Mix_OpenAudioDevice	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_OpenAudioDevice(int frequency, Uint16 format, int channels, int /;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int frequency,Uint16 format,int channels,int chunksize,const char * device,int allowed_changes)
Mix_Pause	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Pause(int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int channel)
Mix_PauseMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_PauseMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_Paused	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Paused(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_PausedMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PausedMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_PlayChannel	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_PlayChannel(/;"	d	signature:(channel,chunk,loops)
Mix_PlayChannelTimed	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayChannelTimed(int channel, Mix_Chunk *chunk, int loops, int t/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_Chunk * chunk,int loops,int ticks)
Mix_PlayMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayMusic(Mix_Music *music, int loops);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops)
Mix_Playing	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Playing(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_PlayingMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayingMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_QuerySpec	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_QuerySpec(int *frequency,Uint16 *format,int *channels);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int * frequency,Uint16 * format,int * channels)
Mix_QuickLoad_RAW	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_QuickLoad_RAW(Uint8 *mem, Uint32 len);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(Uint8 * mem,Uint32 len)
Mix_QuickLoad_WAV	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_QuickLoad_WAV(Uint8 *mem);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(Uint8 * mem)
Mix_Quit	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_RegisterEffect	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_RegisterEffect(int chan, Mix_EffectFunc_t f, Mix_EffectDone_t d,/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int chan,Mix_EffectFunc_t f,Mix_EffectDone_t d,void * arg)
Mix_ReserveChannels	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_ReserveChannels(int num);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int num)
Mix_Resume	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Resume(int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int channel)
Mix_ResumeMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_ResumeMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_RewindMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_RewindMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_SetDistance	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetDistance(int channel, Uint8 distance);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Uint8 distance)
Mix_SetError	/usr/include/SDL2/SDL_mixer.h	/^#define Mix_SetError /;"	d
Mix_SetMusicCMD	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetMusicCMD(const char *command);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * command)
Mix_SetMusicPosition	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetMusicPosition(double position);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(double position)
Mix_SetPanning	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetPanning(int channel, Uint8 left, Uint8 right);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Uint8 left,Uint8 right)
Mix_SetPosition	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetPosition(int channel, Sint16 angle, Uint8 distance);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Sint16 angle,Uint8 distance)
Mix_SetPostMix	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_SetPostMix(void (SDLCALL *mix_func)(void *udata, Uint8 *stream,/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (SDLCALL * mix_func)(void * udata,Uint8 * stream,int len),void * arg)
Mix_SetReverseStereo	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetReverseStereo(int channel, int flip);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int flip)
Mix_SetSoundFonts	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetSoundFonts(const char *paths);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * paths)
Mix_SetSynchroValue	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetSynchroValue(int value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int value)
Mix_UnregisterAllEffects	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_UnregisterAllEffects(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_UnregisterEffect	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_UnregisterEffect(int channel, Mix_EffectFunc_t f);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_EffectFunc_t f)
Mix_Volume	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Volume(int channel, int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int volume)
Mix_VolumeChunk	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_VolumeChunk(Mix_Chunk *chunk, int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Chunk * chunk,int volume)
Mix_VolumeMusic	/usr/include/SDL2/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_VolumeMusic(int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int volume)
NOMINMAX	/usr/include/SDL2/SDL_egl.h	/^#define NOMINMAX$/;"	d
NOMINMAX	/usr/include/SDL2/SDL_opengl.h	/^#define NOMINMAX$/;"	d
NOMINMAX	/usr/include/SDL2/SDL_opengl_glext.h	/^#define NOMINMAX$/;"	d
NOMINMAX	/usr/include/SDL2/SDL_syswm.h	/^#define NOMINMAX$/;"	d
NO_SDL_VULKAN_TYPEDEFS	/usr/include/SDL2/SDL_vulkan.h	/^#define NO_SDL_VULKAN_TYPEDEFS$/;"	d
NSWindow	/usr/include/SDL2/SDL_syswm.h	/^typedef struct _NSWindow NSWindow;$/;"	t	typeref:struct:_NSWindow
NTDDI_WIN10	/usr/include/SDL2/SDL_config_winrt.h	/^#define NTDDI_WIN10 /;"	d
NTDDI_WINBLUE	/usr/include/SDL2/SDL_config_winrt.h	/^#define NTDDI_WINBLUE /;"	d
NULL	/usr/include/SDL2/begin_code.h	/^#define NULL /;"	d
NativeDisplayType	/usr/include/SDL2/SDL_egl.h	/^typedef EGLNativeDisplayType NativeDisplayType;$/;"	t	typeref:typename:EGLNativeDisplayType
NativePixmapType	/usr/include/SDL2/SDL_egl.h	/^typedef EGLNativePixmapType  NativePixmapType;$/;"	t	typeref:typename:EGLNativePixmapType
NativeWindowType	/usr/include/SDL2/SDL_egl.h	/^typedef EGLNativeWindowType  NativeWindowType;$/;"	t	typeref:typename:EGLNativeWindowType
NeedFunctionPrototypes	/usr/include/SDL2/SDL_name.h	/^#define NeedFunctionPrototypes /;"	d
PFNEGLCLIENTWAITSYNCKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLi/;"	t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags,EGLTimeKHR timeout)
PFNEGLCLIENTWAITSYNCNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCNVPROC) (EGLSyncNV sync, EGLint flags, EGLTimeN/;"	t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLSyncNV sync,EGLint flags,EGLTimeNV timeout)
PFNEGLCREATEDRMIMAGEMESAPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEDRMIMAGEMESAPROC) (EGLDisplay dpy, const EGLint *a/;"	t	typeref:typename:EGLImageKHR (EGLAPIENTRYP)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATEFENCESYNCNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSyncNV (EGLAPIENTRYP PFNEGLCREATEFENCESYNCNVPROC) (EGLDisplay dpy, EGLenum condition,/;"	t	typeref:typename:EGLSyncNV (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum condition,const EGLint * attrib_list)
PFNEGLCREATEIMAGEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEIMAGEKHRPROC) (EGLDisplay dpy, EGLContext ctx, EGL/;"	t	typeref:typename:EGLImageKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLint * attrib_list)
PFNEGLCREATEPIXMAPSURFACEHIPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPIXMAPSURFACEHIPROC) (EGLDisplay dpy, EGLConfig con/;"	t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,struct EGLClientPixmapHI * pixmap)
PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC) (EGLDisplay dpy, EGLC/;"	t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLint * attrib_list)
PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC) (EGLDisplay dpy, EGLC/;"	t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLint * attrib_list)
PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC) (EGLDisplay dpy,/;"	t	typeref:typename:EGLStreamKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLNativeFileDescriptorKHR file_descriptor)
PFNEGLCREATESTREAMKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMKHRPROC) (EGLDisplay dpy, const EGLint *att/;"	t	typeref:typename:EGLStreamKHR (EGLAPIENTRYP)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC) (EGLDisplay dpy, EGLC/;"	t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,EGLStreamKHR stream,const EGLint * attrib_list)
PFNEGLCREATESTREAMSYNCNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESTREAMSYNCNVPROC) (EGLDisplay dpy, EGLStreamKHR str/;"	t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum type,const EGLint * attrib_list)
PFNEGLCREATESYNC64KHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESYNC64KHRPROC) (EGLDisplay dpy, EGLenum type, const/;"	t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum type,const EGLAttribKHR * attrib_list)
PFNEGLCREATESYNCKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESYNCKHRPROC) (EGLDisplay dpy, EGLenum type, const E/;"	t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum type,const EGLint * attrib_list)
PFNEGLDESTROYIMAGEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYIMAGEKHRPROC) (EGLDisplay dpy, EGLImageKHR image);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image)
PFNEGLDESTROYSTREAMKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR strea/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLDESTROYSYNCKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLDESTROYSYNCNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCNVPROC) (EGLSyncNV sync);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync)
PFNEGLDUPNATIVEFENCEFDANDROIDPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLDUPNATIVEFENCEFDANDROIDPROC) (EGLDisplay dpy, EGLSyncKHR sync/;"	t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLEXPORTDMABUFIMAGEMESAPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDMABUFIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR i/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,int * fds,EGLint * strides,EGLint * offsets)
PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC) (EGLDisplay dpy, EGLImage/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,int * fourcc,int * num_planes,EGLuint64KHR * modifiers)
PFNEGLEXPORTDRMIMAGEMESAPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDRMIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR imag/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,EGLint * name,EGLint * handle,EGLint * stride)
PFNEGLFENCENVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLFENCENVPROC) (EGLSyncNV sync);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync)
PFNEGLGETOUTPUTLAYERSEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETOUTPUTLAYERSEXTPROC) (EGLDisplay dpy, const EGLAttrib /;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputLayerEXT * layers,EGLint max_layers,EGLint * num_layers)
PFNEGLGETOUTPUTPORTSEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETOUTPUTPORTSEXTPROC) (EGLDisplay dpy, const EGLAttrib */;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputPortEXT * ports,EGLint max_ports,EGLint * num_ports)
PFNEGLGETPLATFORMDISPLAYEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLDisplay (EGLAPIENTRYP PFNEGLGETPLATFORMDISPLAYEXTPROC) (EGLenum platform, void *nativ/;"	t	typeref:typename:EGLDisplay (EGLAPIENTRYP)(EGLenum platform,void * native_display,const EGLint * attrib_list)
PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLNativeFileDescriptorKHR (EGLAPIENTRYP PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC) (EGLDispl/;"	t	typeref:typename:EGLNativeFileDescriptorKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLGETSYNCATTRIBKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, E/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint attribute,EGLint * value)
PFNEGLGETSYNCATTRIBNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBNVPROC) (EGLSyncNV sync, EGLint attribute, E/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync,EGLint attribute,EGLint * value)
PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC) (void);$/;"	t	typeref:typename:EGLuint64NV (EGLAPIENTRYP)(void)
PFNEGLGETSYSTEMTIMENVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMENVPROC) (void);$/;"	t	typeref:typename:EGLuint64NV (EGLAPIENTRYP)(void)
PFNEGLLOCKSURFACEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface, /;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,const EGLint * attrib_list)
PFNEGLOUTPUTLAYERATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputLayer/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib value)
PFNEGLOUTPUTPORTATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputPortEX/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib value)
PFNEGLPOSTSUBBUFFERNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLPOSTSUBBUFFERNVPROC) (EGLDisplay dpy, EGLSurface surface,/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint x,EGLint y,EGLint width,EGLint height)
PFNEGLQUERYDEVICEATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDEVICEATTRIBEXTPROC) (EGLDeviceEXT device, EGLint at/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDeviceEXT device,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDEVICESEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDEVICESEXTPROC) (EGLint max_devices, EGLDeviceEXT *d/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLint max_devices,EGLDeviceEXT * devices,EGLint * num_devices)
PFNEGLQUERYDEVICESTRINGEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYDEVICESTRINGEXTPROC) (EGLDeviceEXT device, EGLint n/;"	t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDeviceEXT device,EGLint name)
PFNEGLQUERYDISPLAYATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDISPLAYATTRIBEXTPROC) (EGLDisplay dpy, EGLint attrib/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYNATIVEDISPLAYNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEDISPLAYNVPROC) (EGLDisplay dpy, EGLNativeDispl/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLNativeDisplayType * display_id)
PFNEGLQUERYNATIVEPIXMAPNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEPIXMAPNVPROC) (EGLDisplay dpy, EGLSurface surf/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surf,EGLNativePixmapType * pixmap)
PFNEGLQUERYNATIVEWINDOWNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEWINDOWNVPROC) (EGLDisplay dpy, EGLSurface surf/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surf,EGLNativeWindowType * window)
PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutput/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC) (EGLDisplay dpy, EGLOutpu/;"	t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint name)
PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputP/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC) (EGLDisplay dpy, EGLOutput/;"	t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint name)
PFNEGLQUERYSTREAMKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream,/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint * value)
PFNEGLQUERYSTREAMTIMEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMTIMEKHRPROC) (EGLDisplay dpy, EGLStreamKHR str/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLTimeKHR * value)
PFNEGLQUERYSTREAMU64KHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMU64KHRPROC) (EGLDisplay dpy, EGLStreamKHR stre/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLuint64KHR * value)
PFNEGLQUERYSURFACE64KHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSURFACE64KHRPROC) (EGLDisplay dpy, EGLSurface surfac/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLAttribKHR * value)
PFNEGLQUERYSURFACEPOINTERANGLEPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSURFACEPOINTERANGLEPROC) (EGLDisplay dpy, EGLSurface/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,void ** value)
PFNEGLSETBLOBCACHEFUNCSANDROIDPROC	/usr/include/SDL2/SDL_egl.h	/^typedef void (EGLAPIENTRYP PFNEGLSETBLOBCACHEFUNCSANDROIDPROC) (EGLDisplay dpy, EGLSetBlobFuncAN/;"	t	typeref:typename:void (EGLAPIENTRYP)(EGLDisplay dpy,EGLSetBlobFuncANDROID set,EGLGetBlobFuncANDROID get)
PFNEGLSETDAMAGEREGIONKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSETDAMAGEREGIONKHRPROC) (EGLDisplay dpy, EGLSurface surfa/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLSIGNALSYNCKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLe/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLenum mode)
PFNEGLSIGNALSYNCNVPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCNVPROC) (EGLSyncNV sync, EGLenum mode);$/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync,EGLenum mode)
PFNEGLSTREAMATTRIBKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint value)
PFNEGLSTREAMCONSUMERACQUIREKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERACQUIREKHRPROC) (EGLDisplay dpy, EGLStreamK/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC) (EGLDisplay dpy, /;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMEROUTPUTEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMEROUTPUTEXTPROC) (EGLDisplay dpy, EGLStreamKH/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLOutputLayerEXT layer)
PFNEGLSTREAMCONSUMERRELEASEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERRELEASEKHRPROC) (EGLDisplay dpy, EGLStreamK/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSWAPBUFFERSREGION2NOKPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSREGION2NOKPROC) (EGLDisplay dpy, EGLSurface su/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSREGIONNOKPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSREGIONNOKPROC) (EGLDisplay dpy, EGLSurface sur/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC) (EGLDisplay dpy, EGLSurface/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC) (EGLDisplay dpy, EGLSurface/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLUNLOCKSURFACEKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLUNLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface/;"	t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface)
PFNEGLWAITSYNCKHRPROC	/usr/include/SDL2/SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint fla/;"	t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags)
PFNGLACCUMXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLfixed value)
PFNGLACTIVEPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLALPHAFRAGMENTOP1ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCQCOMPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum func,GLclampf ref)
PFNGLALPHAFUNCXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLfixed ref)
PFNGLAPPLYTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINQUERYEXTPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline)
PFNGLBINDPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMAL3BEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLBITMAPXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
PFNGLBLENDBARRIERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLOREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLBLENDEQUATIONEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEATIPROC) (GLenum modeRGB, GLenum modeA);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeA)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFERANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERNVPROC) (GLint srcX0, GLint srcY0, GLint srcX1, G/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPARAMETERIAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERSTORAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARBUFFERDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alp/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARDEPTHDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXIMAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuin/;"	t	typeref:typename:GLenum (GL_APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIENTWAITSYNCPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPPLANEFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue)
PFNGLCOLOR3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLOR4XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLORFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **poin/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLEPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLCONVOLUTIONPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLCOPYBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint sr/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURELEVELSAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint s/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERAGEMASKNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEMASKNVPROC) (GLboolean mask);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLboolean mask)
PFNGLCOVERAGEOPERATIONNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEOPERATIONNVPROC) (GLenum operation);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum operation)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEPERFQUERYINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADEROBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, cons/;"	t	typeref:typename:GLuint (GL_APIENTRYP)(GLenum type,GLsizei count,const GLchar ** strings)
PFNGLCREATESHADERPROGRAMVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCULLPARAMETERDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECALLBACKKHRPROC) (GLDEBUGPROCKHR callback, const voi/;"	t	typeref:typename:void (GL_APIENTRYP)(GLDEBUGPROCKHR callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECONTROLKHRPROC) (GLenum source, GLenum type, GLenum /;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGEINSERTKHRPROC) (GLenum source, GLenum type, GLuint i/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMATIONMAP3DSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *n/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) (GLsizei n, const GLuint *pipelin/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPIPELINESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEQUERIESEXTPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsync sync)
PFNGLDELETESYNCPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed n,GLfixed f)
PFNGLDETACHOBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEDRIVERCONTROLQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl)
PFNGLDISABLEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISCARDFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDNVPROC) (GLenum mode, GLint first, GLsizei co/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSEXTPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSINDEXEDEXTPROC) (GLint n, const GLenum *location, con/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint n,const GLenum * location,const GLint * indices)
PFNGLDRAWBUFFERSNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSNVPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLe/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDNVPROC) (GLenum mode, GLsizei count, GLenum/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWMESHARRAYSSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWRANGEELEMENTSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLEDGEFLAGFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointe/;"	t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImag/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglI/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES im/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLELEMENTPOINTERAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEDRIVERCONTROLQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl)
PFNGLENABLEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDQUERYEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTILINGQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLbitfield preserveMask)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLEVALCOORD1XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u)
PFNGLEVALCOORD1XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALCOORD2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u,GLfixed v)
PFNGLEVALCOORD2XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALMAPSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, GLvoid **params);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLvoid ** params)
PFNGLEXTGETBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) (GLuint *buffers, GLint maxBuffers, GLint/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * buffers,GLint maxBuffers,GLint * numBuffers)
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint *framebuffers, GLint maxFram/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * framebuffers,GLint maxFramebuffers,GLint * numFramebuffers)
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shade/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum shadertype,GLchar * source,GLint * length)
PFNGLEXTGETPROGRAMSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint *programs, GLint maxPrograms, GL/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * programs,GLint maxPrograms,GLint * numPrograms)
PFNGLEXTGETRENDERBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint *renderbuffers, GLint maxRe/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * renderbuffers,GLint maxRenderbuffers,GLint * numRenderbuffers)
PFNGLEXTGETSHADERSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) (GLuint *shaders, GLint maxShaders, GLint/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * shaders,GLint maxShaders,GLint * numShaders)
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum face,GLint level,GLenum pname,GLint * params)
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xo/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLvoid * texels)
PFNGLEXTGETTEXTURESQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) (GLuint *textures, GLint maxTextures, GL/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint * textures,GLint maxTextures,GLint * numTextures)
PFNGLEXTISPROGRAMBINARYQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint program)
PFNGLEXTRACTCOMPONENTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFEEDBACKBUFFERXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buf/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLenum type,const GLfixed * buffer)
PFNGLFENCESYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLsync (GL_APIENTRYP PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (GL_APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFENCESYNCPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, /;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHSTATICDATAIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *poin/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFOGXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLFOGXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum a/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum a/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DOESPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEZOOMSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLGENASYNCMARKERSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENFENCESAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMPIPELINESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENQUERIESEXTPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSYMBOLSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, GLvoid */;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERPOINTERVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfixed * equation)
PFNGLGETCOLORTABLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *im/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCONVOLUTIONFILTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETDEBUGMESSAGELOGAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLGETDEBUGMESSAGELOGKHRPROC) (GLuint count, GLsizei bufsize, GLe/;"	t	typeref:typename:GLuint (GL_APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDRIVERCONTROLSQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint *num, GLsizei size, GLuint *dr/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint * num,GLsizei size,GLuint * driverControls)
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei b/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl,GLsizei bufSize,GLsizei * length,GLchar * driverControlString)
PFNGLGETFENCEIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFENCEIVNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFIXEDVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETGRAPHICSRESETSTATUSEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) (void);$/;"	t	typeref:typename:GLenum (GL_APIENTRYP)(void)
PFNGLGETHANDLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum pname,GLint64 * params)
PFNGLGETINTEGER64VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGERI_VEXTPROC) (GLenum target, GLuint index, GLint *data)/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLISTPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMAPXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLfixed * v)
PFNGLGETMATERIALXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLGETMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *val/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufS/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei /;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei bufSize, GLs/;"	t	typeref:typename:void (GL_APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *va/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLuint counter,GLenum pname,GLvoid * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counte/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSi/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELMAPXVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,GLfixed * values)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPOINTERVKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPOINTERVKHRPROC) (GLenum pname, GLvoid **params);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum pname,GLvoid ** params)
PFNGLGETPROGRAMBINARYOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
PFNGLGETPROGRAMBINARYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMINFOLOGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) (GLuint pipeline, GLsizei bufS/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEIVEXTPROC) (GLuint pipeline, GLenum pname, GLi/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMPIPELINEIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * param)
PFNGLGETQUERYINDEXEDIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *pa/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTIVEXTPROC) (GLuint id, GLenum pname, GLint *params/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 */;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint *para/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETSTRINGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETSYNCIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXLEVELPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTRACKMATRIXIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufs/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
PFNGLGETUNIFORMBLOCKINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGLOBALALPHAFACTORBSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const void * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTSYNCEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINDEXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed component)
PFNGLINDEXXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * component)
PFNGLINSERTCOMPONENTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSERTEVENTMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker)/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSTRUMENTSBUFFERSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLINTERPOLATEPATHSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISENABLEDINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISNAMEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISQUERYEXTPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISSYNCAPPLEPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLsync sync)
PFNGLISSYNCPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLABELOBJECTEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLIGHTENVISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLIGHTMODELXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLLIGHTXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTPARAMETERFSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADMATRIXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOCKARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAP1XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
PFNGLMAP2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
PFNGLMAPBUFFERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFEROESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GL_APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizei/;"	t	typeref:typename:void * (GL_APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPGRID1XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2)
PFNGLMAPGRID2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
PFNGLMAPNAMEDBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield ac/;"	t	typeref:typename:void * (APIENTRYP)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfixed * param)
PFNGLMATRIXFRUSTUMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXINDEXPOINTERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMATRIXLOADDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMEMORYBARRIEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const /;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirec/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GL/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s)
PFNGLMULTITEXCOORD1BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD1DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s)
PFNGLMULTITEXCOORD1XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD2BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t)
PFNGLMULTITEXCOORD2BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t)
PFNGLMULTITEXCOORD2XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD3BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
PFNGLMULTITEXCOORD3BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
PFNGLMULTITEXCOORD3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD4BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLMULTITEXCOORD4BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD4DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORD4XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORDP1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLNAMEDBUFFERDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenu/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMAL3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMAL3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLNORMALFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei len/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTLABELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei length, const G/;"	t	typeref:typename:void (GL_APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLen/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLPASSTEXCOORDATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPASSTHROUGHXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed token)
PFNGLPATCHPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorForm/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum genMode)
PFNGLPATHGLYPHRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint compon/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELDATARANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLPIXELMAPXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,const GLfixed * values)
PFNGLPIXELSTOREXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFERXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELZOOMXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed xfactor,GLfixed yfactor)
PFNGLPNTRIANGLESFATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPDEBUGGROUPKHRPROC) (void);$/;"	t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLPOPDEBUGGROUPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresent/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVERESTARTINDEXNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZETEXTURESXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, con/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLfixed * priorities)
PFNGLPROGRAMBINARYOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, cons/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLint length)
PFNGLPROGRAMBINARYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingInde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingInd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERIARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint v/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
PFNGLPROGRAMSTRINGARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei count,const GLuint * params)
PFNGLPROGRAMUNIFORM1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x)
PFNGLPROGRAMUNIFORM1FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x)
PFNGLPROGRAMUNIFORM1IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y)
PFNGLPROGRAMUNIFORM2FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y)
PFNGLPROGRAMUNIFORM2IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
PFNGLPROGRAMUNIFORM3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y,GLint z)
PFNGLPROGRAMUNIFORM3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMUNIFORM4FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMUNIFORM4IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPKHRPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHDEBUGGROUPKHRPROC) (GLenum source, GLuint id, GLsizei length/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHDEBUGGROUPPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLPUSHGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTEREXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLQUERYCOUNTEREXTPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYCOUNTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYMATRIXXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t	typeref:typename:GLbitfield (APIENTRYP)(GLfixed * mantissa,GLint * exponent)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLRASTERPOS2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLRASTERPOS2XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLRASTERPOS3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS4XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
PFNGLRASTERPOS4XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLREADBUFFERINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERINDEXEDEXTPROC) (GLenum src, GLint index);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum src,GLint index)
PFNGLREADBUFFERNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERNVPROC) (GLenum mode);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum mode)
PFNGLREADINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREADNPIXELSARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei he/;"	t	typeref:typename:void (GL_APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
PFNGLRECTXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
PFNGLRECTXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * v1,const GLfixed * v2)
PFNGLREFERENCEPLANESGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRELEASESHADERCOMPILERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei s/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei s/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC) ( GLenum target, GLsizei s/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLROTATEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean ena/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * countersList)
PFNGLSEPARABLEFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFENCENVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTARTTILINGQCOMPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint h/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask)
PFNGLSTENCILCLEARTAGEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClea/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stencilTagBits,GLuint stencilClearTag)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTOPINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei len,const void * string)
PFNGLSWIZZLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLTBUFFERMASK3DFXPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s)
PFNGLTEXCOORD1BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD1HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD1XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s)
PFNGLTEXCOORD1XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD2BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t)
PFNGLTEXCOORD2BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t)
PFNGLTEXCOORD2XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD3BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r)
PFNGLTEXCOORD3BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r)
PFNGLTEXCOORD3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD4BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLTEXCOORD4BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLTEXCOORD4XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORDFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalf/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLTEXSTORAGE1DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGESPARSEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURECOLORMASKSGISPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXTUREPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTURERANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGESPARSEAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs/;"	t	typeref:typename:void (APIENTRYP)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFEROESPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GL_APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUSEPROGRAMSTAGESEXTPROC) (GLuint pipeline, GLbitfield stages, GL/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const void * addr)
PFNGLVARIANTSVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVDPAUFININVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress/;"	t	typeref:typename:void (APIENTRYP)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceN/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurfa/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurfac/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access)/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurface/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x)
PFNGLVERTEX2BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX2HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX2XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x)
PFNGLVERTEX2XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX3BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y)
PFNGLVERTEX3BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLVERTEX3XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX4BOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z)
PFNGLVERTEX4BVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX4HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4XOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLVERTEX4XVOESPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORANGLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORNVPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORNVPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GL_APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **poi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLWAITSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:void (GL_APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITSYNCPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWEIGHTBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPATHSNVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWEIGHTPOINTERARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLWEIGHTSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWRITEMASKEXTPROC	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
RW_SEEK_CUR	/usr/include/SDL2/SDL_rwops.h	/^#define RW_SEEK_CUR /;"	d
RW_SEEK_END	/usr/include/SDL2/SDL_rwops.h	/^#define RW_SEEK_END /;"	d
RW_SEEK_SET	/usr/include/SDL2/SDL_rwops.h	/^#define RW_SEEK_SET /;"	d
Rloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Rmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Rshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL2_FRAMERATE_SCOPE	/usr/include/SDL2/SDL2_framerate.h	/^#      define SDL2_FRAMERATE_SCOPE /;"	d
SDL2_FRAMERATE_SCOPE	/usr/include/SDL2/SDL2_framerate.h	/^#    define SDL2_FRAMERATE_SCOPE /;"	d
SDL2_FRAMERATE_SCOPE	/usr/include/SDL2/SDL2_framerate.h	/^#  define SDL2_FRAMERATE_SCOPE /;"	d
SDL2_GFXPRIMITIVES_MAJOR	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#define SDL2_GFXPRIMITIVES_MAJOR	/;"	d
SDL2_GFXPRIMITIVES_MICRO	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#define SDL2_GFXPRIMITIVES_MICRO	/;"	d
SDL2_GFXPRIMITIVES_MINOR	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#define SDL2_GFXPRIMITIVES_MINOR	/;"	d
SDL2_GFXPRIMITIVES_SCOPE	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#    define SDL2_GFXPRIMITIVES_SCOPE /;"	d
SDL2_GFXPRIMITIVES_SCOPE	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#  define SDL2_GFXPRIMITIVES_SCOPE /;"	d
SDL2_IMAGEFILTER_SCOPE	/usr/include/SDL2/SDL2_imageFilter.h	/^#    define SDL2_IMAGEFILTER_SCOPE /;"	d
SDL2_IMAGEFILTER_SCOPE	/usr/include/SDL2/SDL2_imageFilter.h	/^#  define SDL2_IMAGEFILTER_SCOPE /;"	d
SDL2_ROTOZOOM_SCOPE	/usr/include/SDL2/SDL2_rotozoom.h	/^#    define SDL2_ROTOZOOM_SCOPE /;"	d
SDL2_ROTOZOOM_SCOPE	/usr/include/SDL2/SDL2_rotozoom.h	/^#  define SDL2_ROTOZOOM_SCOPE /;"	d
SDLCALL	/usr/include/SDL2/SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDLCALL	/usr/include/SDL2/begin_code.h	/^#define SDLCALL /;"	d
SDLCALL	/usr/include/SDL2/begin_code.h	/^#define SDLCALL$/;"	d
SDLK_0	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_0 = '0',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_1 = '1',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_2 = '2',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_3 = '3',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_4 = '4',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_5 = '5',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_6 = '6',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_7 = '7',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_8 = '8',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_9 = '9',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_BACK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_BOOKMARKS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_FORWARD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_HOME	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_REFRESH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_SEARCH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AC_STOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AGAIN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_ALTERASE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AMPERSAND = '&',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_APP1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_APP2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_APPLICATION	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_ASTERISK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ASTERISK = '*',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AT = '@',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOFASTFORWARD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD)$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOMUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIONEXT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOPLAY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOPREV	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOREWIND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_AUDIOSTOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_BACKQUOTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKQUOTE = '`',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_BACKSLASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKSLASH = '\\\\',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_BACKSPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKSPACE = '\\b',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_BRIGHTNESSDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BRIGHTNESSDOWN =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_BRIGHTNESSUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CALCULATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CANCEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CAPSLOCK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CARET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CARET = '^',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CLEARAGAIN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_COLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COLON = ':',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_COMMA	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COMMA = ',',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_COMPUTER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_COPY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CRSEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CURRENCYSUBUNIT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CURRENCYSUBUNIT =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CURRENCYUNIT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_CUT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_DECIMALSEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DECIMALSEPARATOR =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_DELETE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DELETE = '\\177',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_DISPLAYSWITCH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_DOLLAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DOLLAR = '$',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_DOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_EJECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_END	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_EQUALS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EQUALS = '=',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_ESCAPE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ESCAPE = '\\033',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_EXCLAIM	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXCLAIM = '!',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_EXECUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_EXSEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F10	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F11	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F12	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F13	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F14	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F15	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F16	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F17	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F18	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F19	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F20	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F21	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F22	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F23	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F24	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_F9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_FIND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_GREATER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_GREATER = '>',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_HASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HASH = '#',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_HELP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_HOME	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_INSERT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KBDILLUMDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KBDILLUMTOGGLE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMTOGGLE =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KBDILLUMUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_0	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_00	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_000	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_A	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_AMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_AT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_B	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_BACKSPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_BINARY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_C	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_CLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_CLEARENTRY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_COLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_COMMA	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_D	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_DBLAMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DBLAMPERSAND =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_DBLVERTICALBAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DBLVERTICALBAR =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_DECIMAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_DIVIDE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_E	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_ENTER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_EQUALS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_EQUALSAS400	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EQUALSAS400 =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_EXCLAM	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_F	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_GREATER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_HASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_HEXADECIMAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_HEXADECIMAL =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_LEFTBRACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_LEFTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_LESS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMADD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMCLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMDIVIDE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMMULTIPLY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMMULTIPLY =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMRECALL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMSTORE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MEMSUBTRACT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMSUBTRACT =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_MULTIPLY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_OCTAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_PERCENT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_PERIOD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_PLUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_PLUSMINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_POWER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_RIGHTBRACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_RIGHTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_SPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_TAB	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_VERTICALBAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_VERTICALBAR =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_KP_XOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LALT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LCTRL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LEFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LEFTBRACKET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFTBRACKET = '[',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LEFTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFTPAREN = '(',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LESS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LESS = '<',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LGUI	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_LSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MAIL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MEDIASELECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MENU	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MINUS = '-',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MODE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_MUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_NUMLOCKCLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_OPER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_OUT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PAGEDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PAGEUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PASTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PAUSE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PERCENT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PERCENT = '%',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PERIOD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PERIOD = '.',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PLUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PLUS = '+',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_POWER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PRINTSCREEN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_PRIOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_QUESTION	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUESTION = '?',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_QUOTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUOTE = '\\'',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_QUOTEDBL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUOTEDBL = '"',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RALT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RCTRL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RETURN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RETURN = '\\r',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RETURN2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RGUI	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RIGHT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RIGHTBRACKET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHTBRACKET = ']',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RIGHTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHTPAREN = ')',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_RSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SCANCODE_MASK	/usr/include/SDL2/SDL_keycode.h	/^#define SDLK_SCANCODE_MASK /;"	d
SDLK_SCROLLLOCK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SELECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SEMICOLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SEMICOLON = ';',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SLASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SLASH = '\/',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SLEEP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SPACE = ' ',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_STOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_SYSREQ	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_TAB	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_TAB = '\\t',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_THOUSANDSSEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_THOUSANDSSEPARATOR =$/;"	e	enum:__anonf26700b00103	access:public
SDLK_UNDERSCORE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNDERSCORE = '_',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_UNDO	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_UNKNOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNKNOWN = 0,$/;"	e	enum:__anonf26700b00103	access:public
SDLK_UP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_VOLUMEDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_VOLUMEUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_WWW	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),$/;"	e	enum:__anonf26700b00103	access:public
SDLK_a	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_a = 'a',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_b	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_b = 'b',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_c	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_c = 'c',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_d	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_d = 'd',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_e	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_e = 'e',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_f	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_f = 'f',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_g	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_g = 'g',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_h	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_h = 'h',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_i	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_i = 'i',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_j	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_j = 'j',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_k	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_k = 'k',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_l	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_l = 'l',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_m	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_m = 'm',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_n	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_n = 'n',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_o	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_o = 'o',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_p	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_p = 'p',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_q	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_q = 'q',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_r	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_r = 'r',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_s	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_s = 's',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_t	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_t = 't',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_u	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_u = 'u',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_v	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_v = 'v',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_w	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_w = 'w',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_x	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_x = 'x',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_y	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_y = 'y',$/;"	e	enum:__anonf26700b00103	access:public
SDLK_z	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_z = 'z',$/;"	e	enum:__anonf26700b00103	access:public
SDLMAIN_DECLSPEC	/usr/include/SDL2/SDL_main.h	/^#define SDLMAIN_DECLSPEC /;"	d
SDLMAIN_DECLSPEC	/usr/include/SDL2/SDL_main.h	/^#define SDLMAIN_DECLSPEC$/;"	d
SDLNET_MAX_UDPADDRESSES	/usr/include/SDL2/SDL_net.h	/^#define SDLNET_MAX_UDPADDRESSES /;"	d
SDLNET_MAX_UDPCHANNELS	/usr/include/SDL2/SDL_net.h	/^#define SDLNET_MAX_UDPCHANNELS /;"	d
SDLNet_AddSocket	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_AddSocket(SDLNet_SocketSet set, SDLNet_GenericSocket sock);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,SDLNet_GenericSocket sock)
SDLNet_AllocPacket	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC UDPpacket * SDLCALL SDLNet_AllocPacket(int size);$/;"	p	typeref:typename:DECLSPEC UDPpacket * SDLCALL	signature:(int size)
SDLNet_AllocPacketV	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC UDPpacket ** SDLCALL SDLNet_AllocPacketV(int howmany, int size);$/;"	p	typeref:typename:DECLSPEC UDPpacket ** SDLCALL	signature:(int howmany,int size)
SDLNet_AllocSocketSet	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC SDLNet_SocketSet SDLCALL SDLNet_AllocSocketSet(int maxsockets);$/;"	p	typeref:typename:DECLSPEC SDLNet_SocketSet SDLCALL	signature:(int maxsockets)
SDLNet_CheckSockets	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_CheckSockets(SDLNet_SocketSet set, Uint32 timeout);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,Uint32 timeout)
SDLNet_DelSocket	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_DelSocket(SDLNet_SocketSet set, SDLNet_GenericSocket sock);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,SDLNet_GenericSocket sock)
SDLNet_FreePacket	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreePacket(UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPpacket * packet)
SDLNet_FreePacketV	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreePacketV(UDPpacket **packetV);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPpacket ** packetV)
SDLNet_FreeSocketSet	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreeSocketSet(SDLNet_SocketSet set);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDLNet_SocketSet set)
SDLNet_GenericSocket	/usr/include/SDL2/SDL_net.h	/^} *SDLNet_GenericSocket;$/;"	t	typeref:struct:_SDLNet_GenericSocket *
SDLNet_GetError	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC const char * SDLCALL SDLNet_GetError(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDLNet_GetLocalAddresses	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_GetLocalAddresses(IPaddress *addresses, int maxcount);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(IPaddress * addresses,int maxcount)
SDLNet_Init	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int  SDLCALL SDLNet_Init(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDLNet_Linked_Version	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC const SDLNet_version * SDLCALL SDLNet_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDLNet_version * SDLCALL	signature:(void)
SDLNet_Quit	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDLNet_Read16	/usr/include/SDL2/SDL_net.h	/^#define SDLNet_Read16(/;"	d	signature:(areap)
SDLNet_Read32	/usr/include/SDL2/SDL_net.h	/^#define SDLNet_Read32(/;"	d	signature:(areap)
SDLNet_ResizePacket	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_ResizePacket(UDPpacket *packet, int newsize);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPpacket * packet,int newsize)
SDLNet_ResolveHost	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_ResolveHost(IPaddress *address, const char *host, Uint16 port/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(IPaddress * address,const char * host,Uint16 port)
SDLNet_ResolveIP	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC const char * SDLCALL SDLNet_ResolveIP(const IPaddress *ip);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(const IPaddress * ip)
SDLNet_SetError	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_SetError(const char *fmt, ...);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * fmt,...)
SDLNet_SocketReady	/usr/include/SDL2/SDL_net.h	/^#define SDLNet_SocketReady(/;"	d	signature:(sock)
SDLNet_SocketSet	/usr/include/SDL2/SDL_net.h	/^typedef struct _SDLNet_SocketSet *SDLNet_SocketSet;$/;"	t	typeref:struct:_SDLNet_SocketSet *
SDLNet_TCP_Accept	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC TCPsocket SDLCALL SDLNet_TCP_Accept(TCPsocket server);$/;"	p	typeref:typename:DECLSPEC TCPsocket SDLCALL	signature:(TCPsocket server)
SDLNet_TCP_AddSocket	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE int SDLNet_TCP_AddSocket(SDLNet_SocketSet set, TCPsocket sock)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(SDLNet_SocketSet set,TCPsocket sock)
SDLNet_TCP_Close	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_TCP_Close(TCPsocket sock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TCPsocket sock)
SDLNet_TCP_DelSocket	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE int SDLNet_TCP_DelSocket(SDLNet_SocketSet set, TCPsocket sock)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(SDLNet_SocketSet set,TCPsocket sock)
SDLNet_TCP_GetPeerAddress	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC IPaddress * SDLCALL SDLNet_TCP_GetPeerAddress(TCPsocket sock);$/;"	p	typeref:typename:DECLSPEC IPaddress * SDLCALL	signature:(TCPsocket sock)
SDLNet_TCP_Open	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC TCPsocket SDLCALL SDLNet_TCP_Open(IPaddress *ip);$/;"	p	typeref:typename:DECLSPEC TCPsocket SDLCALL	signature:(IPaddress * ip)
SDLNet_TCP_Recv	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_TCP_Recv(TCPsocket sock, void *data, int maxlen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TCPsocket sock,void * data,int maxlen)
SDLNet_TCP_Send	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_TCP_Send(TCPsocket sock, const void *data,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TCPsocket sock,const void * data,int len)
SDLNet_UDP_AddSocket	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE int SDLNet_UDP_AddSocket(SDLNet_SocketSet set, UDPsocket sock)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(SDLNet_SocketSet set,UDPsocket sock)
SDLNet_UDP_Bind	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Bind(UDPsocket sock, int channel, const IPaddress *addres/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,int channel,const IPaddress * address)
SDLNet_UDP_Close	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_Close(UDPsocket sock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock)
SDLNet_UDP_DelSocket	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE int SDLNet_UDP_DelSocket(SDLNet_SocketSet set, UDPsocket sock)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(SDLNet_SocketSet set,UDPsocket sock)
SDLNet_UDP_GetPeerAddress	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC IPaddress * SDLCALL SDLNet_UDP_GetPeerAddress(UDPsocket sock, int channel);$/;"	p	typeref:typename:DECLSPEC IPaddress * SDLCALL	signature:(UDPsocket sock,int channel)
SDLNet_UDP_Open	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC UDPsocket SDLCALL SDLNet_UDP_Open(Uint16 port);$/;"	p	typeref:typename:DECLSPEC UDPsocket SDLCALL	signature:(Uint16 port)
SDLNet_UDP_Recv	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Recv(UDPsocket sock, UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket * packet)
SDLNet_UDP_RecvV	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_RecvV(UDPsocket sock, UDPpacket **packets);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket ** packets)
SDLNet_UDP_Send	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Send(UDPsocket sock, int channel, UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,int channel,UDPpacket * packet)
SDLNet_UDP_SendV	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_SendV(UDPsocket sock, UDPpacket **packets, int npackets);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket ** packets,int npackets)
SDLNet_UDP_SetPacketLoss	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_SetPacketLoss(UDPsocket sock, int percent);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock,int percent)
SDLNet_UDP_Unbind	/usr/include/SDL2/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_Unbind(UDPsocket sock, int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock,int channel)
SDLNet_Write16	/usr/include/SDL2/SDL_net.h	/^#define SDLNet_Write16(/;"	d	signature:(value,areap)
SDLNet_Write32	/usr/include/SDL2/SDL_net.h	/^#define SDLNet_Write32(/;"	d	signature:(value,areap)
SDLNet_version	/usr/include/SDL2/SDL_net.h	/^typedef SDL_version SDLNet_version;$/;"	t	typeref:typename:SDL_version
SDLNet_version	/usr/include/SDL2/SDL_net.h	/^typedef struct SDLNet_version {$/;"	s
SDLNet_version	/usr/include/SDL2/SDL_net.h	/^} SDLNet_version;$/;"	t	typeref:struct:SDLNet_version
SDLNet_version::major	/usr/include/SDL2/SDL_net.h	/^    Uint8 major;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
SDLNet_version::minor	/usr/include/SDL2/SDL_net.h	/^    Uint8 minor;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
SDLNet_version::patch	/usr/include/SDL2/SDL_net.h	/^    Uint8 patch;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
SDLTEST_MAX_LOGMESSAGE_LENGTH	/usr/include/SDL2/SDL_test.h	/^#define SDLTEST_MAX_LOGMESSAGE_LENGTH /;"	d
SDLTest_Assert	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_Assert(int assertCondition, SDL_PRINTF_FORMAT_STRING const char *assertDescription,/;"	p	typeref:typename:void	signature:(int assertCondition,SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertCheck	/usr/include/SDL2/SDL_test_assert.h	/^int SDLTest_AssertCheck(int assertCondition, SDL_PRINTF_FORMAT_STRING const char *assertDescript/;"	p	typeref:typename:int	signature:(int assertCondition,SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertPass	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_AssertPass(SDL_PRINTF_FORMAT_STRING const char *assertDescription, ...) SDL_PRINTF_/;"	p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertSummaryToTestResult	/usr/include/SDL2/SDL_test_assert.h	/^int SDLTest_AssertSummaryToTestResult(void);$/;"	p	typeref:typename:int	signature:(void)
SDLTest_CleanupTextDrawing	/usr/include/SDL2/SDL_test_font.h	/^void SDLTest_CleanupTextDrawing(void);$/;"	p	typeref:typename:void	signature:(void)
SDLTest_CommonArg	/usr/include/SDL2/SDL_test_common.h	/^int SDLTest_CommonArg(SDLTest_CommonState * state, int index);$/;"	p	typeref:typename:int	signature:(SDLTest_CommonState * state,int index)
SDLTest_CommonCreateState	/usr/include/SDL2/SDL_test_common.h	/^SDLTest_CommonState *SDLTest_CommonCreateState(char **argv, Uint32 flags);$/;"	p	typeref:typename:SDLTest_CommonState *	signature:(char ** argv,Uint32 flags)
SDLTest_CommonDefaultArgs	/usr/include/SDL2/SDL_test_common.h	/^SDL_bool SDLTest_CommonDefaultArgs(SDLTest_CommonState * state, const int argc, char **argv);$/;"	p	typeref:typename:SDL_bool	signature:(SDLTest_CommonState * state,const int argc,char ** argv)
SDLTest_CommonEvent	/usr/include/SDL2/SDL_test_common.h	/^void SDLTest_CommonEvent(SDLTest_CommonState * state, SDL_Event * event, int *done);$/;"	p	typeref:typename:void	signature:(SDLTest_CommonState * state,SDL_Event * event,int * done)
SDLTest_CommonInit	/usr/include/SDL2/SDL_test_common.h	/^SDL_bool SDLTest_CommonInit(SDLTest_CommonState * state);$/;"	p	typeref:typename:SDL_bool	signature:(SDLTest_CommonState * state)
SDLTest_CommonLogUsage	/usr/include/SDL2/SDL_test_common.h	/^void SDLTest_CommonLogUsage(SDLTest_CommonState * state, const char *argv0, const char **options/;"	p	typeref:typename:void	signature:(SDLTest_CommonState * state,const char * argv0,const char ** options)
SDLTest_CommonQuit	/usr/include/SDL2/SDL_test_common.h	/^void SDLTest_CommonQuit(SDLTest_CommonState * state);$/;"	p	typeref:typename:void	signature:(SDLTest_CommonState * state)
SDLTest_CommonState	/usr/include/SDL2/SDL_test_common.h	/^} SDLTest_CommonState;$/;"	t	typeref:struct:__anon2a823ef40108
SDLTest_CommonUsage	/usr/include/SDL2/SDL_test_common.h	/^const char *SDLTest_CommonUsage(SDLTest_CommonState * state);$/;"	p	typeref:typename:const char *	signature:(SDLTest_CommonState * state)
SDLTest_CompareSurfaces	/usr/include/SDL2/SDL_test_compare.h	/^int SDLTest_CompareSurfaces(SDL_Surface *surface, SDL_Surface *referenceSurface, int allowable_e/;"	p	typeref:typename:int	signature:(SDL_Surface * surface,SDL_Surface * referenceSurface,int allowable_error)
SDLTest_Crc32Calc	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUi/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint8 * inBuf,CrcUint32 inLen,CrcUint32 * crc32)
SDLTest_Crc32CalcBuffer	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcBuffer(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen,/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint8 * inBuf,CrcUint32 inLen,CrcUint32 * crc32)
SDLTest_Crc32CalcEnd	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcEnd(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint32 * crc32)
SDLTest_Crc32CalcStart	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcStart(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint32 * crc32)
SDLTest_Crc32Context	/usr/include/SDL2/SDL_test_crc32.h	/^  } SDLTest_Crc32Context;$/;"	t	typeref:struct:__anon9ad848680108
SDLTest_Crc32Done	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32Done(SDLTest_Crc32Context * crcContext);$/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_Crc32Init	/usr/include/SDL2/SDL_test_crc32.h	/^ int SDLTest_Crc32Init(SDLTest_Crc32Context * crcContext);$/;"	p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_DrawCharacter	/usr/include/SDL2/SDL_test_font.h	/^int SDLTest_DrawCharacter(SDL_Renderer *renderer, int x, int y, char c);$/;"	p	typeref:typename:int	signature:(SDL_Renderer * renderer,int x,int y,char c)
SDLTest_DrawString	/usr/include/SDL2/SDL_test_font.h	/^int SDLTest_DrawString(SDL_Renderer *renderer, int x, int y, const char *s);$/;"	p	typeref:typename:int	signature:(SDL_Renderer * renderer,int x,int y,const char * s)
SDLTest_FuzzerInit	/usr/include/SDL2/SDL_test_fuzzer.h	/^void SDLTest_FuzzerInit(Uint64 execKey);$/;"	p	typeref:typename:void	signature:(Uint64 execKey)
SDLTest_GenerateRunSeed	/usr/include/SDL2/SDL_test_harness.h	/^char *SDLTest_GenerateRunSeed(const int length);$/;"	p	typeref:typename:char *	signature:(const int length)
SDLTest_GetFuzzerInvocationCount	/usr/include/SDL2/SDL_test_fuzzer.h	/^int SDLTest_GetFuzzerInvocationCount(void);$/;"	p	typeref:typename:int	signature:(void)
SDLTest_ImageBlit	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlit(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitAlpha	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitAlpha(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlend	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlend(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendAdd	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAdd(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendAll	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAll(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendMod	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendMod(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendNone	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendNone(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitColor	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitColor(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageFace	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageFace(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImagePrimitives	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitives(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImagePrimitivesBlend	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitivesBlend(void);$/;"	p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_Log	/usr/include/SDL2/SDL_test_log.h	/^void SDLTest_Log(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_VARARG_FUNC(1);$/;"	p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDLTest_LogAllocations	/usr/include/SDL2/SDL_test_memory.h	/^void SDLTest_LogAllocations(void);$/;"	p	typeref:typename:void	signature:(void)
SDLTest_LogAssertSummary	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_LogAssertSummary(void);$/;"	p	typeref:typename:void	signature:(void)
SDLTest_LogError	/usr/include/SDL2/SDL_test_log.h	/^void SDLTest_LogError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_VARARG_FUNC(1);$/;"	p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDLTest_Md5Context	/usr/include/SDL2/SDL_test_md5.h	/^  } SDLTest_Md5Context;$/;"	t	typeref:struct:__anond20919310108
SDLTest_Md5Final	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Final(SDLTest_Md5Context * mdContext);$/;"	p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Init	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Init(SDLTest_Md5Context * mdContext);$/;"	p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Update	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Update(SDLTest_Md5Context * mdContext, unsigned char *inBuf,$/;"	p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext,unsigned char * inBuf,unsigned int inLen)
SDLTest_Random	/usr/include/SDL2/SDL_test_random.h	/^ unsigned int SDLTest_Random(SDLTest_RandomContext *rndContext);$/;"	p	typeref:typename:unsigned int	signature:(SDLTest_RandomContext * rndContext)
SDLTest_RandomAsciiString	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiString(void);$/;"	p	typeref:typename:char *	signature:(void)
SDLTest_RandomAsciiStringOfSize	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringOfSize(int size);$/;"	p	typeref:typename:char *	signature:(int size)
SDLTest_RandomAsciiStringWithMaximumLength	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringWithMaximumLength(int maxLength);$/;"	p	typeref:typename:char *	signature:(int maxLength)
SDLTest_RandomContext	/usr/include/SDL2/SDL_test_random.h	/^  } SDLTest_RandomContext;$/;"	t	typeref:struct:__anonce60ad6c0108
SDLTest_RandomDouble	/usr/include/SDL2/SDL_test_fuzzer.h	/^double SDLTest_RandomDouble(void);$/;"	p	typeref:typename:double	signature:(void)
SDLTest_RandomFloat	/usr/include/SDL2/SDL_test_fuzzer.h	/^float SDLTest_RandomFloat(void);$/;"	p	typeref:typename:float	signature:(void)
SDLTest_RandomInit	/usr/include/SDL2/SDL_test_random.h	/^ void SDLTest_RandomInit(SDLTest_RandomContext * rndContext, unsigned int xi,$/;"	p	typeref:typename:void	signature:(SDLTest_RandomContext * rndContext,unsigned int xi,unsigned int ci)
SDLTest_RandomInitTime	/usr/include/SDL2/SDL_test_random.h	/^ void SDLTest_RandomInitTime(SDLTest_RandomContext *rndContext);$/;"	p	typeref:typename:void	signature:(SDLTest_RandomContext * rndContext)
SDLTest_RandomInt	/usr/include/SDL2/SDL_test_random.h	/^#define SDLTest_RandomInt(/;"	d	signature:(c)
SDLTest_RandomIntegerInRange	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomIntegerInRange(Sint32 min, Sint32 max);$/;"	p	typeref:typename:Sint32	signature:(Sint32 min,Sint32 max)
SDLTest_RandomSint16	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16(void);$/;"	p	typeref:typename:Sint16	signature:(void)
SDLTest_RandomSint16BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16BoundaryValue(Sint16 boundary1, Sint16 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Sint16	signature:(Sint16 boundary1,Sint16 boundary2,SDL_bool validDomain)
SDLTest_RandomSint32	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32(void);$/;"	p	typeref:typename:Sint32	signature:(void)
SDLTest_RandomSint32BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32BoundaryValue(Sint32 boundary1, Sint32 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Sint32	signature:(Sint32 boundary1,Sint32 boundary2,SDL_bool validDomain)
SDLTest_RandomSint64	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64(void);$/;"	p	typeref:typename:Sint64	signature:(void)
SDLTest_RandomSint64BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64BoundaryValue(Sint64 boundary1, Sint64 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Sint64	signature:(Sint64 boundary1,Sint64 boundary2,SDL_bool validDomain)
SDLTest_RandomSint8	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8(void);$/;"	p	typeref:typename:Sint8	signature:(void)
SDLTest_RandomSint8BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8BoundaryValue(Sint8 boundary1, Sint8 boundary2, SDL_bool validDomain);$/;"	p	typeref:typename:Sint8	signature:(Sint8 boundary1,Sint8 boundary2,SDL_bool validDomain)
SDLTest_RandomUint16	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16(void);$/;"	p	typeref:typename:Uint16	signature:(void)
SDLTest_RandomUint16BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16BoundaryValue(Uint16 boundary1, Uint16 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Uint16	signature:(Uint16 boundary1,Uint16 boundary2,SDL_bool validDomain)
SDLTest_RandomUint32	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32(void);$/;"	p	typeref:typename:Uint32	signature:(void)
SDLTest_RandomUint32BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32BoundaryValue(Uint32 boundary1, Uint32 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Uint32	signature:(Uint32 boundary1,Uint32 boundary2,SDL_bool validDomain)
SDLTest_RandomUint64	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64(void);$/;"	p	typeref:typename:Uint64	signature:(void)
SDLTest_RandomUint64BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64BoundaryValue(Uint64 boundary1, Uint64 boundary2, SDL_bool validDomai/;"	p	typeref:typename:Uint64	signature:(Uint64 boundary1,Uint64 boundary2,SDL_bool validDomain)
SDLTest_RandomUint8	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8(void);$/;"	p	typeref:typename:Uint8	signature:(void)
SDLTest_RandomUint8BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8BoundaryValue(Uint8 boundary1, Uint8 boundary2, SDL_bool validDomain);$/;"	p	typeref:typename:Uint8	signature:(Uint8 boundary1,Uint8 boundary2,SDL_bool validDomain)
SDLTest_RandomUnitDouble	/usr/include/SDL2/SDL_test_fuzzer.h	/^double SDLTest_RandomUnitDouble(void);$/;"	p	typeref:typename:double	signature:(void)
SDLTest_RandomUnitFloat	/usr/include/SDL2/SDL_test_fuzzer.h	/^float SDLTest_RandomUnitFloat(void);$/;"	p	typeref:typename:float	signature:(void)
SDLTest_ResetAssertSummary	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_ResetAssertSummary(void);$/;"	p	typeref:typename:void	signature:(void)
SDLTest_RunSuites	/usr/include/SDL2/SDL_test_harness.h	/^int SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 /;"	p	typeref:typename:int	signature:(SDLTest_TestSuiteReference * testSuites[],const char * userRunSeed,Uint64 userExecKey,const char * filter,int testIterations)
SDLTest_SurfaceImage_s	/usr/include/SDL2/SDL_test_images.h	/^typedef struct SDLTest_SurfaceImage_s {$/;"	s
SDLTest_SurfaceImage_s::bytes_per_pixel	/usr/include/SDL2/SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:unsigned int	access:public
SDLTest_SurfaceImage_s::height	/usr/include/SDL2/SDL_test_images.h	/^  int height;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
SDLTest_SurfaceImage_s::pixel_data	/usr/include/SDL2/SDL_test_images.h	/^  const char *pixel_data;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:const char *	access:public
SDLTest_SurfaceImage_s::width	/usr/include/SDL2/SDL_test_images.h	/^  int width;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
SDLTest_SurfaceImage_t	/usr/include/SDL2/SDL_test_images.h	/^} SDLTest_SurfaceImage_t;$/;"	t	typeref:struct:SDLTest_SurfaceImage_s
SDLTest_TestCaseFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef int (*SDLTest_TestCaseFp)(void *arg);$/;"	t	typeref:typename:int (*)(void * arg)
SDLTest_TestCaseReference	/usr/include/SDL2/SDL_test_harness.h	/^typedef struct SDLTest_TestCaseReference {$/;"	s
SDLTest_TestCaseReference	/usr/include/SDL2/SDL_test_harness.h	/^} SDLTest_TestCaseReference;$/;"	t	typeref:struct:SDLTest_TestCaseReference
SDLTest_TestCaseReference::description	/usr/include/SDL2/SDL_test_harness.h	/^    char *description;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
SDLTest_TestCaseReference::enabled	/usr/include/SDL2/SDL_test_harness.h	/^    int enabled;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:int	access:public
SDLTest_TestCaseReference::name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
SDLTest_TestCaseReference::testCase	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:SDLTest_TestCaseFp	access:public
SDLTest_TestCaseSetUpFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef void (*SDLTest_TestCaseSetUpFp)(void *arg);$/;"	t	typeref:typename:void (*)(void * arg)
SDLTest_TestCaseTearDownFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef void  (*SDLTest_TestCaseTearDownFp)(void *arg);$/;"	t	typeref:typename:void (*)(void * arg)
SDLTest_TestSuiteReference	/usr/include/SDL2/SDL_test_harness.h	/^typedef struct SDLTest_TestSuiteReference {$/;"	s
SDLTest_TestSuiteReference	/usr/include/SDL2/SDL_test_harness.h	/^} SDLTest_TestSuiteReference;$/;"	t	typeref:struct:SDLTest_TestSuiteReference
SDLTest_TestSuiteReference::name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:char *	access:public
SDLTest_TestSuiteReference::testCases	/usr/include/SDL2/SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:const SDLTest_TestCaseReference **	access:public
SDLTest_TestSuiteReference::testSetUp	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseSetUpFp	access:public
SDLTest_TestSuiteReference::testTearDown	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseTearDownFp	access:public
SDLTest_TrackAllocations	/usr/include/SDL2/SDL_test_memory.h	/^int SDLTest_TrackAllocations(void);$/;"	p	typeref:typename:int	signature:(void)
SDL_ADDEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_ADDEVENT,$/;"	e	enum:__anon9b19faa10203	access:public
SDL_ALPHA_OPAQUE	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ALPHA_OPAQUE /;"	d
SDL_ALPHA_TRANSPARENT	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ALPHA_TRANSPARENT /;"	d
SDL_ALTIVEC_BLITTERS	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_ALTIVEC_BLITTERS /;"	d
SDL_ANDROID_EXTERNAL_STORAGE_READ	/usr/include/SDL2/SDL_system.h	/^#define SDL_ANDROID_EXTERNAL_STORAGE_READ /;"	d
SDL_ANDROID_EXTERNAL_STORAGE_WRITE	/usr/include/SDL2/SDL_system.h	/^#define SDL_ANDROID_EXTERNAL_STORAGE_WRITE /;"	d
SDL_APP_DIDENTERBACKGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_DIDENTERBACKGROUND, \/**< The application did enter the background and may not get C/;"	e	enum:__anon9b19faa10103	access:public
SDL_APP_DIDENTERFOREGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_DIDENTERFOREGROUND, \/**< The application is now interactive$/;"	e	enum:__anon9b19faa10103	access:public
SDL_APP_LOWMEMORY	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_LOWMEMORY,          \/**< The application is low on memory, free memory if possible.$/;"	e	enum:__anon9b19faa10103	access:public
SDL_APP_TERMINATING	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_TERMINATING,        \/**< The application is being terminated by the OS$/;"	e	enum:__anon9b19faa10103	access:public
SDL_APP_WILLENTERBACKGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_WILLENTERBACKGROUND, \/**< The application is about to enter the background$/;"	e	enum:__anon9b19faa10103	access:public
SDL_APP_WILLENTERFOREGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_WILLENTERFOREGROUND, \/**< The application is about to enter the foreground$/;"	e	enum:__anon9b19faa10103	access:public
SDL_ARRAYORDER_ABGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_ABGR$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_ARGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_ARGB,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_BGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_BGR,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_BGRA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_BGRA,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_NONE,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_RGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_RGB,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ARRAYORDER_RGBA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_RGBA,$/;"	e	enum:__anon04e3cee10403	access:public
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASSERTION_ABORT	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_ABORT,  \/**< Terminate the program. *\/$/;"	e	enum:__anon2328389e0103	access:public
SDL_ASSERTION_ALWAYS_IGNORE	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_ALWAYS_IGNORE  \/**< Ignore the assert from now on. *\/$/;"	e	enum:__anon2328389e0103	access:public
SDL_ASSERTION_BREAK	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_BREAK,  \/**< Make the debugger trigger a breakpoint. *\/$/;"	e	enum:__anon2328389e0103	access:public
SDL_ASSERTION_IGNORE	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_IGNORE,  \/**< Ignore the assert. *\/$/;"	e	enum:__anon2328389e0103	access:public
SDL_ASSERTION_RETRY	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_RETRY,  \/**< Retry the assert immediately. *\/$/;"	e	enum:__anon2328389e0103	access:public
SDL_ASSERT_LEVEL	/usr/include/SDL2/SDL_assert.h	/^#define SDL_ASSERT_LEVEL /;"	d
SDL_AUDIOCVT_MAX_FILTERS	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIOCVT_MAX_FILTERS /;"	d
SDL_AUDIOCVT_PACKED	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIOCVT_PACKED /;"	d
SDL_AUDIOCVT_PACKED	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIOCVT_PACKED$/;"	d
SDL_AUDIODEVICEADDED	/usr/include/SDL2/SDL_events.h	/^    SDL_AUDIODEVICEADDED = 0x1100, \/**< A new audio device is available *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_AUDIODEVICEREMOVED	/usr/include/SDL2/SDL_events.h	/^    SDL_AUDIODEVICEREMOVED,        \/**< An audio device has been removed. *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_AUDIO_ALLOW_ANY_CHANGE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ALLOW_ANY_CHANGE /;"	d
SDL_AUDIO_ALLOW_CHANNELS_CHANGE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ALLOW_CHANNELS_CHANGE /;"	d
SDL_AUDIO_ALLOW_FORMAT_CHANGE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ALLOW_FORMAT_CHANGE /;"	d
SDL_AUDIO_ALLOW_FREQUENCY_CHANGE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ALLOW_FREQUENCY_CHANGE /;"	d
SDL_AUDIO_ALLOW_SAMPLES_CHANGE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ALLOW_SAMPLES_CHANGE /;"	d
SDL_AUDIO_BITSIZE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_BITSIZE(/;"	d	signature:(x)
SDL_AUDIO_DRIVER_ALSA	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_ALSA /;"	d
SDL_AUDIO_DRIVER_ALSA_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_ALSA_DYNAMIC /;"	d
SDL_AUDIO_DRIVER_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_AUDIO_DRIVER_ANDROID /;"	d
SDL_AUDIO_DRIVER_COREAUDIO	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_AUDIO_DRIVER_COREAUDIO /;"	d
SDL_AUDIO_DRIVER_COREAUDIO	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_AUDIO_DRIVER_COREAUDIO /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DSOUND	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_AUDIO_DRIVER_DSOUND /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_JACK	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_JACK /;"	d
SDL_AUDIO_DRIVER_JACK_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_JACK_DYNAMIC /;"	d
SDL_AUDIO_DRIVER_OPENSLES	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_AUDIO_DRIVER_OPENSLES /;"	d
SDL_AUDIO_DRIVER_OSS	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_OSS /;"	d
SDL_AUDIO_DRIVER_OSS	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_AUDIO_DRIVER_OSS /;"	d
SDL_AUDIO_DRIVER_OSS	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_AUDIO_DRIVER_OSS /;"	d
SDL_AUDIO_DRIVER_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_AUDIO_DRIVER_PSP /;"	d
SDL_AUDIO_DRIVER_PULSEAUDIO	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_PULSEAUDIO /;"	d
SDL_AUDIO_DRIVER_PULSEAUDIO_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_AUDIO_DRIVER_PULSEAUDIO_DYNAMIC /;"	d
SDL_AUDIO_DRIVER_WASAPI	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_AUDIO_DRIVER_WASAPI /;"	d
SDL_AUDIO_DRIVER_WASAPI	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_AUDIO_DRIVER_WASAPI /;"	d
SDL_AUDIO_DRIVER_WINMM	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_AUDIO_DRIVER_WINMM /;"	d
SDL_AUDIO_ISBIGENDIAN	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISBIGENDIAN(/;"	d	signature:(x)
SDL_AUDIO_ISFLOAT	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISFLOAT(/;"	d	signature:(x)
SDL_AUDIO_ISINT	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISINT(/;"	d	signature:(x)
SDL_AUDIO_ISLITTLEENDIAN	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISLITTLEENDIAN(/;"	d	signature:(x)
SDL_AUDIO_ISSIGNED	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISSIGNED(/;"	d	signature:(x)
SDL_AUDIO_ISUNSIGNED	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_ISUNSIGNED(/;"	d	signature:(x)
SDL_AUDIO_MASK_BITSIZE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_MASK_BITSIZE /;"	d
SDL_AUDIO_MASK_DATATYPE	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_MASK_DATATYPE /;"	d
SDL_AUDIO_MASK_ENDIAN	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_MASK_ENDIAN /;"	d
SDL_AUDIO_MASK_SIGNED	/usr/include/SDL2/SDL_audio.h	/^#define SDL_AUDIO_MASK_SIGNED /;"	d
SDL_AUDIO_PAUSED	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_PAUSED$/;"	e	enum:__anondde4071e0103	access:public
SDL_AUDIO_PLAYING	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_PLAYING,$/;"	e	enum:__anondde4071e0103	access:public
SDL_AUDIO_STOPPED	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_STOPPED = 0,$/;"	e	enum:__anondde4071e0103	access:public
SDL_AddEventWatch	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_AddEventWatch(SDL_EventFilter filter,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_AddHintCallback	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_AddHintCallback(const char *name,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * name,SDL_HintCallback callback,void * userdata)
SDL_AddTimer	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC SDL_TimerID SDLCALL SDL_AddTimer(Uint32 interval,$/;"	p	typeref:typename:DECLSPEC SDL_TimerID SDLCALL	signature:(Uint32 interval,SDL_TimerCallback callback,void * param)
SDL_AllocFormat	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_PixelFormat * SDLCALL SDL_AllocFormat(Uint32 pixel_format);$/;"	p	typeref:typename:DECLSPEC SDL_PixelFormat * SDLCALL	signature:(Uint32 pixel_format)
SDL_AllocPalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_Palette *SDLCALL SDL_AllocPalette(int ncolors);$/;"	p	typeref:typename:DECLSPEC SDL_Palette * SDLCALL	signature:(int ncolors)
SDL_AllocRW	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_AllocRW(void);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void)
SDL_AndroidBackButton	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_AndroidBackButton(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_AndroidGetActivity	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetActivity(void);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_AndroidGetExternalStoragePath	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetExternalStoragePath(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_AndroidGetExternalStorageState	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_AndroidGetInternalStoragePath	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_AndroidGetJNIEnv	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv(void);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_ArrayOrder	/usr/include/SDL2/SDL_pixels.h	/^} SDL_ArrayOrder;$/;"	t	typeref:enum:__anon04e3cee10403
SDL_AssertData	/usr/include/SDL2/SDL_assert.h	/^typedef struct SDL_AssertData$/;"	s
SDL_AssertData	/usr/include/SDL2/SDL_assert.h	/^} SDL_AssertData;$/;"	t	typeref:struct:SDL_AssertData
SDL_AssertData::always_ignore	/usr/include/SDL2/SDL_assert.h	/^    int always_ignore;$/;"	m	struct:SDL_AssertData	typeref:typename:int	access:public
SDL_AssertData::condition	/usr/include/SDL2/SDL_assert.h	/^    const char *condition;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::filename	/usr/include/SDL2/SDL_assert.h	/^    const char *filename;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::function	/usr/include/SDL2/SDL_assert.h	/^    const char *function;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::linenum	/usr/include/SDL2/SDL_assert.h	/^    int linenum;$/;"	m	struct:SDL_AssertData	typeref:typename:int	access:public
SDL_AssertData::next	/usr/include/SDL2/SDL_assert.h	/^    const struct SDL_AssertData *next;$/;"	m	struct:SDL_AssertData	typeref:typename:const struct SDL_AssertData *	access:public
SDL_AssertData::trigger_count	/usr/include/SDL2/SDL_assert.h	/^    unsigned int trigger_count;$/;"	m	struct:SDL_AssertData	typeref:typename:unsigned int	access:public
SDL_AssertState	/usr/include/SDL2/SDL_assert.h	/^} SDL_AssertState;$/;"	t	typeref:enum:__anon2328389e0103
SDL_AssertionHandler	/usr/include/SDL2/SDL_assert.h	/^typedef SDL_AssertState (SDLCALL *SDL_AssertionHandler)($/;"	t	typeref:typename:SDL_AssertState (SDLCALL *)(const SDL_AssertData * data,void * userdata)
SDL_AtomicAdd	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicAdd(SDL_atomic_t *a, int v);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a,int v)
SDL_AtomicCAS	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCAS(SDL_atomic_t *a, int oldval, int newval);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_atomic_t * a,int oldval,int newval)
SDL_AtomicCASPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCASPtr(void **a, void *oldval, void *newval);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void ** a,void * oldval,void * newval)
SDL_AtomicDecRef	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_AtomicDecRef(/;"	d	signature:(a)
SDL_AtomicGet	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicGet(SDL_atomic_t *a);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a)
SDL_AtomicGetPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicGetPtr(void **a);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void ** a)
SDL_AtomicIncRef	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_AtomicIncRef(/;"	d	signature:(a)
SDL_AtomicLock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicLock(SDL_SpinLock *lock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AtomicSet	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicSet(SDL_atomic_t *a, int v);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a,int v)
SDL_AtomicSetPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicSetPtr(void **a, void* v);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void ** a,void * v)
SDL_AtomicTryLock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicTryLock(SDL_SpinLock *lock);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AtomicUnlock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicUnlock(SDL_SpinLock *lock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AudioCVT	/usr/include/SDL2/SDL_audio.h	/^typedef struct SDL_AudioCVT$/;"	s
SDL_AudioCVT	/usr/include/SDL2/SDL_audio.h	/^} SDL_AUDIOCVT_PACKED SDL_AudioCVT;$/;"	t	typeref:struct:SDL_AudioCVT SDL_AUDIOCVT_PACKED
SDL_AudioCVT::buf	/usr/include/SDL2/SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
SDL_AudioCVT::dst_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioCVT::filter_index	/usr/include/SDL2/SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::filters	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFilter filters[SDL_AUDIOCVT_MAX_FILTERS + 1]; \/**< NULL-terminated list of filter /;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFilter[]	access:public
SDL_AudioCVT::len	/usr/include/SDL2/SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_cvt	/usr/include/SDL2/SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_mult	/usr/include/SDL2/SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_ratio	/usr/include/SDL2/SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::needed	/usr/include/SDL2/SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::rate_incr	/usr/include/SDL2/SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::src_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioCallback	/usr/include/SDL2/SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioCallback) (void *userdata, Uint8 * stream,$/;"	t	typeref:typename:void (SDLCALL *)(void * userdata,Uint8 * stream,int len)
SDL_AudioDeviceEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_AudioDeviceEvent$/;"	s
SDL_AudioDeviceEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_AudioDeviceEvent;$/;"	t	typeref:struct:SDL_AudioDeviceEvent
SDL_AudioDeviceEvent::iscapture	/usr/include/SDL2/SDL_events.h	/^    Uint8 iscapture;    \/**< zero if an output device, non-zero if a capture device. *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The audio device index for the ADDED event (valid until next SDL_G/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceID	/usr/include/SDL2/SDL_audio.h	/^typedef Uint32 SDL_AudioDeviceID;$/;"	t	typeref:typename:Uint32
SDL_AudioFilter	/usr/include/SDL2/SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioFilter) (struct SDL_AudioCVT * cvt,$/;"	t	typeref:typename:void (SDLCALL *)(struct SDL_AudioCVT * cvt,SDL_AudioFormat format)
SDL_AudioFormat	/usr/include/SDL2/SDL_audio.h	/^typedef Uint16 SDL_AudioFormat;$/;"	t	typeref:typename:Uint16
SDL_AudioInit	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioInit(const char *driver_name);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name)
SDL_AudioQuit	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioQuit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_AudioSpec	/usr/include/SDL2/SDL_audio.h	/^typedef struct SDL_AudioSpec$/;"	s
SDL_AudioSpec	/usr/include/SDL2/SDL_audio.h	/^} SDL_AudioSpec;$/;"	t	typeref:struct:SDL_AudioSpec
SDL_AudioSpec::callback	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioCallback callback; \/**< Callback that feeds the audio device (NULL to use SDL_Queu/;"	m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioCallback	access:public
SDL_AudioSpec::channels	/usr/include/SDL2/SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioSpec::freq	/usr/include/SDL2/SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:int	access:public
SDL_AudioSpec::padding	/usr/include/SDL2/SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::samples	/usr/include/SDL2/SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in sample FRAMES (total samples divided /;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::silence	/usr/include/SDL2/SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::size	/usr/include/SDL2/SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
SDL_AudioSpec::userdata	/usr/include/SDL2/SDL_audio.h	/^    void *userdata;             \/**< Userdata passed to callback (ignored for NULL callbacks). /;"	m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
SDL_AudioStatus	/usr/include/SDL2/SDL_audio.h	/^} SDL_AudioStatus;$/;"	t	typeref:enum:__anondde4071e0103
SDL_AudioStream	/usr/include/SDL2/SDL_audio.h	/^typedef struct _SDL_AudioStream SDL_AudioStream;$/;"	t	typeref:struct:_SDL_AudioStream
SDL_AudioStreamAvailable	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamAvailable(SDL_AudioStream *stream);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamClear	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioStreamClear(SDL_AudioStream *stream);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamFlush	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamFlush(SDL_AudioStream *stream);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamGet	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamGet(SDL_AudioStream *stream, void *buf, int len);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream,void * buf,int len)
SDL_AudioStreamPut	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamPut(SDL_AudioStream *stream, const void *buf, int len/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream,const void * buf,int len)
SDL_BIG_ENDIAN	/usr/include/SDL2/SDL_endian.h	/^#define SDL_BIG_ENDIAN /;"	d
SDL_BITMAPORDER_1234	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_1234$/;"	e	enum:__anon04e3cee10203	access:public
SDL_BITMAPORDER_4321	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_4321,$/;"	e	enum:__anon04e3cee10203	access:public
SDL_BITMAPORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_NONE,$/;"	e	enum:__anon04e3cee10203	access:public
SDL_BITSPERPIXEL	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_BITSPERPIXEL(/;"	d	signature:(X)
SDL_BLENDFACTOR_DST_ALPHA	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_DST_ALPHA           = 0x9,  \/**< dstA, dstA, dstA, dstA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_DST_COLOR	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_DST_COLOR           = 0x7,  \/**< dstR, dstG, dstB, dstA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ONE	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE                 = 0x2,  \/**< 1, 1, 1, 1 *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA   \/**< 1-dstA, 1-dstA, 1-dstA, 1-dstA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8,  \/**< 1-dstR, 1-dstG, 1-dstB, 1-dstA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6,  \/**< 1-srcA, 1-srcA, 1-srcA, 1-srcA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4,  \/**< 1-srcR, 1-srcG, 1-srcB, 1-srcA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_SRC_ALPHA	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_SRC_ALPHA           = 0x5,  \/**< srcA, srcA, srcA, srcA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_SRC_COLOR	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_SRC_COLOR           = 0x3,  \/**< srcR, srcG, srcB, srcA *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDFACTOR_ZERO	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDFACTOR_ZERO                = 0x1,  \/**< 0, 0, 0, 0 *\/$/;"	e	enum:__anon685d33560303	access:public
SDL_BLENDMODE_ADD	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_ADD = 0x00000002,      \/**< additive blending$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDMODE_BLEND	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_BLEND = 0x00000001,    \/**< alpha blending$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDMODE_INVALID	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_INVALID = 0x7FFFFFFF$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDMODE_MOD	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_MOD = 0x00000004,      \/**< color modulate$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDMODE_MUL	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_MUL = 0x00000008,      \/**< color multiply$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDMODE_NONE	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_NONE = 0x00000000,     \/**< no blending$/;"	e	enum:__anon685d33560103	access:public
SDL_BLENDOPERATION_ADD	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDOPERATION_ADD              = 0x1,  \/**< dst + src: supported by all renderers *\/$/;"	e	enum:__anon685d33560203	access:public
SDL_BLENDOPERATION_MAXIMUM	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDOPERATION_MAXIMUM          = 0x5   \/**< max(dst, src) : supported by D3D11 *\/$/;"	e	enum:__anon685d33560203	access:public
SDL_BLENDOPERATION_MINIMUM	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDOPERATION_MINIMUM          = 0x4,  \/**< min(dst, src) : supported by D3D11 *\/$/;"	e	enum:__anon685d33560203	access:public
SDL_BLENDOPERATION_REV_SUBTRACT	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDOPERATION_REV_SUBTRACT     = 0x3,  \/**< src - dst : supported by D3D9, D3D11, Open/;"	e	enum:__anon685d33560203	access:public
SDL_BLENDOPERATION_SUBTRACT	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDOPERATION_SUBTRACT         = 0x2,  \/**< dst - src : supported by D3D9, D3D11, Open/;"	e	enum:__anon685d33560203	access:public
SDL_BUTTON	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON(/;"	d	signature:(X)
SDL_BUTTON_LEFT	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_LEFT /;"	d
SDL_BUTTON_LMASK	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_LMASK /;"	d
SDL_BUTTON_MIDDLE	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_MIDDLE /;"	d
SDL_BUTTON_MMASK	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_MMASK /;"	d
SDL_BUTTON_RIGHT	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_RIGHT /;"	d
SDL_BUTTON_RMASK	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_RMASK /;"	d
SDL_BUTTON_X1	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_X1 /;"	d
SDL_BUTTON_X1MASK	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_X1MASK /;"	d
SDL_BUTTON_X2	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_X2 /;"	d
SDL_BUTTON_X2MASK	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_BUTTON_X2MASK /;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_BYTEORDER /;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_BYTEORDER /;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_endian.h	/^#define SDL_BYTEORDER /;"	d
SDL_BYTESPERPIXEL	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_BYTESPERPIXEL(/;"	d	signature:(X)
SDL_BitmapOrder	/usr/include/SDL2/SDL_pixels.h	/^} SDL_BitmapOrder;$/;"	t	typeref:enum:__anon04e3cee10203
SDL_BlendFactor	/usr/include/SDL2/SDL_blendmode.h	/^} SDL_BlendFactor;$/;"	t	typeref:enum:__anon685d33560303
SDL_BlendMode	/usr/include/SDL2/SDL_blendmode.h	/^} SDL_BlendMode;$/;"	t	typeref:enum:__anon685d33560103
SDL_BlendOperation	/usr/include/SDL2/SDL_blendmode.h	/^} SDL_BlendOperation;$/;"	t	typeref:enum:__anon685d33560203
SDL_BlitScaled	/usr/include/SDL2/SDL_surface.h	/^#define SDL_BlitScaled /;"	d
SDL_BlitSurface	/usr/include/SDL2/SDL_surface.h	/^#define SDL_BlitSurface /;"	d
SDL_BuildAudioCVT	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT * cvt,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt,SDL_AudioFormat src_format,Uint8 src_channels,int src_rate,SDL_AudioFormat dst_format,Uint8 dst_channels,int dst_rate)
SDL_CACHELINE_SIZE	/usr/include/SDL2/SDL_cpuinfo.h	/^#define SDL_CACHELINE_SIZE /;"	d
SDL_CLIPBOARDUPDATE	/usr/include/SDL2/SDL_events.h	/^    SDL_CLIPBOARDUPDATE = 0x900, \/**< The clipboard changed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_COMPILEDVERSION	/usr/include/SDL2/SDL_version.h	/^#define SDL_COMPILEDVERSION /;"	d
SDL_COMPILE_TIME_ASSERT	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_COMPILE_TIME_ASSERT(/;"	d	signature:(name,x)
SDL_CONTROLLERAXISMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERAXISMOTION  = 0x650, \/**< Game controller axis motion *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLERBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERBUTTONDOWN,          \/**< Game controller button pressed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLERBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERBUTTONUP,            \/**< Game controller button released *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLERDEVICEADDED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEADDED,         \/**< A new Game controller has been inserted into the sy/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLERDEVICEREMAPPED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEREMAPPED,      \/**< The controller mapping was updated *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLERDEVICEREMOVED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEREMOVED,       \/**< An opened Game controller has been removed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_CONTROLLER_AXIS_INVALID	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_INVALID = -1,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_LEFTX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTX,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_LEFTY	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTY,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_MAX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_MAX$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_RIGHTX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTX,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_RIGHTY	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTY,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_TRIGGERLEFT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERLEFT,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_AXIS_TRIGGERRIGHT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERRIGHT,$/;"	e	enum:__anonec6745aa0503	access:public
SDL_CONTROLLER_BINDTYPE_AXIS	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_AXIS,$/;"	e	enum:__anonec6745aa0203	access:public
SDL_CONTROLLER_BINDTYPE_BUTTON	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_BUTTON,$/;"	e	enum:__anonec6745aa0203	access:public
SDL_CONTROLLER_BINDTYPE_HAT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_HAT$/;"	e	enum:__anonec6745aa0203	access:public
SDL_CONTROLLER_BINDTYPE_NONE	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_NONE = 0,$/;"	e	enum:__anonec6745aa0203	access:public
SDL_CONTROLLER_BUTTON_A	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_A,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_B	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_B,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_BACK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_BACK,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_DPAD_DOWN	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_DOWN,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_DPAD_LEFT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_LEFT,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_DPAD_RIGHT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_RIGHT,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_DPAD_UP	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_UP,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_GUIDE	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_GUIDE,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_INVALID	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_INVALID = -1,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_LEFTSHOULDER	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSHOULDER,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_LEFTSTICK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSTICK,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_MAX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_MAX$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_RIGHTSHOULDER	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_RIGHTSTICK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSTICK,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_START	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_START,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_X	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_X,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_BUTTON_Y	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_Y,$/;"	e	enum:__anonec6745aa0603	access:public
SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CONTROLLER_TYPE_PS3	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_PS3,$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CONTROLLER_TYPE_PS4	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_PS4,$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CONTROLLER_TYPE_UNKNOWN	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_UNKNOWN = 0,$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CONTROLLER_TYPE_XBOX360	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_XBOX360,$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CONTROLLER_TYPE_XBOXONE	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_TYPE_XBOXONE,$/;"	e	enum:__anonec6745aa0103	access:public
SDL_CalculateGammaRamp	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_CalculateGammaRamp(float gamma, Uint16 * ramp);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(float gamma,Uint16 * ramp)
SDL_CaptureMouse	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_CaptureMouse(SDL_bool enabled);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_bool enabled)
SDL_ClearError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_ClearError(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_ClearHints	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_ClearHints(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_ClearQueuedAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_ClearQueuedAudio(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_CloseAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_CloseAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudioDevice(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_Color	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_Color$/;"	s
SDL_Color	/usr/include/SDL2/SDL_pixels.h	/^} SDL_Color;$/;"	t	typeref:struct:SDL_Color
SDL_Color::a	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 a;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::b	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 b;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::g	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 g;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::r	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 r;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Colour	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_Colour /;"	d
SDL_CommonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_CommonEvent$/;"	s
SDL_CommonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_CommonEvent;$/;"	t	typeref:struct:SDL_CommonEvent
SDL_CommonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
SDL_CommonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;$/;"	m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
SDL_CompilerBarrier	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_CompilerBarrier(/;"	d	signature:()
SDL_CompilerBarrier	/usr/include/SDL2/SDL_atomic.h	/^extern _inline void SDL_CompilerBarrier (void);$/;"	p	typeref:typename:_inline void	signature:(void)
SDL_ComposeCustomBlendMode	/usr/include/SDL2/SDL_blendmode.h	/^extern DECLSPEC SDL_BlendMode SDLCALL SDL_ComposeCustomBlendMode(SDL_BlendFactor srcColorFactor,$/;"	p	typeref:typename:DECLSPEC SDL_BlendMode SDLCALL	signature:(SDL_BlendFactor srcColorFactor,SDL_BlendFactor dstColorFactor,SDL_BlendOperation colorOperation,SDL_BlendFactor srcAlphaFactor,SDL_BlendFactor dstAlphaFactor,SDL_BlendOperation alphaOperation)
SDL_CondBroadcast	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondBroadcast(SDL_cond * cond);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondSignal	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondSignal(SDL_cond * cond);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mutex)
SDL_CondWaitTimeout	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond * cond,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mutex,Uint32 ms)
SDL_ControllerAxisEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerAxisEvent$/;"	s
SDL_ControllerAxisEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerAxisEvent;$/;"	t	typeref:struct:SDL_ControllerAxisEvent
SDL_ControllerAxisEvent::axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint16	access:public
SDL_ControllerAxisEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
SDL_ControllerAxisEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
SDL_ControllerAxisEvent::value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Sint16	access:public
SDL_ControllerAxisEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:SDL_JoystickID	access:public
SDL_ControllerButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerButtonEvent$/;"	s
SDL_ControllerButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerButtonEvent;$/;"	t	typeref:struct:SDL_ControllerButtonEvent
SDL_ControllerButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
SDL_ControllerButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
SDL_ControllerButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:SDL_JoystickID	access:public
SDL_ControllerDeviceEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerDeviceEvent$/;"	s
SDL_ControllerDeviceEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerDeviceEvent;$/;"	t	typeref:struct:SDL_ControllerDeviceEvent
SDL_ControllerDeviceEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
SDL_ControllerDeviceEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::S/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
SDL_ControllerDeviceEvent::which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Sint32	access:public
SDL_ConvertAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_ConvertAudio(SDL_AudioCVT * cvt);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt)
SDL_ConvertPixels	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_ConvertPixels(int width, int height,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int width,int height,Uint32 src_format,const void * src,int src_pitch,Uint32 dst_format,void * dst,int dst_pitch)
SDL_ConvertSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurface$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * src,const SDL_PixelFormat * fmt,Uint32 flags)
SDL_ConvertSurfaceFormat	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurfaceFormat$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * src,Uint32 pixel_format,Uint32 flags)
SDL_CreateColorCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateColorCursor(SDL_Surface *surface,$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(SDL_Surface * surface,int hot_x,int hot_y)
SDL_CreateCond	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_cond *SDLCALL SDL_CreateCond(void);$/;"	p	typeref:typename:DECLSPEC SDL_cond * SDLCALL	signature:(void)
SDL_CreateCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateCursor(const Uint8 * data,$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(const Uint8 * data,const Uint8 * mask,int w,int h,int hot_x,int hot_y)
SDL_CreateMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_mutex *SDLCALL SDL_CreateMutex(void);$/;"	p	typeref:typename:DECLSPEC SDL_mutex * SDLCALL	signature:(void)
SDL_CreateRGBSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurface$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(Uint32 flags,int width,int height,int depth,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateRGBSurfaceFrom	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceFrom(void *pixels,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void * pixels,int width,int height,int depth,int pitch,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateRGBSurfaceWithFormat	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceWithFormat$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(Uint32 flags,int width,int height,int depth,Uint32 format)
SDL_CreateRGBSurfaceWithFormatFrom	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceWithFormatFrom$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void * pixels,int width,int height,int depth,int pitch,Uint32 format)
SDL_CreateRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateRenderer(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Window * window,int index,Uint32 flags)
SDL_CreateSemaphore	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_sem *SDLCALL SDL_CreateSemaphore(Uint32 initial_value);$/;"	p	typeref:typename:DECLSPEC SDL_sem * SDLCALL	signature:(Uint32 initial_value)
SDL_CreateShapedWindow	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateShapedWindow(const char *title,unsigned int x,uns/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const char * title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags)
SDL_CreateSoftwareRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateSoftwareRenderer(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Surface * surface)
SDL_CreateSystemCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateSystemCursor(SDL_SystemCursor id);$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(SDL_SystemCursor id)
SDL_CreateTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTexture(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,Uint32 format,int access,int w,int h)
SDL_CreateTextureFromSurface	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_/;"	p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,SDL_Surface * surface)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	/^#define SDL_CreateThread(/;"	d	signature:(fn,name,data)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data);$/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,void * data)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data,$/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateThreadWithStackSize	/usr/include/SDL2/SDL_thread.h	/^#define SDL_CreateThreadWithStackSize(/;"	d	signature:(fn,name,stacksize,data)
SDL_CreateThreadWithStackSize	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThreadWithStackSize(SDL_ThreadFunction fn, const char *name, const size_t stacksize, v/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,const size_t stacksize,void * data)
SDL_CreateThreadWithStackSize	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThreadWithStackSize(SDL_ThreadFunction fn, const char *name, const size_t stacksize, v/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,const size_t stacksize,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateThreadWithStackSize	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThreadWithStackSize(int (SDLCALL * fn) (void *),$/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(int (SDLCALL * fn)(void *),const char * name,const size_t stacksize,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindow(const char *title,$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const char * title,int x,int y,int w,int h,Uint32 flags)
SDL_CreateWindowAndRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_CreateWindowAndRenderer($/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int width,int height,Uint32 window_flags,SDL_Window ** window,SDL_Renderer ** renderer)
SDL_CreateWindowFrom	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindowFrom(const void *data);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const void * data)
SDL_Cursor	/usr/include/SDL2/SDL_mouse.h	/^typedef struct SDL_Cursor SDL_Cursor;   \/**< Implementation dependent *\/$/;"	t	typeref:struct:SDL_Cursor
SDL_DATA_ALIGNED	/usr/include/SDL2/SDL_net.h	/^#define SDL_DATA_ALIGNED /;"	d
SDL_DEFINE_PIXELFORMAT	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_DEFINE_PIXELFORMAT(/;"	d	signature:(type,order,layout,bits,bytes)
SDL_DEFINE_PIXELFOURCC	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_DEFINE_PIXELFOURCC(/;"	d	signature:(A,B,C,D)
SDL_DEPRECATED	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_DEPRECATED$/;"	d
SDL_DEPRECATED	/usr/include/SDL2/begin_code.h	/^#    define SDL_DEPRECATED /;"	d
SDL_DEPRECATED	/usr/include/SDL2/begin_code.h	/^#    define SDL_DEPRECATED$/;"	d
SDL_DISABLE	/usr/include/SDL2/SDL_events.h	/^#define SDL_DISABLE /;"	d
SDL_DISPLAYEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_DISPLAYEVENT   = 0x150,  \/**< Display state change *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DISPLAYEVENT_NONE	/usr/include/SDL2/SDL_video.h	/^    SDL_DISPLAYEVENT_NONE,          \/**< Never used *\/$/;"	e	enum:__anon126ae9e30403	access:public
SDL_DISPLAYEVENT_ORIENTATION	/usr/include/SDL2/SDL_video.h	/^    SDL_DISPLAYEVENT_ORIENTATION    \/**< Display orientation has changed to data1 *\/$/;"	e	enum:__anon126ae9e30403	access:public
SDL_DOLLARGESTURE	/usr/include/SDL2/SDL_events.h	/^    SDL_DOLLARGESTURE   = 0x800,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DOLLARRECORD	/usr/include/SDL2/SDL_events.h	/^    SDL_DOLLARRECORD,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DONTFREE	/usr/include/SDL2/SDL_surface.h	/^#define SDL_DONTFREE /;"	d
SDL_DROPBEGIN	/usr/include/SDL2/SDL_events.h	/^    SDL_DROPBEGIN,                \/**< A new set of drops is beginning (NULL filename) *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DROPCOMPLETE	/usr/include/SDL2/SDL_events.h	/^    SDL_DROPCOMPLETE,             \/**< Current set of drops is now complete (NULL filename) *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DROPFILE	/usr/include/SDL2/SDL_events.h	/^    SDL_DROPFILE        = 0x1000, \/**< The system requests a file open *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DROPTEXT	/usr/include/SDL2/SDL_events.h	/^    SDL_DROPTEXT,                 \/**< text\/plain drag-and-drop event *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_DUMMY_ENUM	/usr/include/SDL2/SDL_stdinc.h	/^} SDL_DUMMY_ENUM;$/;"	t	typeref:enum:__anonea0bf3f10203
SDL_DXGIGetOutputInfo	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_DXGIGetOutputInfo( int displayIndex, int *adapterIndex, int/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(int displayIndex,int * adapterIndex,int * outputIndex)
SDL_DelEventWatch	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_DelEventWatch(SDL_EventFilter filter,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_DelHintCallback	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_DelHintCallback(const char *name,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * name,SDL_HintCallback callback,void * userdata)
SDL_Delay	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 ms)
SDL_DequeueAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC Uint32 SDLCALL SDL_DequeueAudio(SDL_AudioDeviceID dev, void *data, Uint32 len);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_AudioDeviceID dev,void * data,Uint32 len)
SDL_DestroyCond	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyCond(SDL_cond * cond);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_cond * cond)
SDL_DestroyMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyMutex(SDL_mutex * mutex);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_mutex * mutex)
SDL_DestroyRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyRenderer(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer)
SDL_DestroySemaphore	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroySemaphore(SDL_sem * sem);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_sem * sem)
SDL_DestroyTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyTexture(SDL_Texture * texture);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Texture * texture)
SDL_DestroyWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DestroyWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_DetachThread	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_DetachThread(SDL_Thread * thread);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread)
SDL_Direct3D9GetAdapterIndex	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_Direct3D9GetAdapterIndex( int displayIndex );$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex)
SDL_DisableScreenSaver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DisableScreenSaver(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_DisplayEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_DisplayEvent$/;"	s
SDL_DisplayEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_DisplayEvent;$/;"	t	typeref:struct:SDL_DisplayEvent
SDL_DisplayEvent::data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Sint32	access:public
SDL_DisplayEvent::display	/usr/include/SDL2/SDL_events.h	/^    Uint32 display;     \/**< The associated display index *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEvent::event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_DisplayEventID *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DISPLAYEVENT *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEventID	/usr/include/SDL2/SDL_video.h	/^} SDL_DisplayEventID;$/;"	t	typeref:enum:__anon126ae9e30403
SDL_DisplayMode	/usr/include/SDL2/SDL_video.h	/^} SDL_DisplayMode;$/;"	t	typeref:struct:__anon126ae9e30108
SDL_DisplayOrientation	/usr/include/SDL2/SDL_video.h	/^} SDL_DisplayOrientation;$/;"	t	typeref:enum:__anon126ae9e30503
SDL_DollarGestureEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_DollarGestureEvent$/;"	s
SDL_DollarGestureEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_DollarGestureEvent;$/;"	t	typeref:struct:SDL_DollarGestureEvent
SDL_DollarGestureEvent::error	/usr/include/SDL2/SDL_events.h	/^    float error;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DollarGestureEvent::gestureId	/usr/include/SDL2/SDL_events.h	/^    SDL_GestureID gestureId;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_GestureID	access:public
SDL_DollarGestureEvent::numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint32 numFingers;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_TouchID	access:public
SDL_DollarGestureEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DollarGestureEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DropEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_DropEvent$/;"	s
SDL_DropEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_DropEvent;$/;"	t	typeref:struct:SDL_DropEvent
SDL_DropEvent::file	/usr/include/SDL2/SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free(), is NULL on b/;"	m	struct:SDL_DropEvent	typeref:typename:char *	access:public
SDL_DropEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DropEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPC/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DropEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window that was dropped on, if any *\/$/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DuplicateSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_DuplicateSurface(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * surface)
SDL_EFREAD	/usr/include/SDL2/SDL_error.h	/^    SDL_EFREAD,$/;"	e	enum:__anon0bce2e560103	access:public
SDL_EFSEEK	/usr/include/SDL2/SDL_error.h	/^    SDL_EFSEEK,$/;"	e	enum:__anon0bce2e560103	access:public
SDL_EFWRITE	/usr/include/SDL2/SDL_error.h	/^    SDL_EFWRITE,$/;"	e	enum:__anon0bce2e560103	access:public
SDL_ENABLE	/usr/include/SDL2/SDL_events.h	/^#define SDL_ENABLE /;"	d
SDL_ENOMEM	/usr/include/SDL2/SDL_error.h	/^    SDL_ENOMEM,$/;"	e	enum:__anon0bce2e560103	access:public
SDL_EnableScreenSaver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_EnableScreenSaver(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_EnclosePoints	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_EnclosePoints(const SDL_Point * points,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Point * points,int count,const SDL_Rect * clip,SDL_Rect * result)
SDL_Error	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_Error(SDL_errorcode code);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_errorcode code)
SDL_Event	/usr/include/SDL2/SDL_events.h	/^typedef union SDL_Event$/;"	u
SDL_Event	/usr/include/SDL2/SDL_events.h	/^} SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event::adevice	/usr/include/SDL2/SDL_events.h	/^    SDL_AudioDeviceEvent adevice;   \/**< Audio device event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_AudioDeviceEvent	access:public
SDL_Event::button	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
SDL_Event::caxis	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerAxisEvent	access:public
SDL_Event::cbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerButtonEvent	access:public
SDL_Event::cdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerDeviceEvent	access:public
SDL_Event::common	/usr/include/SDL2/SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_CommonEvent	access:public
SDL_Event::dgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DollarGestureEvent	access:public
SDL_Event::display	/usr/include/SDL2/SDL_events.h	/^    SDL_DisplayEvent display;       \/**< Display event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DisplayEvent	access:public
SDL_Event::drop	/usr/include/SDL2/SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DropEvent	access:public
SDL_Event::edit	/usr/include/SDL2/SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TextEditingEvent	access:public
SDL_Event::jaxis	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
SDL_Event::jball	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
SDL_Event::jbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
SDL_Event::jdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyDeviceEvent	access:public
SDL_Event::jhat	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
SDL_Event::key	/usr/include/SDL2/SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
SDL_Event::mgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MultiGestureEvent	access:public
SDL_Event::motion	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
SDL_Event::padding	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding[56];$/;"	m	union:SDL_Event	typeref:typename:Uint8[56]	access:public
SDL_Event::quit	/usr/include/SDL2/SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
SDL_Event::sensor	/usr/include/SDL2/SDL_events.h	/^    SDL_SensorEvent sensor;         \/**< Sensor event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_SensorEvent	access:public
SDL_Event::syswm	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
SDL_Event::text	/usr/include/SDL2/SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TextInputEvent	access:public
SDL_Event::tfinger	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TouchFingerEvent	access:public
SDL_Event::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	m	union:SDL_Event	typeref:typename:Uint32	access:public
SDL_Event::user	/usr/include/SDL2/SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
SDL_Event::wheel	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseWheelEvent	access:public
SDL_Event::window	/usr/include/SDL2/SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_WindowEvent	access:public
SDL_EventFilter	/usr/include/SDL2/SDL_events.h	/^typedef int (SDLCALL * SDL_EventFilter) (void *userdata, SDL_Event * event);$/;"	t	typeref:typename:int (SDLCALL *)(void * userdata,SDL_Event * event)
SDL_EventState	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC Uint8 SDLCALL SDL_EventState(Uint32 type, int state);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(Uint32 type,int state)
SDL_EventType	/usr/include/SDL2/SDL_events.h	/^} SDL_EventType;$/;"	t	typeref:enum:__anon9b19faa10103
SDL_FALSE	/usr/include/SDL2/SDL_stdinc.h	/^    SDL_FALSE = 0,$/;"	e	enum:__anonea0bf3f10103	access:public
SDL_FALSE	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_FALSE /;"	d
SDL_FILE	/usr/include/SDL2/SDL_assert.h	/^#define SDL_FILE /;"	d
SDL_FILESYSTEM_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_FILESYSTEM_ANDROID /;"	d
SDL_FILESYSTEM_COCOA	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_FILESYSTEM_COCOA /;"	d
SDL_FILESYSTEM_COCOA	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_FILESYSTEM_COCOA /;"	d
SDL_FILESYSTEM_DUMMY	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_FILESYSTEM_DUMMY /;"	d
SDL_FILESYSTEM_DUMMY	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_FILESYSTEM_DUMMY /;"	d
SDL_FILESYSTEM_DUMMY	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_FILESYSTEM_DUMMY /;"	d
SDL_FILESYSTEM_UNIX	/usr/include/SDL2/SDL_config.h	/^#define SDL_FILESYSTEM_UNIX /;"	d
SDL_FILESYSTEM_UNIX	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_FILESYSTEM_UNIX /;"	d
SDL_FILESYSTEM_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_FILESYSTEM_WINDOWS /;"	d
SDL_FINGERDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERDOWN      = 0x700,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_FINGERMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERMOTION,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_FINGERUP	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERUP,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_FIRSTEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_FIRSTEVENT     = 0,     \/**< Unused (do not remove) *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_FLIP_HORIZONTAL	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_HORIZONTAL = 0x00000001,    \/**< flip horizontally *\/$/;"	e	enum:__anon9214fbec0503	access:public
SDL_FLIP_NONE	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_NONE = 0x00000000,     \/**< Do not flip *\/$/;"	e	enum:__anon9214fbec0503	access:public
SDL_FLIP_VERTICAL	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_VERTICAL = 0x00000002     \/**< flip vertically *\/$/;"	e	enum:__anon9214fbec0503	access:public
SDL_FORCE_INLINE	/usr/include/SDL2/begin_code.h	/^#define SDL_FORCE_INLINE /;"	d
SDL_FOURCC	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_FOURCC(/;"	d	signature:(A,B,C,D)
SDL_FPoint	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_FPoint$/;"	s
SDL_FPoint	/usr/include/SDL2/SDL_rect.h	/^} SDL_FPoint;$/;"	t	typeref:struct:SDL_FPoint
SDL_FPoint::x	/usr/include/SDL2/SDL_rect.h	/^    float x;$/;"	m	struct:SDL_FPoint	typeref:typename:float	access:public
SDL_FPoint::y	/usr/include/SDL2/SDL_rect.h	/^    float y;$/;"	m	struct:SDL_FPoint	typeref:typename:float	access:public
SDL_FRect	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_FRect$/;"	s
SDL_FRect	/usr/include/SDL2/SDL_rect.h	/^} SDL_FRect;$/;"	t	typeref:struct:SDL_FRect
SDL_FRect::h	/usr/include/SDL2/SDL_rect.h	/^    float h;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
SDL_FRect::w	/usr/include/SDL2/SDL_rect.h	/^    float w;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
SDL_FRect::x	/usr/include/SDL2/SDL_rect.h	/^    float x;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
SDL_FRect::y	/usr/include/SDL2/SDL_rect.h	/^    float y;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
SDL_FUNCTION	/usr/include/SDL2/SDL_assert.h	/^#   define SDL_FUNCTION /;"	d
SDL_FillRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRect$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * dst,const SDL_Rect * rect,Uint32 color)
SDL_FillRects	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRects$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * dst,const SDL_Rect * rects,int count,Uint32 color)
SDL_FilterEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FilterEvents(SDL_EventFilter filter,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_Finger	/usr/include/SDL2/SDL_touch.h	/^typedef struct SDL_Finger$/;"	s
SDL_Finger	/usr/include/SDL2/SDL_touch.h	/^} SDL_Finger;$/;"	t	typeref:struct:SDL_Finger
SDL_Finger::id	/usr/include/SDL2/SDL_touch.h	/^    SDL_FingerID id;$/;"	m	struct:SDL_Finger	typeref:typename:SDL_FingerID	access:public
SDL_Finger::pressure	/usr/include/SDL2/SDL_touch.h	/^    float pressure;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_Finger::x	/usr/include/SDL2/SDL_touch.h	/^    float x;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_Finger::y	/usr/include/SDL2/SDL_touch.h	/^    float y;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_FingerID	/usr/include/SDL2/SDL_touch.h	/^typedef Sint64 SDL_FingerID;$/;"	t	typeref:typename:Sint64
SDL_FlushEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvent(Uint32 type);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 type)
SDL_FlushEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvents(Uint32 minType, Uint32 maxType);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 minType,Uint32 maxType)
SDL_FreeAudioStream	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeAudioStream(SDL_AudioStream *stream);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioStream * stream)
SDL_FreeCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_FreeCursor(SDL_Cursor * cursor);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_FreeFormat	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreeFormat(SDL_PixelFormat *format);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_PixelFormat * format)
SDL_FreePalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreePalette(SDL_Palette * palette);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Palette * palette)
SDL_FreeRW	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC void SDLCALL SDL_FreeRW(SDL_RWops * area);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_RWops * area)
SDL_FreeSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_FreeSurface(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_FreeWAV	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeWAV(Uint8 * audio_buf);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * audio_buf)
SDL_GETEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_GETEVENT$/;"	e	enum:__anon9b19faa10203	access:public
SDL_GLContext	/usr/include/SDL2/SDL_video.h	/^typedef void *SDL_GLContext;$/;"	t	typeref:typename:void *
SDL_GLContextResetNotification	/usr/include/SDL2/SDL_video.h	/^} SDL_GLContextResetNotification;$/;"	t	typeref:enum:__anon126ae9e30a03
SDL_GL_ACCELERATED_VISUAL	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCELERATED_VISUAL,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ACCUM_ALPHA_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_ALPHA_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ACCUM_BLUE_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_BLUE_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ACCUM_GREEN_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_GREEN_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ACCUM_RED_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_RED_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ALPHA_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ALPHA_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_BLUE_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_BLUE_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_BUFFER_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_BUFFER_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_BindTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,float * texw,float * texh)
SDL_GL_CONTEXT_DEBUG_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_DEBUG_FLAG              = 0x0001,$/;"	e	enum:__anon126ae9e30803	access:public
SDL_GL_CONTEXT_EGL	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_EGL,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_FLAGS	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_FLAGS,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,$/;"	e	enum:__anon126ae9e30803	access:public
SDL_GL_CONTEXT_MAJOR_VERSION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_MAJOR_VERSION,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_MINOR_VERSION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_MINOR_VERSION,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_NO_ERROR	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_NO_ERROR$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_PROFILE_COMPATIBILITY	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,$/;"	e	enum:__anon126ae9e30703	access:public
SDL_GL_CONTEXT_PROFILE_CORE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,$/;"	e	enum:__anon126ae9e30703	access:public
SDL_GL_CONTEXT_PROFILE_ES	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 \/**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT *\/$/;"	e	enum:__anon126ae9e30703	access:public
SDL_GL_CONTEXT_PROFILE_MASK	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_MASK,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH  = 0x0001$/;"	e	enum:__anon126ae9e30903	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE   = 0x0000,$/;"	e	enum:__anon126ae9e30903	access:public
SDL_GL_CONTEXT_RESET_ISOLATION_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG    = 0x0008$/;"	e	enum:__anon126ae9e30803	access:public
SDL_GL_CONTEXT_RESET_LOSE_CONTEXT	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT    = 0x0001$/;"	e	enum:__anon126ae9e30a03	access:public
SDL_GL_CONTEXT_RESET_NOTIFICATION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RESET_NOTIFICATION,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_CONTEXT_RESET_NO_NOTIFICATION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,$/;"	e	enum:__anon126ae9e30a03	access:public
SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG      = 0x0004,$/;"	e	enum:__anon126ae9e30803	access:public
SDL_GL_CreateContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_CreateContext(SDL_Window *$/;"	p	typeref:typename:DECLSPEC SDL_GLContext SDLCALL	signature:(SDL_Window * window)
SDL_GL_DEPTH_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_DEPTH_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_DOUBLEBUFFER	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_DOUBLEBUFFER,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_DeleteContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_DeleteContext(SDL_GLContext context);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_GLContext context)
SDL_GL_ExtensionSupported	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GL_ExtensionSupported(const char$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * extension)
SDL_GL_FRAMEBUFFER_SRGB_CAPABLE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_GREEN_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_GREEN_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_GetAttribute	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetAttribute(SDL_GLattr attr, int *value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int * value)
SDL_GL_GetCurrentContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_GetCurrentContext(void);$/;"	p	typeref:typename:DECLSPEC SDL_GLContext SDLCALL	signature:(void)
SDL_GL_GetCurrentWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window* SDLCALL SDL_GL_GetCurrentWindow(void);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GL_GetDrawableSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_GetDrawableSize(SDL_Window * window, int *w,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GL_GetProcAddress	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GL_GetProcAddress(const char *proc);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * proc)
SDL_GL_GetSwapInterval	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetSwapInterval(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GL_LoadLibrary	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_LoadLibrary(const char *path);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * path)
SDL_GL_MULTISAMPLEBUFFERS	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_MULTISAMPLEBUFFERS,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_MULTISAMPLESAMPLES	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_MULTISAMPLESAMPLES,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_MakeCurrent	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_MakeCurrent(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_GLContext context)
SDL_GL_RED_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_RED_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_RETAINED_BACKING	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_RETAINED_BACKING,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_ResetAttributes	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_ResetAttributes(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GL_SHARE_WITH_CURRENT_CONTEXT	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_STENCIL_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_STENCIL_SIZE,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_STEREO	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_STEREO,$/;"	e	enum:__anon126ae9e30603	access:public
SDL_GL_SetAttribute	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetAttribute(SDL_GLattr attr, int value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int value)
SDL_GL_SetSwapInterval	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetSwapInterval(int interval);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int interval)
SDL_GL_SwapWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_SwapWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_GL_UnbindTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_UnbindTexture(SDL_Texture *texture);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture)
SDL_GL_UnloadLibrary	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_UnloadLibrary(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GLattr	/usr/include/SDL2/SDL_video.h	/^} SDL_GLattr;$/;"	t	typeref:enum:__anon126ae9e30603
SDL_GLcontextFlag	/usr/include/SDL2/SDL_video.h	/^} SDL_GLcontextFlag;$/;"	t	typeref:enum:__anon126ae9e30803
SDL_GLcontextReleaseFlag	/usr/include/SDL2/SDL_video.h	/^} SDL_GLcontextReleaseFlag;$/;"	t	typeref:enum:__anon126ae9e30903
SDL_GLprofile	/usr/include/SDL2/SDL_video.h	/^} SDL_GLprofile;$/;"	t	typeref:enum:__anon126ae9e30703
SDL_GameController	/usr/include/SDL2/SDL_gamecontroller.h	/^typedef struct _SDL_GameController SDL_GameController;$/;"	t	typeref:struct:_SDL_GameController
SDL_GameControllerAddMapping	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMapping(const char* mappingString);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * mappingString)
SDL_GameControllerAddMappingsFromFile	/usr/include/SDL2/SDL_gamecontroller.h	/^#define SDL_GameControllerAddMappingsFromFile(/;"	d	signature:(file)
SDL_GameControllerAddMappingsFromRW	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW(SDL_RWops * rw, int freerw);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * rw,int freerw)
SDL_GameControllerAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerAxis;$/;"	t	typeref:enum:__anonec6745aa0503
SDL_GameControllerBindType	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerBindType;$/;"	t	typeref:enum:__anonec6745aa0203
SDL_GameControllerButton	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerButton;$/;"	t	typeref:enum:__anonec6745aa0603
SDL_GameControllerButtonBind	/usr/include/SDL2/SDL_gamecontroller.h	/^typedef struct SDL_GameControllerButtonBind$/;"	s
SDL_GameControllerButtonBind	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerButtonBind;$/;"	t	typeref:struct:SDL_GameControllerButtonBind
SDL_GameControllerButtonBind::__anonec6745aa030a	/usr/include/SDL2/SDL_gamecontroller.h	/^    {$/;"	u	struct:SDL_GameControllerButtonBind	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	/usr/include/SDL2/SDL_gamecontroller.h	/^        struct {$/;"	s	union:SDL_GameControllerButtonBind::__anonec6745aa030a	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408::hat	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat;$/;"	m	struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408::hat_mask	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat_mask;$/;"	m	struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::axis	/usr/include/SDL2/SDL_gamecontroller.h	/^        int axis;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::button	/usr/include/SDL2/SDL_gamecontroller.h	/^        int button;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anonec6745aa030a::hat	/usr/include/SDL2/SDL_gamecontroller.h	/^        } hat;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	access:public
SDL_GameControllerButtonBind::bindType	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:typename:SDL_GameControllerBindType	access:public
SDL_GameControllerButtonBind::value	/usr/include/SDL2/SDL_gamecontroller.h	/^    } value;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anonec6745aa030a	access:public
SDL_GameControllerClose	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerClose(SDL_GameController *gamecontroller);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerEventState	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerEventState(int state);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int state)
SDL_GameControllerFromInstanceID	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerFromInstanceID(SDL_JoystickID joyi/;"	p	typeref:typename:DECLSPEC SDL_GameController * SDLCALL	signature:(SDL_JoystickID joyid)
SDL_GameControllerFromPlayerIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerFromPlayerIndex(int player_index);$/;"	p	typeref:typename:DECLSPEC SDL_GameController * SDLCALL	signature:(int player_index)
SDL_GameControllerGetAttached	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GameControllerGetAttached(SDL_GameController *gamecontrolle/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetAxis(SDL_GameController *gamecontroller,$/;"	p	typeref:typename:DECLSPEC Sint16 SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerAxis axis)
SDL_GameControllerGetAxisFromString	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerAxis SDLCALL SDL_GameControllerGetAxisFromString(const char *p/;"	p	typeref:typename:DECLSPEC SDL_GameControllerAxis SDLCALL	signature:(const char * pchString)
SDL_GameControllerGetBindForAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetBindForAxis(SDL_GameController *gamecontroller,$/;"	p	typeref:typename:DECLSPEC SDL_GameControllerButtonBind SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerAxis axis)
SDL_GameControllerGetBindForButton	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetBindForButton(SDL_GameController *gamecontroller,$/;"	p	typeref:typename:DECLSPEC SDL_GameControllerButtonBind SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerButton button)
SDL_GameControllerGetButton	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GameControllerGetButton(SDL_GameController *gamecontroller,$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerButton button)
SDL_GameControllerGetButtonFromString	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerButton SDLCALL SDL_GameControllerGetButtonFromString(const cha/;"	p	typeref:typename:DECLSPEC SDL_GameControllerButton SDLCALL	signature:(const char * pchString)
SDL_GameControllerGetJoystick	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_GameControllerGetJoystick(SDL_GameController *gamecont/;"	p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetPlayerIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerGetPlayerIndex(SDL_GameController *gamecontroller)/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetProduct	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProduct(SDL_GameController * gamecontroller)/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetProductVersion	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProductVersion(SDL_GameController * gamecont/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetStringForAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis ax/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameControllerAxis axis)
SDL_GameControllerGetStringForButton	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForButton(SDL_GameControllerButto/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameControllerButton button)
SDL_GameControllerGetType	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerType SDLCALL SDL_GameControllerGetType(SDL_GameController *gam/;"	p	typeref:typename:DECLSPEC SDL_GameControllerType SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetVendor	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetVendor(SDL_GameController * gamecontroller);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerMapping	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMapping(SDL_GameController * gamecontroller);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerMappingForDeviceIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char *SDLCALL SDL_GameControllerMappingForDeviceIndex(int joystick_index);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int joystick_index)
SDL_GameControllerMappingForGUID	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForGUID(SDL_JoystickGUID guid);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(SDL_JoystickGUID guid)
SDL_GameControllerMappingForIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForIndex(int mapping_index);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int mapping_index)
SDL_GameControllerName	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerName(SDL_GameController *gamecontroller);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerNameForIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerNameForIndex(int joystick_index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int joystick_index)
SDL_GameControllerNumMappings	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerNumMappings(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GameControllerOpen	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerOpen(int joystick_index);$/;"	p	typeref:typename:DECLSPEC SDL_GameController * SDLCALL	signature:(int joystick_index)
SDL_GameControllerRumble	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerRumble(SDL_GameController *gamecontroller, Uint16 /;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GameController * gamecontroller,Uint16 low_frequency_rumble,Uint16 high_frequency_rumble,Uint32 duration_ms)
SDL_GameControllerSetPlayerIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerSetPlayerIndex(SDL_GameController *gamecontroller/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_GameController * gamecontroller,int player_index)
SDL_GameControllerType	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerType;$/;"	t	typeref:enum:__anonec6745aa0103
SDL_GameControllerTypeForIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerType SDLCALL SDL_GameControllerTypeForIndex(int joystick_index/;"	p	typeref:typename:DECLSPEC SDL_GameControllerType SDLCALL	signature:(int joystick_index)
SDL_GameControllerUpdate	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerUpdate(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GestureID	/usr/include/SDL2/SDL_gesture.h	/^typedef Sint64 SDL_GestureID;$/;"	t	typeref:typename:Sint64
SDL_GetAndroidSDKVersion	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_GetAndroidSDKVersion(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetAssertionHandler(void **puserdata);$/;"	p	typeref:typename:DECLSPEC SDL_AssertionHandler SDLCALL	signature:(void ** puserdata)
SDL_GetAssertionReport	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC const SDL_AssertData * SDLCALL SDL_GetAssertionReport(void);$/;"	p	typeref:typename:DECLSPEC const SDL_AssertData * SDLCALL	signature:(void)
SDL_GetAudioDeviceName	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDeviceName(int index,$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index,int iscapture)
SDL_GetAudioDeviceStatus	/usr/include/SDL2/SDL_audio.h	/^SDL_GetAudioDeviceStatus(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC SDL_AudioStatus SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_GetAudioDriver	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDriver(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
SDL_GetAudioStatus	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioStatus SDLCALL SDL_GetAudioStatus(void);$/;"	p	typeref:typename:DECLSPEC SDL_AudioStatus SDLCALL	signature:(void)
SDL_GetBasePath	/usr/include/SDL2/SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetBasePath(void);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(void)
SDL_GetCPUCacheLineSize	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCacheLineSize(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetCPUCount	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCount(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetClipRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_GetClipRect(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface,SDL_Rect * rect)
SDL_GetClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC char * SDLCALL SDL_GetClipboardText(void);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(void)
SDL_GetClosestDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_DisplayMode * SDLCALL SDL_GetClosestDisplayMode(int displayIndex, const SDL_/;"	p	typeref:typename:DECLSPEC SDL_DisplayMode * SDLCALL	signature:(int displayIndex,const SDL_DisplayMode * mode,SDL_DisplayMode * closest)
SDL_GetColorKey	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetColorKey(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint32 * key)
SDL_GetCurrentAudioDriver	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentAudioDriver(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetCurrentDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_DisplayMode * mode)
SDL_GetCurrentVideoDriver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentVideoDriver(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetCursor(void);$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(void)
SDL_GetDefaultAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetDefaultAssertionHandler(void);$/;"	p	typeref:typename:DECLSPEC SDL_AssertionHandler SDLCALL	signature:(void)
SDL_GetDefaultCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetDefaultCursor(void);$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(void)
SDL_GetDesktopDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_DisplayMode * mode)
SDL_GetDisplayBounds	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_Rect * rect)
SDL_GetDisplayDPI	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayDPI(int displayIndex, float * ddpi, float * hdpi, floa/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,float * ddpi,float * hdpi,float * vdpi)
SDL_GetDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayMode(int displayIndex, int modeIndex,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,int modeIndex,SDL_DisplayMode * mode)
SDL_GetDisplayName	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char * SDLCALL SDL_GetDisplayName(int displayIndex);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int displayIndex)
SDL_GetDisplayOrientation	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_DisplayOrientation SDLCALL SDL_GetDisplayOrientation(int displayIndex);$/;"	p	typeref:typename:DECLSPEC SDL_DisplayOrientation SDLCALL	signature:(int displayIndex)
SDL_GetDisplayUsableBounds	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayUsableBounds(int displayIndex, SDL_Rect * rect);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_Rect * rect)
SDL_GetError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC const char *SDLCALL SDL_GetError(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetEventFilter	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetEventFilter(SDL_EventFilter * filter,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_EventFilter * filter,void ** userdata)
SDL_GetEventState	/usr/include/SDL2/SDL_events.h	/^#define SDL_GetEventState(/;"	d	signature:(type)
SDL_GetGlobalMouseState	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetGlobalMouseState(int *x, int *y);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetGrabbedWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetGrabbedWindow(void);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetHint	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC const char * SDLCALL SDL_GetHint(const char *name);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(const char * name)
SDL_GetHintBoolean	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetHintBoolean(const char *name, SDL_bool default_value);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,SDL_bool default_value)
SDL_GetKeyFromName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromName(const char *name);$/;"	p	typeref:typename:DECLSPEC SDL_Keycode SDLCALL	signature:(const char * name)
SDL_GetKeyFromScancode	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromScancode(SDL_Scancode scancode);$/;"	p	typeref:typename:DECLSPEC SDL_Keycode SDLCALL	signature:(SDL_Scancode scancode)
SDL_GetKeyName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetKeyName(SDL_Keycode key);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Keycode key)
SDL_GetKeyboardFocus	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetKeyboardFocus(void);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetKeyboardState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const Uint8 *SDLCALL SDL_GetKeyboardState(int *numkeys);$/;"	p	typeref:typename:DECLSPEC const Uint8 * SDLCALL	signature:(int * numkeys)
SDL_GetMemoryFunctions	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_GetMemoryFunctions(SDL_malloc_func *malloc_func,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_malloc_func * malloc_func,SDL_calloc_func * calloc_func,SDL_realloc_func * realloc_func,SDL_free_func * free_func)
SDL_GetModState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keymod SDLCALL SDL_GetModState(void);$/;"	p	typeref:typename:DECLSPEC SDL_Keymod SDLCALL	signature:(void)
SDL_GetMouseFocus	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetMouseFocus(void);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetMouseState	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetMouseState(int *x, int *y);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetNumAllocations	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAllocations(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumAudioDevices	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDevices(int iscapture);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int iscapture)
SDL_GetNumAudioDrivers	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDrivers(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumDisplayModes	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumDisplayModes(int displayIndex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex)
SDL_GetNumRenderDrivers	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetNumRenderDrivers(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumTouchDevices	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchDevices(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumTouchFingers	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchFingers(SDL_TouchID touchID);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchID)
SDL_GetNumVideoDisplays	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDisplays(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumVideoDrivers	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDrivers(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetPerformanceCounter	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceCounter(void);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(void)
SDL_GetPerformanceFrequency	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceFrequency(void);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(void)
SDL_GetPixelFormatName	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC const char* SDLCALL SDL_GetPixelFormatName(Uint32 format);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(Uint32 format)
SDL_GetPlatform	/usr/include/SDL2/SDL_platform.h	/^extern DECLSPEC const char * SDLCALL SDL_GetPlatform (void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetPowerInfo	/usr/include/SDL2/SDL_power.h	/^extern DECLSPEC SDL_PowerState SDLCALL SDL_GetPowerInfo(int *secs, int *pct);$/;"	p	typeref:typename:DECLSPEC SDL_PowerState SDLCALL	signature:(int * secs,int * pct)
SDL_GetPrefPath	/usr/include/SDL2/SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetPrefPath(const char *org, const char *app);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * org,const char * app)
SDL_GetQueuedAudioSize	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetQueuedAudioSize(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_GetRGB	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGB(Uint32 pixel,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * format,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetRGBA	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGBA(Uint32 pixel,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * format,Uint8 * r,Uint8 * g,Uint8 * b,Uint8 * a)
SDL_GetRelativeMouseMode	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetRelativeMouseMode(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_GetRelativeMouseState	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetRelativeMouseState(int *x, int *y);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetRenderDrawBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_BlendMode * blendMode)
SDL_GetRenderDrawColor	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawColor(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,Uint8 * r,Uint8 * g,Uint8 * b,Uint8 * a)
SDL_GetRenderDriverInfo	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDriverInfo(int index,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int index,SDL_RendererInfo * info)
SDL_GetRenderTarget	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_GetRenderTarget(SDL_Renderer *renderer);$/;"	p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_GetRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_GetRenderer(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Window * window)
SDL_GetRendererInfo	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererInfo(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_RendererInfo * info)
SDL_GetRendererOutputSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererOutputSize(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int * w,int * h)
SDL_GetRevision	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC const char *SDLCALL SDL_GetRevision(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetRevisionNumber	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC int SDLCALL SDL_GetRevisionNumber(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetScancodeFromKey	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromKey(SDL_Keycode key);$/;"	p	typeref:typename:DECLSPEC SDL_Scancode SDLCALL	signature:(SDL_Keycode key)
SDL_GetScancodeFromName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromName(const char *name);$/;"	p	typeref:typename:DECLSPEC SDL_Scancode SDLCALL	signature:(const char * name)
SDL_GetScancodeName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetScancodeName(SDL_Scancode scancode);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Scancode scancode)
SDL_GetShapedWindowMode	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shap/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_WindowShapeMode * shape_mode)
SDL_GetSurfaceAlphaMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceAlphaMod(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 * alpha)
SDL_GetSurfaceBlendMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceBlendMode(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_BlendMode * blendMode)
SDL_GetSurfaceColorMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceColorMod(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetSystemRAM	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetSystemRAM(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetTextureAlphaMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureAlphaMod(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 * alpha)
SDL_GetTextureBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureBlendMode(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_BlendMode * blendMode)
SDL_GetTextureColorMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureColorMod(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetTextureScaleMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureScaleMode(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_ScaleMode * scaleMode)
SDL_GetThreadID	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_GetThreadID(SDL_Thread * thread);$/;"	p	typeref:typename:DECLSPEC SDL_threadID SDLCALL	signature:(SDL_Thread * thread)
SDL_GetThreadName	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC const char *SDLCALL SDL_GetThreadName(SDL_Thread *thread);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Thread * thread)
SDL_GetTicks	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetTicks(void);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(void)
SDL_GetTouchDevice	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC SDL_TouchID SDLCALL SDL_GetTouchDevice(int index);$/;"	p	typeref:typename:DECLSPEC SDL_TouchID SDLCALL	signature:(int index)
SDL_GetTouchDeviceType	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC SDL_TouchDeviceType SDLCALL SDL_GetTouchDeviceType(SDL_TouchID touchID);$/;"	p	typeref:typename:DECLSPEC SDL_TouchDeviceType SDLCALL	signature:(SDL_TouchID touchID)
SDL_GetTouchFinger	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC SDL_Finger * SDLCALL SDL_GetTouchFinger(SDL_TouchID touchID, int index);$/;"	p	typeref:typename:DECLSPEC SDL_Finger * SDLCALL	signature:(SDL_TouchID touchID,int index)
SDL_GetVersion	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC void SDLCALL SDL_GetVersion(SDL_version * ver);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_version * ver)
SDL_GetVideoDriver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetVideoDriver(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
SDL_GetWindowBordersSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowBordersSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,int * top,int * left,int * bottom,int * right)
SDL_GetWindowBrightness	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC float SDLCALL SDL_GetWindowBrightness(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowData	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GetWindowData(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Window * window,const char * name)
SDL_GetWindowDisplayIndex	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayIndex(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayMode(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_DisplayMode * mode)
SDL_GetWindowFlags	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowFlags(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowFromID	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetWindowFromID(Uint32 id);$/;"	p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(Uint32 id)
SDL_GetWindowGammaRamp	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowGammaRamp(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,Uint16 * red,Uint16 * green,Uint16 * blue)
SDL_GetWindowGrab	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowGrab(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowID	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowID(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowMaximumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMaximumSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowMinimumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMinimumSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowOpacity	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowOpacity(SDL_Window * window, float * out_opacity);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float * out_opacity)
SDL_GetWindowPixelFormat	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowPixelFormat(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowPosition	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowPosition(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * x,int * y)
SDL_GetWindowSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowSize(SDL_Window * window, int *w,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowSurface	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_GetWindowSurface(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowTitle	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetWindowTitle(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowWMInfo	/usr/include/SDL2/SDL_syswm.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowWMInfo(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,SDL_SysWMinfo * info)
SDL_GetYUVConversionMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL SDL_GetYUVConversionMode(void);$/;"	p	typeref:typename:DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL	signature:(void)
SDL_GetYUVConversionModeForResolution	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL SDL_GetYUVConversionModeForResolution(int width,/;"	p	typeref:typename:DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL	signature:(int width,int height)
SDL_HAPTIC_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_HAPTIC_ANDROID /;"	d
SDL_HAPTIC_AUTOCENTER	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_AUTOCENTER /;"	d
SDL_HAPTIC_CARTESIAN	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_CARTESIAN /;"	d
SDL_HAPTIC_CONSTANT	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_CONSTANT /;"	d
SDL_HAPTIC_CUSTOM	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_CUSTOM /;"	d
SDL_HAPTIC_DAMPER	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_DAMPER /;"	d
SDL_HAPTIC_DINPUT	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_HAPTIC_DINPUT /;"	d
SDL_HAPTIC_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_HAPTIC_DISABLED /;"	d
SDL_HAPTIC_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_HAPTIC_DISABLED /;"	d
SDL_HAPTIC_DISABLED	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_HAPTIC_DISABLED /;"	d
SDL_HAPTIC_DISABLED	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_HAPTIC_DISABLED /;"	d
SDL_HAPTIC_DUMMY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_HAPTIC_DUMMY /;"	d
SDL_HAPTIC_FRICTION	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_FRICTION /;"	d
SDL_HAPTIC_GAIN	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_GAIN /;"	d
SDL_HAPTIC_INERTIA	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_INERTIA /;"	d
SDL_HAPTIC_INFINITY	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_INFINITY /;"	d
SDL_HAPTIC_IOKIT	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_HAPTIC_IOKIT /;"	d
SDL_HAPTIC_LEFTRIGHT	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_LEFTRIGHT /;"	d
SDL_HAPTIC_LINUX	/usr/include/SDL2/SDL_config.h	/^#define SDL_HAPTIC_LINUX /;"	d
SDL_HAPTIC_LINUX	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_HAPTIC_LINUX /;"	d
SDL_HAPTIC_LINUX	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_HAPTIC_LINUX /;"	d
SDL_HAPTIC_PAUSE	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_PAUSE /;"	d
SDL_HAPTIC_POLAR	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_POLAR /;"	d
SDL_HAPTIC_RAMP	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_RAMP /;"	d
SDL_HAPTIC_SAWTOOTHDOWN	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_SAWTOOTHDOWN /;"	d
SDL_HAPTIC_SAWTOOTHUP	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_SAWTOOTHUP /;"	d
SDL_HAPTIC_SINE	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_SINE /;"	d
SDL_HAPTIC_SPHERICAL	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_SPHERICAL /;"	d
SDL_HAPTIC_SPRING	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_SPRING /;"	d
SDL_HAPTIC_STATUS	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_STATUS /;"	d
SDL_HAPTIC_TRIANGLE	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_HAPTIC_TRIANGLE /;"	d
SDL_HAPTIC_XINPUT	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_HAPTIC_XINPUT /;"	d
SDL_HAPTIC_XINPUT	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_HAPTIC_XINPUT /;"	d
SDL_HAT_CENTERED	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_CENTERED /;"	d
SDL_HAT_DOWN	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_DOWN /;"	d
SDL_HAT_LEFT	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_LEFT /;"	d
SDL_HAT_LEFTDOWN	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_LEFTDOWN /;"	d
SDL_HAT_LEFTUP	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_LEFTUP /;"	d
SDL_HAT_RIGHT	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_RIGHT /;"	d
SDL_HAT_RIGHTDOWN	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_RIGHTDOWN /;"	d
SDL_HAT_RIGHTUP	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_RIGHTUP /;"	d
SDL_HAT_UP	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_HAT_UP /;"	d
SDL_HINT_ACCELEROMETER_AS_JOYSTICK	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ACCELEROMETER_AS_JOYSTICK /;"	d
SDL_HINT_ALLOW_TOPMOST	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ALLOW_TOPMOST /;"	d
SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION /;"	d
SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION /;"	d
SDL_HINT_ANDROID_BLOCK_ON_PAUSE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ANDROID_BLOCK_ON_PAUSE /;"	d
SDL_HINT_ANDROID_TRAP_BACK_BUTTON	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ANDROID_TRAP_BACK_BUTTON /;"	d
SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS /;"	d
SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION /;"	d
SDL_HINT_AUDIO_CATEGORY	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_AUDIO_CATEGORY /;"	d
SDL_HINT_AUDIO_RESAMPLING_MODE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_AUDIO_RESAMPLING_MODE /;"	d
SDL_HINT_BMP_SAVE_LEGACY_FORMAT	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_BMP_SAVE_LEGACY_FORMAT /;"	d
SDL_HINT_DEFAULT	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_DEFAULT,$/;"	e	enum:__anondd78d7120103	access:public
SDL_HINT_DISPLAY_USABLE_BOUNDS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_DISPLAY_USABLE_BOUNDS /;"	d
SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT /;"	d
SDL_HINT_ENABLE_STEAM_CONTROLLERS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ENABLE_STEAM_CONTROLLERS /;"	d
SDL_HINT_EVENT_LOGGING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_EVENT_LOGGING /;"	d
SDL_HINT_FRAMEBUFFER_ACCELERATION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_FRAMEBUFFER_ACCELERATION /;"	d
SDL_HINT_GAMECONTROLLERCONFIG	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLERCONFIG /;"	d
SDL_HINT_GAMECONTROLLERCONFIG_FILE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLERCONFIG_FILE /;"	d
SDL_HINT_GAMECONTROLLERTYPE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLERTYPE /;"	d
SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES /;"	d
SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT /;"	d
SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS /;"	d
SDL_HINT_GRAB_KEYBOARD	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_GRAB_KEYBOARD /;"	d
SDL_HINT_IDLE_TIMER_DISABLED	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_IDLE_TIMER_DISABLED /;"	d
SDL_HINT_IME_INTERNAL_EDITING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_IME_INTERNAL_EDITING /;"	d
SDL_HINT_IOS_HIDE_HOME_INDICATOR	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_IOS_HIDE_HOME_INDICATOR /;"	d
SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS /;"	d
SDL_HINT_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI /;"	d
SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE /;"	d
SDL_HINT_JOYSTICK_HIDAPI_PS4	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_PS4 /;"	d
SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE /;"	d
SDL_HINT_JOYSTICK_HIDAPI_STEAM	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_STEAM /;"	d
SDL_HINT_JOYSTICK_HIDAPI_SWITCH	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_SWITCH /;"	d
SDL_HINT_JOYSTICK_HIDAPI_XBOX	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_XBOX /;"	d
SDL_HINT_MAC_BACKGROUND_APP	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MAC_BACKGROUND_APP /;"	d
SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK /;"	d
SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS /;"	d
SDL_HINT_MOUSE_DOUBLE_CLICK_TIME	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_DOUBLE_CLICK_TIME /;"	d
SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH /;"	d
SDL_HINT_MOUSE_NORMAL_SPEED_SCALE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_NORMAL_SPEED_SCALE /;"	d
SDL_HINT_MOUSE_RELATIVE_MODE_WARP	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_RELATIVE_MODE_WARP /;"	d
SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE /;"	d
SDL_HINT_MOUSE_TOUCH_EVENTS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_MOUSE_TOUCH_EVENTS /;"	d
SDL_HINT_NORMAL	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_NORMAL,$/;"	e	enum:__anondd78d7120103	access:public
SDL_HINT_NO_SIGNAL_HANDLERS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_NO_SIGNAL_HANDLERS /;"	d
SDL_HINT_OPENGL_ES_DRIVER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_OPENGL_ES_DRIVER /;"	d
SDL_HINT_ORIENTATIONS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_ORIENTATIONS /;"	d
SDL_HINT_OVERRIDE	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_OVERRIDE$/;"	e	enum:__anondd78d7120103	access:public
SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION /;"	d
SDL_HINT_QTWAYLAND_WINDOW_FLAGS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_QTWAYLAND_WINDOW_FLAGS /;"	d
SDL_HINT_RENDER_BATCHING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_BATCHING /;"	d
SDL_HINT_RENDER_DIRECT3D11_DEBUG	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_DIRECT3D11_DEBUG /;"	d
SDL_HINT_RENDER_DIRECT3D_THREADSAFE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_DIRECT3D_THREADSAFE /;"	d
SDL_HINT_RENDER_DRIVER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_DRIVER /;"	d
SDL_HINT_RENDER_LOGICAL_SIZE_MODE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_LOGICAL_SIZE_MODE /;"	d
SDL_HINT_RENDER_OPENGL_SHADERS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_OPENGL_SHADERS /;"	d
SDL_HINT_RENDER_SCALE_QUALITY	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_SCALE_QUALITY /;"	d
SDL_HINT_RENDER_VSYNC	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RENDER_VSYNC /;"	d
SDL_HINT_RETURN_KEY_HIDES_IME	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RETURN_KEY_HIDES_IME /;"	d
SDL_HINT_RPI_VIDEO_LAYER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_RPI_VIDEO_LAYER /;"	d
SDL_HINT_THREAD_STACK_SIZE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_THREAD_STACK_SIZE /;"	d
SDL_HINT_TIMER_RESOLUTION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_TIMER_RESOLUTION /;"	d
SDL_HINT_TOUCH_MOUSE_EVENTS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_TOUCH_MOUSE_EVENTS /;"	d
SDL_HINT_TV_REMOTE_AS_JOYSTICK	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_TV_REMOTE_AS_JOYSTICK /;"	d
SDL_HINT_VIDEO_ALLOW_SCREENSAVER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_ALLOW_SCREENSAVER /;"	d
SDL_HINT_VIDEO_DOUBLE_BUFFER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_DOUBLE_BUFFER /;"	d
SDL_HINT_VIDEO_EXTERNAL_CONTEXT	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_EXTERNAL_CONTEXT /;"	d
SDL_HINT_VIDEO_HIGHDPI_DISABLED	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_HIGHDPI_DISABLED /;"	d
SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES /;"	d
SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS /;"	d
SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT /;"	d
SDL_HINT_VIDEO_WIN_D3DCOMPILER	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_WIN_D3DCOMPILER /;"	d
SDL_HINT_VIDEO_X11_FORCE_EGL	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_FORCE_EGL /;"	d
SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR /;"	d
SDL_HINT_VIDEO_X11_NET_WM_PING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_NET_WM_PING /;"	d
SDL_HINT_VIDEO_X11_WINDOW_VISUALID	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_WINDOW_VISUALID /;"	d
SDL_HINT_VIDEO_X11_XINERAMA	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XINERAMA /;"	d
SDL_HINT_VIDEO_X11_XRANDR	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XRANDR /;"	d
SDL_HINT_VIDEO_X11_XVIDMODE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XVIDMODE /;"	d
SDL_HINT_WAVE_FACT_CHUNK	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WAVE_FACT_CHUNK /;"	d
SDL_HINT_WAVE_RIFF_CHUNK_SIZE	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WAVE_RIFF_CHUNK_SIZE /;"	d
SDL_HINT_WAVE_TRUNCATION	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WAVE_TRUNCATION /;"	d
SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING /;"	d
SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP /;"	d
SDL_HINT_WINDOWS_INTRESOURCE_ICON	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOWS_INTRESOURCE_ICON /;"	d
SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL /;"	d
SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 /;"	d
SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN /;"	d
SDL_HINT_WINRT_HANDLE_BACK_BUTTON	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINRT_HANDLE_BACK_BUTTON /;"	d
SDL_HINT_WINRT_PRIVACY_POLICY_LABEL	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINRT_PRIVACY_POLICY_LABEL /;"	d
SDL_HINT_WINRT_PRIVACY_POLICY_URL	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_WINRT_PRIVACY_POLICY_URL /;"	d
SDL_HINT_XINPUT_ENABLED	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_XINPUT_ENABLED /;"	d
SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING	/usr/include/SDL2/SDL_hints.h	/^#define SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING /;"	d
SDL_HITTEST_DRAGGABLE	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_DRAGGABLE,  \/**< Region can drag entire window. *\/$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_NORMAL	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_NORMAL,  \/**< Region is normal. No special properties. *\/$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_BOTTOM	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOM,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_BOTTOMLEFT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOMLEFT,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_BOTTOMRIGHT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOMRIGHT,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_LEFT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_LEFT$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_RIGHT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_RIGHT,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_TOP	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_TOP,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_TOPLEFT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_TOPLEFT,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_HITTEST_RESIZE_TOPRIGHT	/usr/include/SDL2/SDL_video.h	/^    SDL_HITTEST_RESIZE_TOPRIGHT,$/;"	e	enum:__anon126ae9e30b03	access:public
SDL_Haptic	/usr/include/SDL2/SDL_haptic.h	/^typedef struct _SDL_Haptic SDL_Haptic;$/;"	t	typeref:struct:_SDL_Haptic
SDL_HapticClose	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticClose(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticCondition	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticCondition$/;"	s
SDL_HapticCondition	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticCondition;$/;"	t	typeref:struct:SDL_HapticCondition
SDL_HapticCondition::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::center	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::deadband	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone; max 0xFFFF: whole axis-range when 0-cen/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticCondition::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::left_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::left_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side; max 0xFFFF. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint32	access:public
SDL_HapticCondition::right_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::right_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side; max 0xFFFF. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticConstant	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticConstant$/;"	s
SDL_HapticConstant	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticConstant;$/;"	t	typeref:struct:SDL_HapticConstant
SDL_HapticConstant::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticConstant::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint32	access:public
SDL_HapticConstant::level	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Sint16	access:public
SDL_HapticConstant::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticCustom	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticCustom$/;"	s
SDL_HapticCustom	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticCustom;$/;"	t	typeref:struct:SDL_HapticCustom
SDL_HapticCustom::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::channels	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint8	access:public
SDL_HapticCustom::data	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16 *	access:public
SDL_HapticCustom::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticCustom::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint32	access:public
SDL_HapticCustom::period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::samples	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticDestroyEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticDestroyEffect(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticDirection	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticDirection$/;"	s
SDL_HapticDirection	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticDirection;$/;"	t	typeref:struct:SDL_HapticDirection
SDL_HapticDirection::dir	/usr/include/SDL2/SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	m	struct:SDL_HapticDirection	typeref:typename:Sint32[3]	access:public
SDL_HapticDirection::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	m	struct:SDL_HapticDirection	typeref:typename:Uint8	access:public
SDL_HapticEffect	/usr/include/SDL2/SDL_haptic.h	/^typedef union SDL_HapticEffect$/;"	u
SDL_HapticEffect	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticEffect;$/;"	t	typeref:union:SDL_HapticEffect
SDL_HapticEffect::condition	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCondition	access:public
SDL_HapticEffect::constant	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticConstant	access:public
SDL_HapticEffect::custom	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCustom	access:public
SDL_HapticEffect::leftright	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticLeftRight	access:public
SDL_HapticEffect::periodic	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticPeriodic	access:public
SDL_HapticEffect::ramp	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticRamp	access:public
SDL_HapticEffect::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:Uint16	access:public
SDL_HapticEffectSupported	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticEffectSupported(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,SDL_HapticEffect * effect)
SDL_HapticGetEffectStatus	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticIndex	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticIndex(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticLeftRight	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticLeftRight$/;"	s
SDL_HapticLeftRight	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticLeftRight;$/;"	t	typeref:struct:SDL_HapticLeftRight
SDL_HapticLeftRight::large_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticLeftRight::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect in milliseconds. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint32	access:public
SDL_HapticLeftRight::small_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticLeftRight::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticName	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC const char *SDLCALL SDL_HapticName(int device_index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_HapticNewEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNewEffect(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,SDL_HapticEffect * effect)
SDL_HapticNumAxes	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumAxes(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffects	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffects(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffectsPlaying	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticOpen	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpen(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(int device_index)
SDL_HapticOpenFromJoystick	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromJoystick(SDL_Joystick *$/;"	p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(SDL_Joystick * joystick)
SDL_HapticOpenFromMouse	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromMouse(void);$/;"	p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(void)
SDL_HapticOpened	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticOpened(int device_index);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_HapticPause	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticPause(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticPeriodic	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticPeriodic$/;"	s
SDL_HapticPeriodic	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticPeriodic;$/;"	t	typeref:struct:SDL_HapticPeriodic
SDL_HapticPeriodic::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticPeriodic::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint32	access:public
SDL_HapticPeriodic::magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value; if negative, equivalent to 180 degrees extra phase shi/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
SDL_HapticPeriodic::offset	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
SDL_HapticPeriodic::period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::phase	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 phase;       \/**< Positive phase shift given by hundredth of a degree. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticQuery	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC unsigned int SDLCALL SDL_HapticQuery(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC unsigned int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRamp	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticRamp$/;"	s
SDL_HapticRamp	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticRamp;$/;"	t	typeref:struct:SDL_HapticRamp
SDL_HapticRamp::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticRamp::end	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
SDL_HapticRamp::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint32	access:public
SDL_HapticRamp::start	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
SDL_HapticRamp::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRumbleInit	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleInit(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRumblePlay	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 len/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,float strength,Uint32 length)
SDL_HapticRumbleStop	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleStop(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRumbleSupported	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleSupported(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRunEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRunEffect(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect,Uint32 iterations)
SDL_HapticSetAutocenter	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetAutocenter(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int autocenter)
SDL_HapticSetGain	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetGain(SDL_Haptic * haptic, int gain);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int gain)
SDL_HapticStopAll	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopAll(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticStopEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopEffect(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticUnpause	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUnpause(SDL_Haptic * haptic);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticUpdateEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect,SDL_HapticEffect * data)
SDL_Has3DNow	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Has3DNow(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasARMSIMD	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasARMSIMD(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX2	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX2(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX512F	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX512F(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAltiVec	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAltiVec(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasClipboardText(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasColorKey	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasColorKey(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Surface * surface)
SDL_HasEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvent(Uint32 type);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 type)
SDL_HasEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvents(Uint32 minType, Uint32 maxType);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 minType,Uint32 maxType)
SDL_HasExactlyOneBitSet32	/usr/include/SDL2/SDL_bits.h	/^SDL_HasExactlyOneBitSet32(Uint32 x)$/;"	f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(Uint32 x)
SDL_HasIntersection	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasIntersection(const SDL_Rect * A,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B)
SDL_HasMMX	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasMMX(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasNEON	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasNEON(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasRDTSC	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasRDTSC(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE2	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE2(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE3	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE3(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE41	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE41(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE42	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE42(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasScreenKeyboardSupport	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasScreenKeyboardSupport(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HideWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_HideWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_HintCallback	/usr/include/SDL2/SDL_hints.h	/^typedef void (SDLCALL *SDL_HintCallback)(void *userdata, const char *name, const char *oldValue,/;"	t	typeref:typename:void (SDLCALL *)(void * userdata,const char * name,const char * oldValue,const char * newValue)
SDL_HintPriority	/usr/include/SDL2/SDL_hints.h	/^} SDL_HintPriority;$/;"	t	typeref:enum:__anondd78d7120103
SDL_HitTest	/usr/include/SDL2/SDL_video.h	/^typedef SDL_HitTestResult (SDLCALL *SDL_HitTest)(SDL_Window *win,$/;"	t	typeref:typename:SDL_HitTestResult (SDLCALL *)(SDL_Window * win,const SDL_Point * area,void * data)
SDL_HitTestResult	/usr/include/SDL2/SDL_video.h	/^} SDL_HitTestResult;$/;"	t	typeref:enum:__anon126ae9e30b03
SDL_ICONV_E2BIG	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_ICONV_E2BIG /;"	d
SDL_ICONV_EILSEQ	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_ICONV_EILSEQ /;"	d
SDL_ICONV_EINVAL	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_ICONV_EINVAL /;"	d
SDL_ICONV_ERROR	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_ICONV_ERROR /;"	d
SDL_IGNORE	/usr/include/SDL2/SDL_events.h	/^#define SDL_IGNORE /;"	d
SDL_INIT_AUDIO	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_AUDIO /;"	d
SDL_INIT_EVENTS	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_EVENTS /;"	d
SDL_INIT_EVERYTHING	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_EVERYTHING /;"	d
SDL_INIT_GAMECONTROLLER	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_GAMECONTROLLER /;"	d
SDL_INIT_HAPTIC	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_HAPTIC /;"	d
SDL_INIT_JOYSTICK	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_JOYSTICK /;"	d
SDL_INIT_NOPARACHUTE	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_NOPARACHUTE /;"	d
SDL_INIT_SENSOR	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_SENSOR /;"	d
SDL_INIT_TIMER	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_TIMER /;"	d
SDL_INIT_VIDEO	/usr/include/SDL2/SDL.h	/^#define SDL_INIT_VIDEO /;"	d
SDL_INLINE	/usr/include/SDL2/begin_code.h	/^#define SDL_INLINE /;"	d
SDL_INOUT_Z_CAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_INOUT_Z_CAP(/;"	d	signature:(x)
SDL_INPUT_LINUXEV	/usr/include/SDL2/SDL_config.h	/^#define SDL_INPUT_LINUXEV /;"	d
SDL_INPUT_LINUXEV	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_INPUT_LINUXEV /;"	d
SDL_INPUT_LINUXEV	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_INPUT_LINUXEV /;"	d
SDL_INPUT_LINUXKD	/usr/include/SDL2/SDL_config.h	/^#define SDL_INPUT_LINUXKD /;"	d
SDL_INPUT_TSLIB	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_INPUT_TSLIB /;"	d
SDL_INPUT_TSLIB	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_INPUT_TSLIB /;"	d
SDL_INVALID_SHAPE_ARGUMENT	/usr/include/SDL2/SDL_shape.h	/^#define SDL_INVALID_SHAPE_ARGUMENT /;"	d
SDL_IN_BYTECAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_IN_BYTECAP(/;"	d	signature:(x)
SDL_IPHONE_KEYBOARD	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_IPHONE_KEYBOARD /;"	d
SDL_IPHONE_LAUNCHSCREEN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_IPHONE_LAUNCHSCREEN /;"	d
SDL_IPHONE_MAX_GFORCE	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_IPHONE_MAX_GFORCE /;"	d
SDL_ISPIXELFORMAT_ALPHA	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_ALPHA(/;"	d	signature:(format)
SDL_ISPIXELFORMAT_ARRAY	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_ARRAY(/;"	d	signature:(format)
SDL_ISPIXELFORMAT_FOURCC	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_FOURCC(/;"	d	signature:(format)
SDL_ISPIXELFORMAT_INDEXED	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_INDEXED(/;"	d	signature:(format)
SDL_ISPIXELFORMAT_PACKED	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_PACKED(/;"	d	signature:(format)
SDL_Init	/usr/include/SDL2/SDL.h	/^extern DECLSPEC int SDLCALL SDL_Init(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_InitSubSystem	/usr/include/SDL2/SDL.h	/^extern DECLSPEC int SDLCALL SDL_InitSubSystem(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_IntersectRect	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRect(const SDL_Rect * A,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B,SDL_Rect * result)
SDL_IntersectRectAndLine	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRectAndLine(const SDL_Rect *$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * rect,int * X1,int * Y1,int * X2,int * Y2)
SDL_InvalidParamError	/usr/include/SDL2/SDL_error.h	/^#define SDL_InvalidParamError(/;"	d	signature:(param)
SDL_IsAndroidTV	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsAndroidTV(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsChromebook	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsChromebook(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsDeXMode	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsDeXMode(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsGameController	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsGameController(int joystick_index);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(int joystick_index)
SDL_IsScreenKeyboardShown	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenKeyboardShown(SDL_Window *window);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window)
SDL_IsScreenSaverEnabled	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenSaverEnabled(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsShapedWindow	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsShapedWindow(const SDL_Window *window);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Window * window)
SDL_IsTablet	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsTablet(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsTextInputActive	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsTextInputActive(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_JOYAXISMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYAXISMOTION  = 0x600, \/**< Joystick axis motion *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYBALLMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBALLMOTION,          \/**< Joystick trackball motion *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBUTTONDOWN,          \/**< Joystick button pressed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBUTTONUP,            \/**< Joystick button released *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYDEVICEADDED	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYDEVICEADDED,         \/**< A new joystick has been inserted into the system *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYDEVICEREMOVED	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYDEVICEREMOVED,       \/**< An opened joystick has been removed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYHATMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYHATMOTION,           \/**< Joystick hat position change *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_JOYSTICK_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_JOYSTICK_ANDROID /;"	d
SDL_JOYSTICK_AXIS_MAX	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_JOYSTICK_AXIS_MAX /;"	d
SDL_JOYSTICK_AXIS_MIN	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_JOYSTICK_AXIS_MIN /;"	d
SDL_JOYSTICK_DINPUT	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_JOYSTICK_DINPUT /;"	d
SDL_JOYSTICK_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_JOYSTICK_DISABLED /;"	d
SDL_JOYSTICK_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_JOYSTICK_DISABLED /;"	d
SDL_JOYSTICK_DISABLED	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_JOYSTICK_DISABLED /;"	d
SDL_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_config.h	/^#define SDL_JOYSTICK_HIDAPI /;"	d
SDL_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_JOYSTICK_HIDAPI /;"	d
SDL_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_JOYSTICK_HIDAPI /;"	d
SDL_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_JOYSTICK_HIDAPI /;"	d
SDL_JOYSTICK_HIDAPI	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_JOYSTICK_HIDAPI /;"	d
SDL_JOYSTICK_IOKIT	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_JOYSTICK_IOKIT /;"	d
SDL_JOYSTICK_LINUX	/usr/include/SDL2/SDL_config.h	/^#define SDL_JOYSTICK_LINUX /;"	d
SDL_JOYSTICK_LINUX	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_JOYSTICK_LINUX /;"	d
SDL_JOYSTICK_LINUX	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_JOYSTICK_LINUX /;"	d
SDL_JOYSTICK_MFI	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_JOYSTICK_MFI /;"	d
SDL_JOYSTICK_POWER_EMPTY	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_EMPTY,   \/* <= 5% *\/$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_FULL	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_FULL,    \/* <= 100% *\/$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_LOW	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_LOW,     \/* <= 20% *\/$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_MAX	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_MAX$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_MEDIUM	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_MEDIUM,  \/* <= 70% *\/$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_UNKNOWN	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_UNKNOWN = -1,$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_POWER_WIRED	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_POWER_WIRED,$/;"	e	enum:__anona3c0e4fc0303	access:public
SDL_JOYSTICK_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_JOYSTICK_PSP /;"	d
SDL_JOYSTICK_TYPE_ARCADE_PAD	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_ARCADE_PAD,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_ARCADE_STICK	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_ARCADE_STICK,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_DANCE_PAD	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_DANCE_PAD,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_DRUM_KIT	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_DRUM_KIT,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_FLIGHT_STICK	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_FLIGHT_STICK,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_GAMECONTROLLER	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_GAMECONTROLLER,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_GUITAR	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_GUITAR,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_THROTTLE	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_THROTTLE$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_UNKNOWN	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_UNKNOWN,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_TYPE_WHEEL	/usr/include/SDL2/SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_WHEEL,$/;"	e	enum:__anona3c0e4fc0203	access:public
SDL_JOYSTICK_XINPUT	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_JOYSTICK_XINPUT /;"	d
SDL_JOYSTICK_XINPUT	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_JOYSTICK_XINPUT /;"	d
SDL_JoyAxisEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyAxisEvent$/;"	s
SDL_JoyAxisEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyAxisEvent;$/;"	t	typeref:struct:SDL_JoyAxisEvent
SDL_JoyAxisEvent::axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint16	access:public
SDL_JoyAxisEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
SDL_JoyAxisEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
SDL_JoyAxisEvent::value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
SDL_JoyAxisEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyBallEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyBallEvent$/;"	s
SDL_JoyBallEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyBallEvent;$/;"	t	typeref:struct:SDL_JoyBallEvent
SDL_JoyBallEvent::ball	/usr/include/SDL2/SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
SDL_JoyBallEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
SDL_JoyBallEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyBallEvent::xrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyBallEvent::yrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyButtonEvent$/;"	s
SDL_JoyButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyButtonEvent;$/;"	t	typeref:struct:SDL_JoyButtonEvent
SDL_JoyButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
SDL_JoyButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
SDL_JoyButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyDeviceEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyDeviceEvent$/;"	s
SDL_JoyDeviceEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyDeviceEvent;$/;"	t	typeref:struct:SDL_JoyDeviceEvent
SDL_JoyDeviceEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
SDL_JoyDeviceEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
SDL_JoyDeviceEvent::which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Sint32	access:public
SDL_JoyHatEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyHatEvent$/;"	s
SDL_JoyHatEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyHatEvent;$/;"	t	typeref:struct:SDL_JoyHatEvent
SDL_JoyHatEvent::hat	/usr/include/SDL2/SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
SDL_JoyHatEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
SDL_JoyHatEvent::value	/usr/include/SDL2/SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:SDL_JoystickID	access:public
SDL_Joystick	/usr/include/SDL2/SDL_joystick.h	/^typedef struct _SDL_Joystick SDL_Joystick;$/;"	t	typeref:struct:_SDL_Joystick
SDL_JoystickClose	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickClose(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickCurrentPowerLevel	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickPowerLevel SDLCALL SDL_JoystickCurrentPowerLevel(SDL_Joystick * joys/;"	p	typeref:typename:DECLSPEC SDL_JoystickPowerLevel SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickEventState	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickEventState(int state);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int state)
SDL_JoystickFromInstanceID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickFromInstanceID(SDL_JoystickID instance_id);$/;"	p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(SDL_JoystickID instance_id)
SDL_JoystickFromPlayerIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickFromPlayerIndex(int player_index);$/;"	p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(int player_index)
SDL_JoystickGUID	/usr/include/SDL2/SDL_joystick.h	/^} SDL_JoystickGUID;$/;"	t	typeref:struct:__anona3c0e4fc0108
SDL_JoystickGetAttached	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAttached(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetAxis	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Sint16 SDLCALL SDL_JoystickGetAxis(SDL_Joystick * joystick,$/;"	p	typeref:typename:DECLSPEC Sint16 SDLCALL	signature:(SDL_Joystick * joystick,int axis)
SDL_JoystickGetAxisInitialState	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAxisInitialState(SDL_Joystick * joystick,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Joystick * joystick,int axis,Sint16 * state)
SDL_JoystickGetBall	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetBall(SDL_Joystick * joystick,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick,int ball,int * dx,int * dy)
SDL_JoystickGetButton	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetButton(SDL_Joystick * joystick,$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int button)
SDL_JoystickGetDeviceGUID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetDeviceGUID(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceInstanceID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickGetDeviceInstanceID(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickID SDLCALL	signature:(int device_index)
SDL_JoystickGetDevicePlayerIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetDevicePlayerIndex(int device_index);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceProduct	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProduct(int device_index);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceProductVersion	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProductVersion(int device_index);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceType	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetDeviceType(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickType SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceVendor	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceVendor(int device_index);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetGUID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetGUIDFromString	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUIDFromString(const char *pchGUID);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(const char * pchGUID)
SDL_JoystickGetGUIDString	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, char *pszGUID, int/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_JoystickGUID guid,char * pszGUID,int cbGUID)
SDL_JoystickGetHat	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetHat(SDL_Joystick * joystick,$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int hat)
SDL_JoystickGetPlayerIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetPlayerIndex(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetProduct	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProduct(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetProductVersion	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProductVersion(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetType	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetType(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickType SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetVendor	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetVendor(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickID	/usr/include/SDL2/SDL_joystick.h	/^typedef Sint32 SDL_JoystickID;$/;"	t	typeref:typename:Sint32
SDL_JoystickInstanceID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickInstanceID(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC SDL_JoystickID SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickIsHaptic	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_JoystickIsHaptic(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickName	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickName(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNameForIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickNameForIndex(int device_index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_JoystickNumAxes	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumAxes(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumBalls	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumBalls(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumButtons	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumButtons(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumHats	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumHats(SDL_Joystick * joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickOpen	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickOpen(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(int device_index)
SDL_JoystickPowerLevel	/usr/include/SDL2/SDL_joystick.h	/^} SDL_JoystickPowerLevel;$/;"	t	typeref:enum:__anona3c0e4fc0303
SDL_JoystickRumble	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickRumble(SDL_Joystick * joystick, Uint16 low_frequency_rum/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick,Uint16 low_frequency_rumble,Uint16 high_frequency_rumble,Uint32 duration_ms)
SDL_JoystickSetPlayerIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickSetPlayerIndex(SDL_Joystick * joystick, int player_inde/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Joystick * joystick,int player_index)
SDL_JoystickType	/usr/include/SDL2/SDL_joystick.h	/^} SDL_JoystickType;$/;"	t	typeref:enum:__anona3c0e4fc0203
SDL_JoystickUpdate	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickUpdate(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_KEYDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_KEYDOWN        = 0x300, \/**< Key pressed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_KEYMAPCHANGED	/usr/include/SDL2/SDL_events.h	/^    SDL_KEYMAPCHANGED,          \/**< Keymap changed due to a system event such as an$/;"	e	enum:__anon9b19faa10103	access:public
SDL_KEYUP	/usr/include/SDL2/SDL_events.h	/^    SDL_KEYUP,                  \/**< Key released *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_KeyCode	/usr/include/SDL2/SDL_keycode.h	/^} SDL_KeyCode;$/;"	t	typeref:enum:__anonf26700b00103
SDL_KeyboardEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_KeyboardEvent$/;"	s
SDL_KeyboardEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_KeyboardEvent;$/;"	t	typeref:struct:SDL_KeyboardEvent
SDL_KeyboardEvent::keysym	/usr/include/SDL2/SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:SDL_Keysym	access:public
SDL_KeyboardEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::repeat	/usr/include/SDL2/SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_KeyboardEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_KeyboardEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_Keycode	/usr/include/SDL2/SDL_keycode.h	/^typedef Sint32 SDL_Keycode;$/;"	t	typeref:typename:Sint32
SDL_Keymod	/usr/include/SDL2/SDL_keycode.h	/^} SDL_Keymod;$/;"	t	typeref:enum:__anonf26700b00203
SDL_Keysym	/usr/include/SDL2/SDL_keyboard.h	/^typedef struct SDL_Keysym$/;"	s
SDL_Keysym	/usr/include/SDL2/SDL_keyboard.h	/^} SDL_Keysym;$/;"	t	typeref:struct:SDL_Keysym
SDL_Keysym::mod	/usr/include/SDL2/SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	m	struct:SDL_Keysym	typeref:typename:Uint16	access:public
SDL_Keysym::scancode	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	m	struct:SDL_Keysym	typeref:typename:SDL_Scancode	access:public
SDL_Keysym::sym	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	m	struct:SDL_Keysym	typeref:typename:SDL_Keycode	access:public
SDL_Keysym::unused	/usr/include/SDL2/SDL_keyboard.h	/^    Uint32 unused;$/;"	m	struct:SDL_Keysym	typeref:typename:Uint32	access:public
SDL_LASTERROR	/usr/include/SDL2/SDL_error.h	/^    SDL_LASTERROR$/;"	e	enum:__anon0bce2e560103	access:public
SDL_LASTEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_LASTEVENT    = 0xFFFF$/;"	e	enum:__anon9b19faa10103	access:public
SDL_LIBSAMPLERATE_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_LIBSAMPLERATE_DYNAMIC /;"	d
SDL_LIBUSB_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_LIBUSB_DYNAMIC /;"	d
SDL_LIL_ENDIAN	/usr/include/SDL2/SDL_endian.h	/^#define SDL_LIL_ENDIAN /;"	d
SDL_LINE	/usr/include/SDL2/SDL_assert.h	/^#define SDL_LINE /;"	d
SDL_LOADSO_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_LOADSO_DISABLED /;"	d
SDL_LOADSO_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_LOADSO_DISABLED /;"	d
SDL_LOADSO_DISABLED	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_LOADSO_DISABLED /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOADSO_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_LOADSO_WINDOWS /;"	d
SDL_LOADSO_WINDOWS	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_LOADSO_WINDOWS /;"	d
SDL_LOG_CATEGORY_APPLICATION	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_APPLICATION,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_ASSERT	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_ASSERT,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_AUDIO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_AUDIO,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_CUSTOM	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_CUSTOM$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_ERROR	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_ERROR,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_INPUT	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_INPUT,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RENDER	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RENDER,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED1	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED1,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED10	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED10,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED2	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED2,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED3	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED3,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED4	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED4,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED5	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED5,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED6	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED6,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED7	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED7,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED8	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED8,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_RESERVED9	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED9,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_SYSTEM	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_SYSTEM,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_TEST	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_TEST,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_CATEGORY_VIDEO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_VIDEO,$/;"	e	enum:__anonf2a0f72e0103	access:public
SDL_LOG_PRIORITY_CRITICAL	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_CRITICAL,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LOG_PRIORITY_DEBUG	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_DEBUG,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LOG_PRIORITY_ERROR	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_ERROR,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LOG_PRIORITY_INFO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_INFO,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LOG_PRIORITY_VERBOSE	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_VERBOSE = 1,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LOG_PRIORITY_WARN	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_WARN,$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_LinuxSetThreadPriority	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_LinuxSetThreadPriority(Sint64 threadID, int priority);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Sint64 threadID,int priority)
SDL_LoadBMP	/usr/include/SDL2/SDL_surface.h	/^#define SDL_LoadBMP(/;"	d	signature:(file)
SDL_LoadBMP_RW	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_LoadBMP_RW(SDL_RWops * src,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc)
SDL_LoadDollarTemplates	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchId,SDL_RWops * src)
SDL_LoadFile	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFile(const char *file, size_t *datasize);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * file,size_t * datasize)
SDL_LoadFile_RW	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFile_RW(SDL_RWops * src, size_t *datasize,$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_RWops * src,size_t * datasize,int freesrc)
SDL_LoadFunction	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFunction(void *handle,$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * handle,const char * name)
SDL_LoadObject	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadObject(const char *sofile);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * sofile)
SDL_LoadWAV	/usr/include/SDL2/SDL_audio.h	/^#define SDL_LoadWAV(/;"	d	signature:(file,spec,audio_buf,audio_len)
SDL_LoadWAV_RW	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioSpec *SDLCALL SDL_LoadWAV_RW(SDL_RWops * src,$/;"	p	typeref:typename:DECLSPEC SDL_AudioSpec * SDLCALL	signature:(SDL_RWops * src,int freesrc,SDL_AudioSpec * spec,Uint8 ** audio_buf,Uint32 * audio_len)
SDL_LockAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LockAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudioDevice(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_LockJoysticks	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_LockJoysticks(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_LockMutex(SDL_mutex * mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_LockSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LockSurface(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface)
SDL_LockTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_LockTexture(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,void ** pixels,int * pitch)
SDL_LockTextureToSurface	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_LockTextureToSurface(SDL_Texture *texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,SDL_Surface ** surface)
SDL_Log	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_Log(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_V/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogCategory	/usr/include/SDL2/SDL_log.h	/^} SDL_LogCategory;$/;"	t	typeref:enum:__anonf2a0f72e0103
SDL_LogCritical	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogCritical(int category, SDL_PRINTF_FORMAT_STRING const char */;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogDebug	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogDebug(int category, SDL_PRINTF_FORMAT_STRING const char *fmt/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogError	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogError(int category, SDL_PRINTF_FORMAT_STRING const char *fmt/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogGetOutputFunction	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogGetOutputFunction(SDL_LogOutputFunction *callback, void **us/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogOutputFunction * callback,void ** userdata)
SDL_LogGetPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC SDL_LogPriority SDLCALL SDL_LogGetPriority(int category);$/;"	p	typeref:typename:DECLSPEC SDL_LogPriority SDLCALL	signature:(int category)
SDL_LogInfo	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogInfo(int category, SDL_PRINTF_FORMAT_STRING const char *fmt,/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogMessage	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessage(int category,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogMessageV	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessageV(int category,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority,const char * fmt,va_list ap)
SDL_LogOutputFunction	/usr/include/SDL2/SDL_log.h	/^typedef void (SDLCALL *SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority prio/;"	t	typeref:typename:void (SDLCALL *)(void * userdata,int category,SDL_LogPriority priority,const char * message)
SDL_LogPriority	/usr/include/SDL2/SDL_log.h	/^} SDL_LogPriority;$/;"	t	typeref:enum:__anonf2a0f72e0203
SDL_LogResetPriorities	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogResetPriorities(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LogSetAllPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetAllPriority(SDL_LogPriority priority);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogPriority priority)
SDL_LogSetOutputFunction	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetOutputFunction(SDL_LogOutputFunction callback, void *user/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogOutputFunction callback,void * userdata)
SDL_LogSetPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetPriority(int category,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority)
SDL_LogVerbose	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogVerbose(int category, SDL_PRINTF_FORMAT_STRING const char *f/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogWarn	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogWarn(int category, SDL_PRINTF_FORMAT_STRING const char *fmt,/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LowerBlit	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlit$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_LowerBlitScaled	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlitScaled$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_MAIN_AVAILABLE	/usr/include/SDL2/SDL_main.h	/^#define SDL_MAIN_AVAILABLE$/;"	d
SDL_MAIN_NEEDED	/usr/include/SDL2/SDL_main.h	/^#define SDL_MAIN_NEEDED$/;"	d
SDL_MAJOR_VERSION	/usr/include/SDL2/SDL_version.h	/^#define SDL_MAJOR_VERSION /;"	d
SDL_MAX_LOG_MESSAGE	/usr/include/SDL2/SDL_log.h	/^#define SDL_MAX_LOG_MESSAGE /;"	d
SDL_MAX_SINT16	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_SINT16 /;"	d
SDL_MAX_SINT32	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_SINT32 /;"	d
SDL_MAX_SINT64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_SINT64 /;"	d
SDL_MAX_SINT8	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_SINT8 /;"	d
SDL_MAX_UINT16	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_UINT16 /;"	d
SDL_MAX_UINT32	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_UINT32 /;"	d
SDL_MAX_UINT64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_UINT64 /;"	d
SDL_MAX_UINT8	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MAX_UINT8 /;"	d
SDL_MEMORY_BARRIER_USES_FUNCTION	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_MEMORY_BARRIER_USES_FUNCTION$/;"	d
SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT = 0x00000080,   \/**< buttons placed left to right *\/$/;"	e	enum:__anonbdddce5a0103	access:public
SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT = 0x00000100    \/**< buttons placed right to left *\/$/;"	e	enum:__anonbdddce5a0103	access:public
SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002   \/**< Marks the default button when e/;"	e	enum:__anonbdddce5a0203	access:public
SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001,  \/**< Marks the default button when r/;"	e	enum:__anonbdddce5a0203	access:public
SDL_MESSAGEBOX_COLOR_BACKGROUND	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BACKGROUND,$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND,$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_BORDER	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BORDER,$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED,$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_COLOR_MAX	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_MAX$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_COLOR_TEXT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_TEXT,$/;"	e	enum:__anonbdddce5a0503	access:public
SDL_MESSAGEBOX_ERROR	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_ERROR                 = 0x00000010,   \/**< error dialog *\/$/;"	e	enum:__anonbdddce5a0103	access:public
SDL_MESSAGEBOX_INFORMATION	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_INFORMATION           = 0x00000040,   \/**< informational dialog *\/$/;"	e	enum:__anonbdddce5a0103	access:public
SDL_MESSAGEBOX_WARNING	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_WARNING               = 0x00000020,   \/**< warning dialog *\/$/;"	e	enum:__anonbdddce5a0103	access:public
SDL_MINOR_VERSION	/usr/include/SDL2/SDL_version.h	/^#define SDL_MINOR_VERSION /;"	d
SDL_MIN_SINT16	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_SINT16 /;"	d
SDL_MIN_SINT32	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_SINT32 /;"	d
SDL_MIN_SINT64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_SINT64 /;"	d
SDL_MIN_SINT8	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_SINT8 /;"	d
SDL_MIN_UINT16	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_UINT16 /;"	d
SDL_MIN_UINT32	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_UINT32 /;"	d
SDL_MIN_UINT64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_UINT64 /;"	d
SDL_MIN_UINT8	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_MIN_UINT8 /;"	d
SDL_MIXER_COMPILEDVERSION	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_COMPILEDVERSION /;"	d
SDL_MIXER_H_	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_H_$/;"	d
SDL_MIXER_MAJOR_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_MAJOR_VERSION /;"	d
SDL_MIXER_MINOR_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_MINOR_VERSION /;"	d
SDL_MIXER_PATCHLEVEL	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_PATCHLEVEL /;"	d
SDL_MIXER_VERSION	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_VERSION(/;"	d	signature:(X)
SDL_MIXER_VERSION_ATLEAST	/usr/include/SDL2/SDL_mixer.h	/^#define SDL_MIXER_VERSION_ATLEAST(/;"	d	signature:(X,Y,Z)
SDL_MIX_MAXVOLUME	/usr/include/SDL2/SDL_audio.h	/^#define SDL_MIX_MAXVOLUME /;"	d
SDL_MOUSEBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEBUTTONDOWN,        \/**< Mouse button pressed *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_MOUSEBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEBUTTONUP,          \/**< Mouse button released *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_MOUSEMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEMOTION    = 0x400, \/**< Mouse moved *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_MOUSEWHEEL	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEWHEEL,             \/**< Mouse wheel motion *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_MOUSEWHEEL_FLIPPED	/usr/include/SDL2/SDL_mouse.h	/^    SDL_MOUSEWHEEL_FLIPPED    \/**< The scroll direction is flipped \/ natural *\/$/;"	e	enum:__anon6cd8de350203	access:public
SDL_MOUSEWHEEL_NORMAL	/usr/include/SDL2/SDL_mouse.h	/^    SDL_MOUSEWHEEL_NORMAL,    \/**< The scroll direction is normal *\/$/;"	e	enum:__anon6cd8de350203	access:public
SDL_MOUSE_TOUCHID	/usr/include/SDL2/SDL_touch.h	/^#define SDL_MOUSE_TOUCHID /;"	d
SDL_MULTIGESTURE	/usr/include/SDL2/SDL_events.h	/^    SDL_MULTIGESTURE,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_MUSTLOCK	/usr/include/SDL2/SDL_surface.h	/^#define SDL_MUSTLOCK(/;"	d	signature:(S)
SDL_MUTEX_MAXWAIT	/usr/include/SDL2/SDL_mutex.h	/^#define SDL_MUTEX_MAXWAIT /;"	d
SDL_MUTEX_TIMEDOUT	/usr/include/SDL2/SDL_mutex.h	/^#define SDL_MUTEX_TIMEDOUT /;"	d
SDL_MapRGB	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGB(const SDL_PixelFormat * format,$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * format,Uint8 r,Uint8 g,Uint8 b)
SDL_MapRGBA	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGBA(const SDL_PixelFormat * format,$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * format,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
SDL_MasksToPixelFormatEnum	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MasksToPixelFormatEnum(int bpp,$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int bpp,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_MaximizeWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MaximizeWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_MemoryBarrierAcquire(/;"	d	signature:()
SDL_MemoryBarrierAcquireFunction	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierAcquireFunction(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_MemoryBarrierRelease(/;"	d	signature:()
SDL_MemoryBarrierReleaseFunction	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierReleaseFunction(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_MessageBoxButtonData	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxButtonData;$/;"	t	typeref:struct:__anonbdddce5a0308
SDL_MessageBoxButtonFlags	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxButtonFlags;$/;"	t	typeref:enum:__anonbdddce5a0203
SDL_MessageBoxColor	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColor;$/;"	t	typeref:struct:__anonbdddce5a0408
SDL_MessageBoxColorScheme	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColorScheme;$/;"	t	typeref:struct:__anonbdddce5a0608
SDL_MessageBoxColorType	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColorType;$/;"	t	typeref:enum:__anonbdddce5a0503
SDL_MessageBoxData	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxData;$/;"	t	typeref:struct:__anonbdddce5a0708
SDL_MessageBoxFlags	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxFlags;$/;"	t	typeref:enum:__anonbdddce5a0103
SDL_MetalView	/usr/include/SDL2/SDL_metal.h	/^typedef void *SDL_MetalView;$/;"	t	typeref:typename:void *
SDL_Metal_CreateView	/usr/include/SDL2/SDL_metal.h	/^extern DECLSPEC SDL_MetalView SDLCALL SDL_Metal_CreateView(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC SDL_MetalView SDLCALL	signature:(SDL_Window * window)
SDL_Metal_DestroyView	/usr/include/SDL2/SDL_metal.h	/^extern DECLSPEC void SDLCALL SDL_Metal_DestroyView(SDL_MetalView view);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_MetalView view)
SDL_MinimizeWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MinimizeWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_MixAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudio(Uint8 * dst, const Uint8 * src,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * dst,const Uint8 * src,Uint32 len,int volume)
SDL_MixAudioFormat	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudioFormat(Uint8 * dst,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * dst,const Uint8 * src,SDL_AudioFormat format,Uint32 len,int volume)
SDL_MostSignificantBitIndex32	/usr/include/SDL2/SDL_bits.h	/^SDL_MostSignificantBitIndex32(Uint32 x)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(Uint32 x)
SDL_MouseButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseButtonEvent$/;"	s
SDL_MouseButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseButtonEvent;$/;"	t	typeref:struct:SDL_MouseButtonEvent
SDL_MouseButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::clicks	/usr/include/SDL2/SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
SDL_MouseButtonEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
SDL_MouseIsHaptic	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_MouseIsHaptic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_MouseMotionEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseMotionEvent$/;"	s
SDL_MouseMotionEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseMotionEvent;$/;"	t	typeref:struct:SDL_MouseMotionEvent
SDL_MouseMotionEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::xrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::yrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseWheelDirection	/usr/include/SDL2/SDL_mouse.h	/^} SDL_MouseWheelDirection;$/;"	t	typeref:enum:__anon6cd8de350203
SDL_MouseWheelEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseWheelEvent$/;"	s
SDL_MouseWheelEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseWheelEvent;$/;"	t	typeref:struct:SDL_MouseWheelEvent
SDL_MouseWheelEvent::direction	/usr/include/SDL2/SDL_events.h	/^    Uint32 direction;   \/**< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the value/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negati/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
SDL_MouseWheelEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and ne/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
SDL_MultiGestureEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MultiGestureEvent$/;"	s
SDL_MultiGestureEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MultiGestureEvent;$/;"	t	typeref:struct:SDL_MultiGestureEvent
SDL_MultiGestureEvent::dDist	/usr/include/SDL2/SDL_events.h	/^    float dDist;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::dTheta	/usr/include/SDL2/SDL_events.h	/^    float dTheta;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint16 numFingers;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
SDL_MultiGestureEvent::padding	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
SDL_MultiGestureEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
SDL_MultiGestureEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:SDL_TouchID	access:public
SDL_MultiGestureEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
SDL_MultiGestureEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_NAME	/usr/include/SDL2/SDL_name.h	/^#define SDL_NAME(/;"	d	signature:(X)
SDL_NET_MAJOR_VERSION	/usr/include/SDL2/SDL_net.h	/^#define SDL_NET_MAJOR_VERSION /;"	d
SDL_NET_MINOR_VERSION	/usr/include/SDL2/SDL_net.h	/^#define SDL_NET_MINOR_VERSION /;"	d
SDL_NET_PATCHLEVEL	/usr/include/SDL2/SDL_net.h	/^#define SDL_NET_PATCHLEVEL /;"	d
SDL_NET_VERSION	/usr/include/SDL2/SDL_net.h	/^#define SDL_NET_VERSION(/;"	d	signature:(X)
SDL_NONSHAPEABLE_WINDOW	/usr/include/SDL2/SDL_shape.h	/^#define SDL_NONSHAPEABLE_WINDOW /;"	d
SDL_NORETURN	/usr/include/SDL2/begin_code.h	/^#define SDL_NORETURN /;"	d
SDL_NORETURN	/usr/include/SDL2/begin_code.h	/^#define SDL_NORETURN$/;"	d
SDL_NULL_WHILE_LOOP_CONDITION	/usr/include/SDL2/SDL_assert.h	/^#define SDL_NULL_WHILE_LOOP_CONDITION /;"	d
SDL_NUM_LOG_PRIORITIES	/usr/include/SDL2/SDL_log.h	/^    SDL_NUM_LOG_PRIORITIES$/;"	e	enum:__anonf2a0f72e0203	access:public
SDL_NUM_SCANCODES	/usr/include/SDL2/SDL_scancode.h	/^    SDL_NUM_SCANCODES = 512 \/**< not a key, just marks the number of scancodes$/;"	e	enum:__anon8400e16c0103	access:public
SDL_NUM_SYSTEM_CURSORS	/usr/include/SDL2/SDL_mouse.h	/^    SDL_NUM_SYSTEM_CURSORS$/;"	e	enum:__anon6cd8de350103	access:public
SDL_NewAudioStream	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioStream * SDLCALL SDL_NewAudioStream(const SDL_AudioFormat src_format,$/;"	p	typeref:typename:DECLSPEC SDL_AudioStream * SDLCALL	signature:(const SDL_AudioFormat src_format,const Uint8 src_channels,const int src_rate,const SDL_AudioFormat dst_format,const Uint8 dst_channels,const int dst_rate)
SDL_NumHaptics	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_NumHaptics(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_NumJoysticks	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_NumJoysticks(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_NumSensors	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_NumSensors(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_ORIENTATION_LANDSCAPE	/usr/include/SDL2/SDL_video.h	/^    SDL_ORIENTATION_LANDSCAPE,          \/**< The display is in landscape mode, with the right s/;"	e	enum:__anon126ae9e30503	access:public
SDL_ORIENTATION_LANDSCAPE_FLIPPED	/usr/include/SDL2/SDL_video.h	/^    SDL_ORIENTATION_LANDSCAPE_FLIPPED,  \/**< The display is in landscape mode, with the left si/;"	e	enum:__anon126ae9e30503	access:public
SDL_ORIENTATION_PORTRAIT	/usr/include/SDL2/SDL_video.h	/^    SDL_ORIENTATION_PORTRAIT,           \/**< The display is in portrait mode *\/$/;"	e	enum:__anon126ae9e30503	access:public
SDL_ORIENTATION_PORTRAIT_FLIPPED	/usr/include/SDL2/SDL_video.h	/^    SDL_ORIENTATION_PORTRAIT_FLIPPED    \/**< The display is in portrait mode, upside down *\/$/;"	e	enum:__anon126ae9e30503	access:public
SDL_ORIENTATION_UNKNOWN	/usr/include/SDL2/SDL_video.h	/^    SDL_ORIENTATION_UNKNOWN,            \/**< The display orientation can't be determined *\/$/;"	e	enum:__anon126ae9e30503	access:public
SDL_OSEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_OSEvent$/;"	s
SDL_OSEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_OSEvent;$/;"	t	typeref:struct:SDL_OSEvent
SDL_OSEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
SDL_OSEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
SDL_OUT_BYTECAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_OUT_BYTECAP(/;"	d	signature:(x)
SDL_OUT_CAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_OUT_CAP(/;"	d	signature:(x)
SDL_OUT_Z_BYTECAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_OUT_Z_BYTECAP(/;"	d	signature:(x)
SDL_OUT_Z_CAP	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_OUT_Z_CAP(/;"	d	signature:(x)
SDL_OnApplicationDidBecomeActive	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationDidBecomeActive(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationDidChangeStatusBarOrientation	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationDidChangeStatusBarOrientation(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationDidEnterBackground	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationDidEnterBackground(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationDidReceiveMemoryWarning	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationDidReceiveMemoryWarning(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationWillEnterForeground	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationWillEnterForeground(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationWillResignActive	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationWillResignActive(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OnApplicationWillTerminate	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_OnApplicationWillTerminate(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_OpenAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_OpenAudio(SDL_AudioSpec * desired,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioSpec * desired,SDL_AudioSpec * obtained)
SDL_OpenAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioDeviceID SDLCALL SDL_OpenAudioDevice(const char$/;"	p	typeref:typename:DECLSPEC SDL_AudioDeviceID SDLCALL	signature:(const char * device,int iscapture,const SDL_AudioSpec * desired,SDL_AudioSpec * obtained,int allowed_changes)
SDL_OutOfMemory	/usr/include/SDL2/SDL_error.h	/^#define SDL_OutOfMemory(/;"	d	signature:()
SDL_PACKEDLAYOUT_1010102	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1010102$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1555,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_2101010	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_2101010,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_332	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_332,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_4444,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_5551,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_565,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_8888,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDLAYOUT_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_NONE,$/;"	e	enum:__anon04e3cee10503	access:public
SDL_PACKEDORDER_ABGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_ABGR,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_ARGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_ARGB,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_BGRA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_BGRA$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_BGRX	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_BGRX,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_NONE,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_RGBA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_RGBA,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_RGBX	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_RGBX,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_XBGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_XBGR,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PACKEDORDER_XRGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_XRGB,$/;"	e	enum:__anon04e3cee10303	access:public
SDL_PASSED_BEGINTHREAD_ENDTHREAD	/usr/include/SDL2/SDL_thread.h	/^#define SDL_PASSED_BEGINTHREAD_ENDTHREAD$/;"	d
SDL_PATCHLEVEL	/usr/include/SDL2/SDL_version.h	/^#define SDL_PATCHLEVEL /;"	d
SDL_PEEKEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_PEEKEVENT,$/;"	e	enum:__anon9b19faa10203	access:public
SDL_PIXELFLAG	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_PIXELFLAG(/;"	d	signature:(X)
SDL_PIXELFORMAT_ABGR1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR1555 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ABGR32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888,$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ABGR4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR4444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ABGR8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ARGB1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB1555 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ARGB2101010	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB2101010 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ARGB32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888,$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ARGB4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB4444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_ARGB8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGR24	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR24 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGR444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGR555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR555 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGR565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR565 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGR888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGRA32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888,$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGRA4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA4444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGRA5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA5551 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGRA8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_BGRX8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRX8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_EXTERNAL_OES	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_EXTERNAL_OES =      \/**< Android video texture format *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_INDEX1LSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1LSB =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_INDEX1MSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1MSB =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_INDEX4LSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4LSB =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_INDEX4MSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4MSB =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_INDEX8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX8 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_IYUV	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_IYUV =      \/**< Planar mode: Y + U + V  (3 planes) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_NV12	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_NV12 =      \/**< Planar mode: Y + U\/V interleaved  (2 planes) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_NV21	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_NV21 =      \/**< Planar mode: Y + V\/U interleaved  (2 planes) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB24	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB24 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB332	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB332 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB555 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB565 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGB888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGBA32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888,$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGBA4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA4444 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGBA5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA5551 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGBA8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_RGBX8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBX8888 =$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_UNKNOWN	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_UNKNOWN,$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_UYVY	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_UYVY =      \/**< Packed mode: U0+Y0+V0+Y1 (1 plane) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_YUY2	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YUY2 =      \/**< Packed mode: Y0+U0+Y1+V0 (1 plane) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_YV12	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YV12 =      \/**< Planar mode: Y + V + U  (3 planes) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELFORMAT_YVYU	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YVYU =      \/**< Packed mode: Y0+V0+Y1+U0 (1 plane) *\/$/;"	e	enum:__anon04e3cee10603	access:public
SDL_PIXELLAYOUT	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_PIXELLAYOUT(/;"	d	signature:(X)
SDL_PIXELORDER	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_PIXELORDER(/;"	d	signature:(X)
SDL_PIXELTYPE	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_PIXELTYPE(/;"	d	signature:(X)
SDL_PIXELTYPE_ARRAYF16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF16,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_ARRAYF32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF32$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_ARRAYU16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU16,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_ARRAYU32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU32,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_ARRAYU8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU8,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_INDEX1	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX1,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_INDEX4	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX4,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_INDEX8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX8,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_PACKED16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED16,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_PACKED32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED32,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_PACKED8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED8,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PIXELTYPE_UNKNOWN	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_UNKNOWN,$/;"	e	enum:__anon04e3cee10103	access:public
SDL_PLATFORM_SUPPORTS_METAL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_PLATFORM_SUPPORTS_METAL	/;"	d
SDL_PLATFORM_SUPPORTS_METAL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_PLATFORM_SUPPORTS_METAL /;"	d
SDL_POWERSTATE_CHARGED	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_CHARGED       \/**< Plugged in, battery charged *\/$/;"	e	enum:__anon53e44f790103	access:public
SDL_POWERSTATE_CHARGING	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_CHARGING,     \/**< Plugged in, charging battery *\/$/;"	e	enum:__anon53e44f790103	access:public
SDL_POWERSTATE_NO_BATTERY	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_NO_BATTERY,   \/**< Plugged in, no battery available *\/$/;"	e	enum:__anon53e44f790103	access:public
SDL_POWERSTATE_ON_BATTERY	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_ON_BATTERY,   \/**< Not plugged in, running on the battery *\/$/;"	e	enum:__anon53e44f790103	access:public
SDL_POWERSTATE_UNKNOWN	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_UNKNOWN,      \/**< cannot determine power status *\/$/;"	e	enum:__anon53e44f790103	access:public
SDL_POWER_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_POWER_ANDROID /;"	d
SDL_POWER_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_POWER_DISABLED /;"	d
SDL_POWER_LINUX	/usr/include/SDL2/SDL_config.h	/^#define SDL_POWER_LINUX /;"	d
SDL_POWER_MACOSX	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_POWER_MACOSX /;"	d
SDL_POWER_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_POWER_PSP /;"	d
SDL_POWER_UIKIT	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_POWER_UIKIT /;"	d
SDL_POWER_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_POWER_WINDOWS /;"	d
SDL_POWER_WINRT	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_POWER_WINRT /;"	d
SDL_PREALLOC	/usr/include/SDL2/SDL_surface.h	/^#define SDL_PREALLOC /;"	d
SDL_PRESSED	/usr/include/SDL2/SDL_events.h	/^#define SDL_PRESSED /;"	d
SDL_PRINTF_FORMAT_STRING	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRINTF_FORMAT_STRING /;"	d
SDL_PRINTF_FORMAT_STRING	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRINTF_FORMAT_STRING$/;"	d
SDL_PRINTF_VARARG_FUNC	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRINTF_VARARG_FUNC(/;"	d	signature:(fmtargnumber)
SDL_PRIX64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRIX64 /;"	d
SDL_PRIs64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRIs64 /;"	d
SDL_PRIu64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRIu64 /;"	d
SDL_PRIx64	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_PRIx64 /;"	d
SDL_PackedLayout	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PackedLayout;$/;"	t	typeref:enum:__anon04e3cee10503
SDL_PackedOrder	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PackedOrder;$/;"	t	typeref:enum:__anon04e3cee10303
SDL_Palette	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_Palette$/;"	s
SDL_Palette	/usr/include/SDL2/SDL_pixels.h	/^} SDL_Palette;$/;"	t	typeref:struct:SDL_Palette
SDL_Palette::colors	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Color *colors;$/;"	m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
SDL_Palette::ncolors	/usr/include/SDL2/SDL_pixels.h	/^    int ncolors;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
SDL_Palette::refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
SDL_Palette::version	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 version;$/;"	m	struct:SDL_Palette	typeref:typename:Uint32	access:public
SDL_PauseAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudio(int pause_on);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int pause_on)
SDL_PauseAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudioDevice(SDL_AudioDeviceID dev,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev,int pause_on)
SDL_PeepEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PeepEvents(SDL_Event * events, int numevents,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * events,int numevents,SDL_eventaction action,Uint32 minType,Uint32 maxType)
SDL_PixelFormat	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_PixelFormat$/;"	s
SDL_PixelFormat	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PixelFormat;$/;"	t	typeref:struct:SDL_PixelFormat
SDL_PixelFormat::Aloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Aloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Amask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Ashift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Ashift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BitsPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Bshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BytesPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Gshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Rshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::format	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 format;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::next	/usr/include/SDL2/SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat *	access:public
SDL_PixelFormat::padding	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 padding[2];$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8[2]	access:public
SDL_PixelFormat::palette	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
SDL_PixelFormat::refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_PixelFormat	typeref:typename:int	access:public
SDL_PixelFormatEnum	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PixelFormatEnum;$/;"	t	typeref:enum:__anon04e3cee10603
SDL_PixelFormatEnumToMasks	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_PixelFormatEnumToMasks(Uint32 format,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 format,int * bpp,Uint32 * Rmask,Uint32 * Gmask,Uint32 * Bmask,Uint32 * Amask)
SDL_PixelType	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PixelType;$/;"	t	typeref:enum:__anon04e3cee10103
SDL_Point	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_Point$/;"	s
SDL_Point	/usr/include/SDL2/SDL_rect.h	/^} SDL_Point;$/;"	t	typeref:struct:SDL_Point
SDL_Point::x	/usr/include/SDL2/SDL_rect.h	/^    int x;$/;"	m	struct:SDL_Point	typeref:typename:int	access:public
SDL_Point::y	/usr/include/SDL2/SDL_rect.h	/^    int y;$/;"	m	struct:SDL_Point	typeref:typename:int	access:public
SDL_PointInRect	/usr/include/SDL2/SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_PointInRect(const SDL_Point *p, const SDL_Rect *r)$/;"	f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Point * p,const SDL_Rect * r)
SDL_PollEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PollEvent(SDL_Event * event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_PowerState	/usr/include/SDL2/SDL_power.h	/^} SDL_PowerState;$/;"	t	typeref:enum:__anon53e44f790103
SDL_PumpEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_PumpEvents(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_PushEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PushEvent(SDL_Event * event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_QUERY	/usr/include/SDL2/SDL_events.h	/^#define SDL_QUERY /;"	d
SDL_QUIT	/usr/include/SDL2/SDL_events.h	/^    SDL_QUIT           = 0x100, \/**< User-requested quit *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_QueryTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_QueryTexture(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint32 * format,int * access,int * w,int * h)
SDL_QueueAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_QueueAudio(SDL_AudioDeviceID dev, const void *data, Uint32 len);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioDeviceID dev,const void * data,Uint32 len)
SDL_Quit	/usr/include/SDL2/SDL.h	/^extern DECLSPEC void SDLCALL SDL_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_QuitEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_QuitEvent$/;"	s
SDL_QuitEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_QuitEvent;$/;"	t	typeref:struct:SDL_QuitEvent
SDL_QuitEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
SDL_QuitEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
SDL_QuitRequested	/usr/include/SDL2/SDL_quit.h	/^#define SDL_QuitRequested(/;"	d	signature:()
SDL_QuitSubSystem	/usr/include/SDL2/SDL.h	/^extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 flags)
SDL_RELEASED	/usr/include/SDL2/SDL_events.h	/^#define SDL_RELEASED /;"	d
SDL_RENDERER_ACCELERATED	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_ACCELERATED = 0x00000002,      \/**< The renderer uses hardware$/;"	e	enum:__anon9214fbec0103	access:public
SDL_RENDERER_PRESENTVSYNC	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_PRESENTVSYNC = 0x00000004,     \/**< Present is synchronized$/;"	e	enum:__anon9214fbec0103	access:public
SDL_RENDERER_SOFTWARE	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_SOFTWARE = 0x00000001,         \/**< The renderer is a software fallback *\/$/;"	e	enum:__anon9214fbec0103	access:public
SDL_RENDERER_TARGETTEXTURE	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_TARGETTEXTURE = 0x00000008     \/**< The renderer supports$/;"	e	enum:__anon9214fbec0103	access:public
SDL_RENDER_DEVICE_RESET	/usr/include/SDL2/SDL_events.h	/^    SDL_RENDER_DEVICE_RESET, \/**< The device has been reset and all textures need to be recreat/;"	e	enum:__anon9b19faa10103	access:public
SDL_RENDER_TARGETS_RESET	/usr/include/SDL2/SDL_events.h	/^    SDL_RENDER_TARGETS_RESET = 0x2000, \/**< The render targets have been reset and their conten/;"	e	enum:__anon9b19faa10103	access:public
SDL_REVISION	/usr/include/SDL2/SDL_revision.h	/^#define SDL_REVISION /;"	d
SDL_REVISION_NUMBER	/usr/include/SDL2/SDL_revision.h	/^#define SDL_REVISION_NUMBER /;"	d
SDL_RLEACCEL	/usr/include/SDL2/SDL_surface.h	/^#define SDL_RLEACCEL /;"	d
SDL_RWFromConstMem	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromConstMem(const void *mem,$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const void * mem,int size)
SDL_RWFromFP	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(FILE * fp,$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(FILE * fp,SDL_bool autoclose)
SDL_RWFromFP	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(void * fp,$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void * fp,SDL_bool autoclose)
SDL_RWFromFile	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFile(const char *file,$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const char * file,const char * mode)
SDL_RWFromMem	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromMem(void *mem, int size);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void * mem,int size)
SDL_RWOPS_JNIFILE	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_JNIFILE /;"	d
SDL_RWOPS_MEMORY	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_MEMORY /;"	d
SDL_RWOPS_MEMORY_RO	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_MEMORY_RO /;"	d
SDL_RWOPS_STDFILE	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_STDFILE /;"	d
SDL_RWOPS_UNKNOWN	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_UNKNOWN /;"	d
SDL_RWOPS_WINFILE	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_RWOPS_WINFILE /;"	d
SDL_RWclose	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_RWclose(SDL_RWops *context);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * context)
SDL_RWops	/usr/include/SDL2/SDL_rwops.h	/^typedef struct SDL_RWops$/;"	s
SDL_RWops	/usr/include/SDL2/SDL_rwops.h	/^} SDL_RWops;$/;"	t	typeref:struct:SDL_RWops
SDL_RWops::SDLCALL	/usr/include/SDL2/SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDL_RWops::Sint64	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * seek)
SDL_RWops::Sint64	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * size)
SDL_RWops::__anonfff75667010a	/usr/include/SDL2/SDL_rwops.h	/^    {$/;"	u	struct:SDL_RWops	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::assetFileDescriptorRef	/usr/include/SDL2/SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::fd	/usr/include/SDL2/SDL_rwops.h	/^            int fd;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:int	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::fileNameRef	/usr/include/SDL2/SDL_rwops.h	/^            void *fileNameRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::inputStreamRef	/usr/include/SDL2/SDL_rwops.h	/^            void *inputStreamRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::offset	/usr/include/SDL2/SDL_rwops.h	/^            long offset;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::position	/usr/include/SDL2/SDL_rwops.h	/^            long position;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::readMethod	/usr/include/SDL2/SDL_rwops.h	/^            void *readMethod;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::readableByteChannelRef	/usr/include/SDL2/SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670208::size	/usr/include/SDL2/SDL_rwops.h	/^            long size;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670308	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670308::autoclose	/usr/include/SDL2/SDL_rwops.h	/^            SDL_bool autoclose;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	typeref:typename:SDL_bool	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670308::fp	/usr/include/SDL2/SDL_rwops.h	/^            FILE *fp;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	typeref:typename:FILE *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670408	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670408::base	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *base;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670408::here	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *here;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670408::stop	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *stop;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670508	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670508::data1	/usr/include/SDL2/SDL_rwops.h	/^            void *data1;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::__anonfff756670508::data2	/usr/include/SDL2/SDL_rwops.h	/^            void *data2;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	typeref:typename:void *	access:public
SDL_RWops::__anonfff75667010a::androidio	/usr/include/SDL2/SDL_rwops.h	/^        } androidio;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	access:public
SDL_RWops::__anonfff75667010a::mem	/usr/include/SDL2/SDL_rwops.h	/^        } mem;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	access:public
SDL_RWops::__anonfff75667010a::stdio	/usr/include/SDL2/SDL_rwops.h	/^        } stdio;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	access:public
SDL_RWops::__anonfff75667010a::unknown	/usr/include/SDL2/SDL_rwops.h	/^        } unknown;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	access:public
SDL_RWops::hidden	/usr/include/SDL2/SDL_rwops.h	/^    } hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anonfff75667010a	access:public
SDL_RWops::size_t	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * read)
SDL_RWops::size_t	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * write)
SDL_RWops::type	/usr/include/SDL2/SDL_rwops.h	/^    Uint32 type;$/;"	m	struct:SDL_RWops	typeref:typename:Uint32	access:public
SDL_RWread	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_RWread(SDL_RWops *context,$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * context,void * ptr,size_t size,size_t maxnum)
SDL_RWseek	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Sint64 SDLCALL SDL_RWseek(SDL_RWops *context,$/;"	p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(SDL_RWops * context,Sint64 offset,int whence)
SDL_RWsize	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Sint64 SDLCALL SDL_RWsize(SDL_RWops *context);$/;"	p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(SDL_RWops * context)
SDL_RWtell	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Sint64 SDLCALL SDL_RWtell(SDL_RWops *context);$/;"	p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(SDL_RWops * context)
SDL_RWwrite	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_RWwrite(SDL_RWops *context,$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * context,const void * ptr,size_t size,size_t num)
SDL_RaiseWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RaiseWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_ReadBE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadBE16(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadBE32(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadBE64(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadLE16(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadLE32(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadLE64(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadU8	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint8 SDLCALL SDL_ReadU8(SDL_RWops * src);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_RWops * src)
SDL_RecordGesture	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_RecordGesture(SDL_TouchID touchId);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchId)
SDL_Rect	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_Rect$/;"	s
SDL_Rect	/usr/include/SDL2/SDL_rect.h	/^} SDL_Rect;$/;"	t	typeref:struct:SDL_Rect
SDL_Rect::h	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::w	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::x	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::y	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_RectEmpty	/usr/include/SDL2/SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEmpty(const SDL_Rect *r)$/;"	f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Rect * r)
SDL_RectEquals	/usr/include/SDL2/SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEquals(const SDL_Rect *a, const SDL_Rect *b)$/;"	f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Rect * a,const SDL_Rect * b)
SDL_RegisterApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_RegisterApp(char *name, Uint32 style, void *hInst);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(char * name,Uint32 style,void * hInst)
SDL_RegisterEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC Uint32 SDLCALL SDL_RegisterEvents(int numevents);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int numevents)
SDL_RemoveTimer	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID id);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_TimerID id)
SDL_RenderClear	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderClear(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderCopy	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopy(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_Rect * dstrect)
SDL_RenderCopyEx	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopyEx(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_Rect * dstrect,const double angle,const SDL_Point * center,const SDL_RendererFlip flip)
SDL_RenderCopyExF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopyExF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_FRect * dstrect,const double angle,const SDL_FPoint * center,const SDL_RendererFlip flip)
SDL_RenderCopyF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopyF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_FRect * dstrect)
SDL_RenderDrawLine	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLine(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int x1,int y1,int x2,int y2)
SDL_RenderDrawLineF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLineF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,float x1,float y1,float x2,float y2)
SDL_RenderDrawLines	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLines(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Point * points,int count)
SDL_RenderDrawLinesF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLinesF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FPoint * points,int count)
SDL_RenderDrawPoint	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoint(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int x,int y)
SDL_RenderDrawPointF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPointF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,float x,float y)
SDL_RenderDrawPoints	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoints(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Point * points,int count)
SDL_RenderDrawPointsF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPointsF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FPoint * points,int count)
SDL_RenderDrawRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRect(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderDrawRectF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRectF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FRect * rect)
SDL_RenderDrawRects	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRects(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rects,int count)
SDL_RenderDrawRectsF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRectsF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FRect * rects,int count)
SDL_RenderFillRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRect(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderFillRectF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRectF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FRect * rect)
SDL_RenderFillRects	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRects(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rects,int count)
SDL_RenderFillRectsF	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRectsF(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_FRect * rects,int count)
SDL_RenderFlush	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFlush(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetClipRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetClipRect(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,SDL_Rect * rect)
SDL_RenderGetD3D9Device	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC IDirect3DDevice9* SDLCALL SDL_RenderGetD3D9Device(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC IDirect3DDevice9 * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetIntegerScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderGetIntegerScale(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetLogicalSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,int * w,int * h)
SDL_RenderGetMetalCommandEncoder	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void *SDLCALL SDL_RenderGetMetalCommandEncoder(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetMetalLayer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void *SDLCALL SDL_RenderGetMetalLayer(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetScale(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,float * scaleX,float * scaleY)
SDL_RenderGetViewport	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetViewport(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,SDL_Rect * rect)
SDL_RenderIsClipEnabled	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderIsClipEnabled(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderPresent	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderPresent(SDL_Renderer * renderer);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderReadPixels	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderReadPixels(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect,Uint32 format,void * pixels,int pitch)
SDL_RenderSetClipRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetClipRect(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderSetIntegerScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetIntegerScale(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_bool enable)
SDL_RenderSetLogicalSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int w,int h)
SDL_RenderSetScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetScale(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,float scaleX,float scaleY)
SDL_RenderSetViewport	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetViewport(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderTargetSupported	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderTargetSupported(SDL_Renderer *renderer);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_Renderer	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_Renderer SDL_Renderer;$/;"	t	typeref:struct:SDL_Renderer
SDL_RendererFlags	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererFlags;$/;"	t	typeref:enum:__anon9214fbec0103
SDL_RendererFlip	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererFlip;$/;"	t	typeref:enum:__anon9214fbec0503
SDL_RendererInfo	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_RendererInfo$/;"	s
SDL_RendererInfo	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererInfo;$/;"	t	typeref:struct:SDL_RendererInfo
SDL_RendererInfo::flags	/usr/include/SDL2/SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
SDL_RendererInfo::max_texture_height	/usr/include/SDL2/SDL_render.h	/^    int max_texture_height;     \/**< The maximum texture height *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:int	access:public
SDL_RendererInfo::max_texture_width	/usr/include/SDL2/SDL_render.h	/^    int max_texture_width;      \/**< The maximum texture width *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:int	access:public
SDL_RendererInfo::name	/usr/include/SDL2/SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:const char *	access:public
SDL_RendererInfo::num_texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
SDL_RendererInfo::texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32[16]	access:public
SDL_ReportAssertion	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_AssertState SDLCALL SDL_ReportAssertion(SDL_AssertData *,$/;"	p	typeref:typename:DECLSPEC SDL_AssertState SDLCALL	signature:(SDL_AssertData *,const char *,const char *,int)
SDL_ResetAssertionReport	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_ResetAssertionReport(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_RestoreWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RestoreWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_SCANCODE_0	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_0 = 39,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_1 = 30,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_2 = 31,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_3 = 32,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_4 = 33,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_5 = 34,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_6 = 35,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_7 = 36,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_8 = 37,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_9 = 38,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_A	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_A = 4,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_BACK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_BACK = 270,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_BOOKMARKS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_BOOKMARKS = 274,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_FORWARD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_FORWARD = 271,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_HOME	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_HOME = 269,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_REFRESH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_REFRESH = 273,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_SEARCH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_SEARCH = 268,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AC_STOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_STOP = 272,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AGAIN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AGAIN = 121,   \/**< redo *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_ALTERASE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_ALTERASE = 153, \/**< Erase-Eaze *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_APOSTROPHE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APOSTROPHE = 52,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_APP1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APP1 = 283,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_APP2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APP2 = 284,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_APPLICATION	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APPLICATION = 101, \/**< windows contextual menu, compose *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOFASTFORWARD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOFASTFORWARD = 286,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOMUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOMUTE = 262,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIONEXT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIONEXT = 258,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOPLAY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPLAY = 261,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOPREV	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPREV = 259,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOREWIND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOREWIND = 285,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_AUDIOSTOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOSTOP = 260,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_B	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_B = 5,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_BACKSLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BACKSLASH = 49, \/**< Located at the lower left of the return$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_BACKSPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BACKSPACE = 42,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_BRIGHTNESSDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSDOWN = 275,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_BRIGHTNESSUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSUP = 276,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_C	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_C = 6,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CALCULATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CALCULATOR = 266,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CANCEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CANCEL = 155,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CAPSLOCK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CAPSLOCK = 57,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CLEAR = 156,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CLEARAGAIN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CLEARAGAIN = 162,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_COMMA	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COMMA = 54,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_COMPUTER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COMPUTER = 267,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_COPY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COPY = 124,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CRSEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CRSEL = 163,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CURRENCYSUBUNIT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYSUBUNIT = 181,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CURRENCYUNIT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYUNIT = 180,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_CUT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CUT = 123,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_D	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_D = 7,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_DECIMALSEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DECIMALSEPARATOR = 179,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_DELETE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DELETE = 76,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_DISPLAYSWITCH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DISPLAYSWITCH = 277, \/**< display mirroring\/dual display$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_DOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DOWN = 81,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_E	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_E = 8,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_EJECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EJECT = 281,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_END	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_END = 77,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_EQUALS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EQUALS = 46,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_ESCAPE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_ESCAPE = 41,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_EXECUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EXECUTE = 116,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_EXSEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EXSEL = 164,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F = 9,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F1 = 58,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F10	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F10 = 67,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F11	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F11 = 68,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F12	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F12 = 69,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F13	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F13 = 104,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F14	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F14 = 105,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F15	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F15 = 106,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F16	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F16 = 107,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F17	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F17 = 108,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F18	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F18 = 109,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F19	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F19 = 110,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F2 = 59,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F20	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F20 = 111,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F21	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F21 = 112,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F22	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F22 = 113,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F23	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F23 = 114,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F24	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F24 = 115,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F3 = 60,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F4 = 61,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F5 = 62,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F6 = 63,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F7 = 64,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F8 = 65,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_F9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F9 = 66,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_FIND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_FIND = 126,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_G	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_G = 10,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_GRAVE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_GRAVE = 53, \/**< Located in the top left corner (on both ANSI$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_H	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_H = 11,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_HELP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_HELP = 117,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_HOME	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_HOME = 74,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_I	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_I = 12,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INSERT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INSERT = 73, \/**< insert on PC, help on some Mac keyboards (but$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL1 = 135, \/**< used on Asian keyboards, see$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL2 = 136,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL3 = 137, \/**< Yen *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL4 = 138,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL5 = 139,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL6 = 140,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL7 = 141,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL8 = 142,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_INTERNATIONAL9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL9 = 143,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_J	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_J = 13,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_K	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_K = 14,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KBDILLUMDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMDOWN = 279,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KBDILLUMTOGGLE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMTOGGLE = 278,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KBDILLUMUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMUP = 280,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_0	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_0 = 98,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_00	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_00 = 176,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_000	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_000 = 177,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_1 = 89,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_2 = 90,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_3 = 91,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_4 = 92,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_5 = 93,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_6 = 94,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_7 = 95,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_8 = 96,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_9 = 97,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_A	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_A = 188,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_AMPERSAND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_AMPERSAND = 199,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_AT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_AT = 206,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_B	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_B = 189,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_BACKSPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_BACKSPACE = 187,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_BINARY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_BINARY = 218,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_C	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_C = 190,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_CLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEAR = 216,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_CLEARENTRY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEARENTRY = 217,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_COLON	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_COLON = 203,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_COMMA	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_COMMA = 133,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_D	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_D = 191,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_DBLAMPERSAND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLAMPERSAND = 200,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_DBLVERTICALBAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLVERTICALBAR = 202,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_DECIMAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DECIMAL = 220,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_DIVIDE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DIVIDE = 84,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_E	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_E = 192,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_ENTER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_ENTER = 88,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_EQUALS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALS = 103,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_EQUALSAS400	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALSAS400 = 134,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_EXCLAM	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EXCLAM = 207,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_F	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_F = 193,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_GREATER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_GREATER = 198,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_HASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_HASH = 204,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_HEXADECIMAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_HEXADECIMAL = 221,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_LEFTBRACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTBRACE = 184,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_LEFTPAREN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTPAREN = 182,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_LESS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LESS = 197,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMADD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMADD = 211,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMCLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMCLEAR = 210,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMDIVIDE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMDIVIDE = 214,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMMULTIPLY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMMULTIPLY = 213,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMRECALL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMRECALL = 209,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMSTORE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSTORE = 208,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MEMSUBTRACT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSUBTRACT = 212,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MINUS = 86,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_MULTIPLY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MULTIPLY = 85,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_OCTAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_OCTAL = 219,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_PERCENT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PERCENT = 196,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_PERIOD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PERIOD = 99,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_PLUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUS = 87,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_PLUSMINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUSMINUS = 215,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_POWER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_POWER = 195,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_RIGHTBRACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTBRACE = 185,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_RIGHTPAREN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTPAREN = 183,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_SPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_SPACE = 205,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_TAB	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_TAB = 186,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_VERTICALBAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_VERTICALBAR = 201,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_KP_XOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_XOR = 194,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_L	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_L = 15,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LALT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LALT = 226, \/**< alt, option *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG1 = 144, \/**< Hangul\/English toggle *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG2 = 145, \/**< Hanja conversion *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG3 = 146, \/**< Katakana *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG4 = 147, \/**< Hiragana *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG5 = 148, \/**< Zenkaku\/Hankaku *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG6 = 149, \/**< reserved *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG7 = 150, \/**< reserved *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG8 = 151, \/**< reserved *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LANG9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG9 = 152, \/**< reserved *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LCTRL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LCTRL = 224,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LEFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LEFT = 80,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LEFTBRACKET	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LEFTBRACKET = 47,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LGUI	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LGUI = 227, \/**< windows, command (apple), meta *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_LSHIFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LSHIFT = 225,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_M	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_M = 16,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MAIL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MAIL = 265,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MEDIASELECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MEDIASELECT = 263,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MENU	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MENU = 118,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MINUS = 45,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MODE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MODE = 257,    \/**< I'm not sure if this is really not covered$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_MUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MUTE = 127,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_N	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_N = 17,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_NONUSBACKSLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NONUSBACKSLASH = 100, \/**< This is the additional key that ISO$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_NONUSHASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NONUSHASH = 50, \/**< ISO USB keyboards actually use this code$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_NUMLOCKCLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NUMLOCKCLEAR = 83, \/**< num lock on PC, clear on Mac keyboards$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_O	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_O = 18,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_OPER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_OPER = 161,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_OUT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_OUT = 160,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_P	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_P = 19,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PAGEDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAGEDOWN = 78,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PAGEUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAGEUP = 75,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PASTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PASTE = 125,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PAUSE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAUSE = 72,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PERIOD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PERIOD = 55,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_POWER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_POWER = 102, \/**< The USB document says this is a status flag,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PRINTSCREEN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PRINTSCREEN = 70,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_PRIOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PRIOR = 157,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_Q	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Q = 20,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_R	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_R = 21,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RALT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RALT = 230, \/**< alt gr, option *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RCTRL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RCTRL = 228,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RETURN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RETURN = 40,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RETURN2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RETURN2 = 158,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RGUI	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RGUI = 231, \/**< windows, command (apple), meta *\/$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RIGHT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RIGHT = 79,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RIGHTBRACKET	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RIGHTBRACKET = 48,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_RSHIFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RSHIFT = 229,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_S	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_S = 22,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SCROLLLOCK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SCROLLLOCK = 71,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SELECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SELECT = 119,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SEMICOLON	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SEMICOLON = 51,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SEPARATOR = 159,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SLASH = 56,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SLEEP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SLEEP = 282,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SPACE = 44,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_STOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_STOP = 120,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_SYSREQ	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SYSREQ = 154,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_T	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_T = 23,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_TAB	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_TAB = 43,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_THOUSANDSSEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_THOUSANDSSEPARATOR = 178,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_TO_KEYCODE	/usr/include/SDL2/SDL_keycode.h	/^#define SDL_SCANCODE_TO_KEYCODE(/;"	d	signature:(X)
SDL_SCANCODE_U	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_U = 24,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_UNDO	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UNDO = 122,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_UNKNOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UNKNOWN = 0,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_UP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UP = 82,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_V	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_V = 25,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_VOLUMEDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEDOWN = 129,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_VOLUMEUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEUP = 128,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_W	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_W = 26,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_WWW	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_WWW = 264,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_X	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_X = 27,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_Y	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Y = 28,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANCODE_Z	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Z = 29,$/;"	e	enum:__anon8400e16c0103	access:public
SDL_SCANF_FORMAT_STRING	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_SCANF_FORMAT_STRING /;"	d
SDL_SCANF_FORMAT_STRING	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_SCANF_FORMAT_STRING$/;"	d
SDL_SCANF_VARARG_FUNC	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_SCANF_VARARG_FUNC(/;"	d	signature:(fmtargnumber)
SDL_SENSORUPDATE	/usr/include/SDL2/SDL_events.h	/^    SDL_SENSORUPDATE = 0x1200,     \/**< A sensor was updated *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_SENSOR_ACCEL	/usr/include/SDL2/SDL_sensor.h	/^    SDL_SENSOR_ACCEL,           \/**< Accelerometer *\/$/;"	e	enum:__anon7f6bbc260103	access:public
SDL_SENSOR_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_SENSOR_ANDROID /;"	d
SDL_SENSOR_COREMOTION	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_SENSOR_COREMOTION /;"	d
SDL_SENSOR_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_SENSOR_DISABLED /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_DUMMY	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_SENSOR_DUMMY /;"	d
SDL_SENSOR_GYRO	/usr/include/SDL2/SDL_sensor.h	/^    SDL_SENSOR_GYRO             \/**< Gyroscope *\/$/;"	e	enum:__anon7f6bbc260103	access:public
SDL_SENSOR_INVALID	/usr/include/SDL2/SDL_sensor.h	/^    SDL_SENSOR_INVALID = -1,    \/**< Returned for an invalid sensor *\/$/;"	e	enum:__anon7f6bbc260103	access:public
SDL_SENSOR_UNKNOWN	/usr/include/SDL2/SDL_sensor.h	/^    SDL_SENSOR_UNKNOWN,         \/**< Unknown sensor type *\/$/;"	e	enum:__anon7f6bbc260103	access:public
SDL_SHAPEMODEALPHA	/usr/include/SDL2/SDL_shape.h	/^#define SDL_SHAPEMODEALPHA(/;"	d	signature:(mode)
SDL_SIMDAlloc	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC void * SDLCALL SDL_SIMDAlloc(const size_t len);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const size_t len)
SDL_SIMDFree	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC void SDLCALL SDL_SIMDFree(void *ptr);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * ptr)
SDL_SIMDGetAlignment	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC size_t SDLCALL SDL_SIMDGetAlignment(void);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(void)
SDL_SIMD_ALIGNED	/usr/include/SDL2/SDL_surface.h	/^#define SDL_SIMD_ALIGNED /;"	d
SDL_STANDARD_GRAVITY	/usr/include/SDL2/SDL_sensor.h	/^#define SDL_STANDARD_GRAVITY /;"	d
SDL_STRINGIFY_ARG	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_STRINGIFY_ARG(/;"	d	signature:(arg)
SDL_SWSURFACE	/usr/include/SDL2/SDL_surface.h	/^#define SDL_SWSURFACE /;"	d
SDL_SYSTEM_CURSOR_ARROW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_ARROW,     \/**< Arrow *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_CROSSHAIR	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_CROSSHAIR, \/**< Crosshair *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_HAND	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_HAND,      \/**< Hand *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_IBEAM	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_IBEAM,     \/**< I-beam *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_NO	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_NO,        \/**< Slashed circle or crossbones *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_SIZEALL	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEALL,   \/**< Four pointed arrow pointing north, south, east, and west /;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_SIZENESW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENESW,  \/**< Double arrow pointing northeast and southwest *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_SIZENS	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENS,    \/**< Double arrow pointing north and south *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_SIZENWSE	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENWSE,  \/**< Double arrow pointing northwest and southeast *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_SIZEWE	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEWE,    \/**< Double arrow pointing west and east *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_WAIT	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAIT,      \/**< Wait *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSTEM_CURSOR_WAITARROW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAITARROW, \/**< Small wait cursor (or Wait if not available) *\/$/;"	e	enum:__anon6cd8de350103	access:public
SDL_SYSWMEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_SYSWMEVENT,             \/**< System specific event *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_SYSWM_ANDROID	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_ANDROID,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_COCOA	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_COCOA,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_DIRECTFB	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_DIRECTFB,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_HAIKU	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_HAIKU$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_MIR	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_MIR,  \/* no longer available, left for API\/ABI compatibility. Remove in 2.1! *\/$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_OS2	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_OS2,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_TYPE	/usr/include/SDL2/SDL_syswm.h	/^} SDL_SYSWM_TYPE;$/;"	t	typeref:enum:__anon51e8038f0103
SDL_SYSWM_UIKIT	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_UIKIT,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_UNKNOWN	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_UNKNOWN,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_VIVANTE	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_VIVANTE,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_WAYLAND	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_WAYLAND,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_WINDOWS	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_WINDOWS,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_WINRT	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_WINRT,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SYSWM_X11	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_X11,$/;"	e	enum:__anon51e8038f0103	access:public
SDL_SaveAllDollarTemplates	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveAllDollarTemplates(SDL_RWops *dst);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst)
SDL_SaveBMP	/usr/include/SDL2/SDL_surface.h	/^#define SDL_SaveBMP(/;"	d	signature:(surface,file)
SDL_SaveBMP_RW	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SaveBMP_RW$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_RWops * dst,int freedst)
SDL_SaveDollarTemplate	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveDollarTemplate(SDL_GestureID gestureId,SDL_RWops *dst);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GestureID gestureId,SDL_RWops * dst)
SDL_ScaleMode	/usr/include/SDL2/SDL_render.h	/^} SDL_ScaleMode;$/;"	t	typeref:enum:__anon9214fbec0203
SDL_ScaleModeBest	/usr/include/SDL2/SDL_render.h	/^    SDL_ScaleModeBest     \/**< anisotropic filtering *\/$/;"	e	enum:__anon9214fbec0203	access:public
SDL_ScaleModeLinear	/usr/include/SDL2/SDL_render.h	/^    SDL_ScaleModeLinear,  \/**< linear filtering *\/$/;"	e	enum:__anon9214fbec0203	access:public
SDL_ScaleModeNearest	/usr/include/SDL2/SDL_render.h	/^    SDL_ScaleModeNearest, \/**< nearest pixel sampling *\/$/;"	e	enum:__anon9214fbec0203	access:public
SDL_Scancode	/usr/include/SDL2/SDL_scancode.h	/^} SDL_Scancode;$/;"	t	typeref:enum:__anon8400e16c0103
SDL_SemPost	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemPost(SDL_sem * sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemTryWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemTryWait(SDL_sem * sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemValue	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC Uint32 SDLCALL SDL_SemValue(SDL_sem * sem);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_sem * sem)
SDL_SemWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWait(SDL_sem * sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemWaitTimeout	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem * sem, Uint32 ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem,Uint32 ms)
SDL_Sensor	/usr/include/SDL2/SDL_sensor.h	/^typedef struct _SDL_Sensor SDL_Sensor;$/;"	t	typeref:struct:_SDL_Sensor
SDL_SensorClose	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC void SDLCALL SDL_SensorClose(SDL_Sensor * sensor);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_SensorEvent$/;"	s
SDL_SensorEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_SensorEvent;$/;"	t	typeref:struct:SDL_SensorEvent
SDL_SensorEvent::data	/usr/include/SDL2/SDL_events.h	/^    float data[6];      \/**< Up to 6 values from the sensor - additional values can be queried /;"	m	struct:SDL_SensorEvent	typeref:typename:float[6]	access:public
SDL_SensorEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
SDL_SensorEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SENSORUPDATE *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
SDL_SensorEvent::which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The instance ID of the sensor *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Sint32	access:public
SDL_SensorFromInstanceID	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_Sensor *SDLCALL SDL_SensorFromInstanceID(SDL_SensorID instance_id);$/;"	p	typeref:typename:DECLSPEC SDL_Sensor * SDLCALL	signature:(SDL_SensorID instance_id)
SDL_SensorGetData	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetData(SDL_Sensor * sensor, float *data, int num_values);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Sensor * sensor,float * data,int num_values)
SDL_SensorGetDeviceInstanceID	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetDeviceInstanceID(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_SensorID SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceName	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC const char *SDLCALL SDL_SensorGetDeviceName(int device_index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceNonPortableType	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetDeviceNonPortableType(int device_index);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceType	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetDeviceType(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_SensorType SDLCALL	signature:(int device_index)
SDL_SensorGetInstanceID	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetInstanceID(SDL_Sensor *sensor);$/;"	p	typeref:typename:DECLSPEC SDL_SensorID SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetName	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC const char *SDLCALL SDL_SensorGetName(SDL_Sensor *sensor);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetNonPortableType	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetNonPortableType(SDL_Sensor *sensor);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetType	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetType(SDL_Sensor *sensor);$/;"	p	typeref:typename:DECLSPEC SDL_SensorType SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorID	/usr/include/SDL2/SDL_sensor.h	/^typedef Sint32 SDL_SensorID;$/;"	t	typeref:typename:Sint32
SDL_SensorOpen	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC SDL_Sensor *SDLCALL SDL_SensorOpen(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_Sensor * SDLCALL	signature:(int device_index)
SDL_SensorType	/usr/include/SDL2/SDL_sensor.h	/^} SDL_SensorType;$/;"	t	typeref:enum:__anon7f6bbc260103
SDL_SensorUpdate	/usr/include/SDL2/SDL_sensor.h	/^extern DECLSPEC void SDLCALL SDL_SensorUpdate(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_SetAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_SetAssertionHandler($/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AssertionHandler handler,void * userdata)
SDL_SetClipRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetClipRect(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Surface * surface,const SDL_Rect * rect)
SDL_SetClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC int SDLCALL SDL_SetClipboardText(const char *text);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text)
SDL_SetColorKey	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetColorKey(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,int flag,Uint32 key)
SDL_SetCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_SetCursor(SDL_Cursor * cursor);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_SetError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_SetError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRIN/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_SetEventFilter	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_SetEventFilter(SDL_EventFilter filter,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_SetHint	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHint(const char *name,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,const char * value)
SDL_SetHintWithPriority	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHintWithPriority(const char *name,$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,const char * value,SDL_HintPriority priority)
SDL_SetMainReady	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_SetMainReady(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_SetMemoryFunctions	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_SetMemoryFunctions(SDL_malloc_func malloc_func,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_malloc_func malloc_func,SDL_calloc_func calloc_func,SDL_realloc_func realloc_func,SDL_free_func free_func)
SDL_SetModState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetModState(SDL_Keymod modstate);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Keymod modstate)
SDL_SetPaletteColors	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPaletteColors(SDL_Palette * palette,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Palette * palette,const SDL_Color * colors,int firstcolor,int ncolors)
SDL_SetPixelFormatPalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPixelFormatPalette(SDL_PixelFormat * format,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_PixelFormat * format,SDL_Palette * palette)
SDL_SetRelativeMouseMode	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_SetRelativeMouseMode(SDL_bool enabled);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_bool enabled)
SDL_SetRenderDrawBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_BlendMode blendMode)
SDL_SetRenderDrawColor	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawColor(SDL_Renderer * renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
SDL_SetRenderTarget	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderTarget(SDL_Renderer *renderer,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture)
SDL_SetSurfaceAlphaMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceAlphaMod(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 alpha)
SDL_SetSurfaceBlendMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceBlendMode(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_BlendMode blendMode)
SDL_SetSurfaceColorMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceColorMod(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 r,Uint8 g,Uint8 b)
SDL_SetSurfacePalette	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfacePalette(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_Palette * palette)
SDL_SetSurfaceRLE	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceRLE(SDL_Surface * surface,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,int flag)
SDL_SetTextInputRect	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetTextInputRect(SDL_Rect *rect);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Rect * rect)
SDL_SetTextureAlphaMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureAlphaMod(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 alpha)
SDL_SetTextureBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureBlendMode(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_BlendMode blendMode)
SDL_SetTextureColorMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureColorMod(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 r,Uint8 g,Uint8 b)
SDL_SetTextureScaleMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureScaleMode(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_ScaleMode scaleMode)
SDL_SetThreadPriority	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_SetThreadPriority(SDL_ThreadPriority priority);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_ThreadPriority priority)
SDL_SetWindowBordered	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowBordered(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool bordered)
SDL_SetWindowBrightness	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowBrightness(SDL_Window * window, float brightness);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float brightness)
SDL_SetWindowData	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void* SDLCALL SDL_SetWindowData(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Window * window,const char * name,void * userdata)
SDL_SetWindowDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowDisplayMode(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const SDL_DisplayMode * mode)
SDL_SetWindowFullscreen	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowFullscreen(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,Uint32 flags)
SDL_SetWindowGammaRamp	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowGammaRamp(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const Uint16 * red,const Uint16 * green,const Uint16 * blue)
SDL_SetWindowGrab	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowGrab(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool grabbed)
SDL_SetWindowHitTest	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowHitTest(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_HitTest callback,void * callback_data)
SDL_SetWindowIcon	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowIcon(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_Surface * icon)
SDL_SetWindowInputFocus	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowInputFocus(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_SetWindowMaximumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMaximumSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int max_w,int max_h)
SDL_SetWindowMinimumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMinimumSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int min_w,int min_h)
SDL_SetWindowModalFor	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowModalFor(SDL_Window * modal_window, SDL_Window * parent/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * modal_window,SDL_Window * parent_window)
SDL_SetWindowOpacity	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowOpacity(SDL_Window * window, float opacity);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float opacity)
SDL_SetWindowPosition	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowPosition(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int x,int y)
SDL_SetWindowResizable	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowResizable(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool resizable)
SDL_SetWindowShape	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowS/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_Surface * shape,SDL_WindowShapeMode * shape_mode)
SDL_SetWindowSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowSize(SDL_Window * window, int w,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int w,int h)
SDL_SetWindowTitle	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowTitle(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,const char * title)
SDL_SetWindowsMessageHook	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowsMessageHook(SDL_WindowsMessageHook callback, void *us/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_WindowsMessageHook callback,void * userdata)
SDL_SetYUVConversionMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_SetYUVConversionMode(SDL_YUV_CONVERSION_MODE mode);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_YUV_CONVERSION_MODE mode)
SDL_ShowCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_ShowCursor(int toggle);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int toggle)
SDL_ShowMessageBox	/usr/include/SDL2/SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *bu/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const SDL_MessageBoxData * messageboxdata,int * buttonid)
SDL_ShowSimpleMessageBox	/usr/include/SDL2/SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowSimpleMessageBox(Uint32 flags, const char *title, const char/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags,const char * title,const char * message,SDL_Window * window)
SDL_ShowWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_ShowWindow(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_SoftStretch	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SoftStretch(SDL_Surface * src,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,const SDL_Rect * dstrect)
SDL_SpinLock	/usr/include/SDL2/SDL_atomic.h	/^typedef int SDL_SpinLock;$/;"	t	typeref:typename:int
SDL_StartTextInput	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StartTextInput(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_StopTextInput	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StopTextInput(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Surface	/usr/include/SDL2/SDL_surface.h	/^typedef struct SDL_Surface$/;"	s
SDL_Surface	/usr/include/SDL2/SDL_surface.h	/^} SDL_Surface;$/;"	t	typeref:struct:SDL_Surface
SDL_Surface::clip_rect	/usr/include/SDL2/SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
SDL_Surface::flags	/usr/include/SDL2/SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
SDL_Surface::format	/usr/include/SDL2/SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
SDL_Surface::h	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::lock_data	/usr/include/SDL2/SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::locked	/usr/include/SDL2/SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::map	/usr/include/SDL2/SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
SDL_Surface::pitch	/usr/include/SDL2/SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::pixels	/usr/include/SDL2/SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::refcount	/usr/include/SDL2/SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::userdata	/usr/include/SDL2/SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::w	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Swap16	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap16(Uint16 x)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint16	signature:(Uint16 x)
SDL_Swap32	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap32(Uint32 x)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint32	signature:(Uint32 x)
SDL_Swap32	/usr/include/SDL2/SDL_endian.h	/^extern _inline Uint32 SDL_Swap32(Uint32);$/;"	p	typeref:typename:_inline Uint32	signature:(Uint32)
SDL_Swap64	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap64(Uint64 x)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint64	signature:(Uint64 x)
SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	/usr/include/SDL2/SDL_endian.h	/^        {$/;"	s	union:SDL_Swap64::__anon308df0fb010a	access:public
SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208::a	/usr/include/SDL2/SDL_endian.h	/^            Uint32 a, b;$/;"	m	struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208::b	/usr/include/SDL2/SDL_endian.h	/^            Uint32 a, b;$/;"	m	struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon308df0fb010a::s	/usr/include/SDL2/SDL_endian.h	/^        } s;$/;"	m	union:SDL_Swap64::__anon308df0fb010a	typeref:struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	access:public
SDL_Swap64::__anon308df0fb010a::u	/usr/include/SDL2/SDL_endian.h	/^        Uint64 u;$/;"	m	union:SDL_Swap64::__anon308df0fb010a	typeref:typename:Uint64	access:public
SDL_SwapBE16	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapBE16(/;"	d	signature:(X)
SDL_SwapBE32	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapBE32(/;"	d	signature:(X)
SDL_SwapBE64	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapBE64(/;"	d	signature:(X)
SDL_SwapFloat	/usr/include/SDL2/SDL_endian.h	/^SDL_SwapFloat(float x)$/;"	f	typeref:typename:SDL_FORCE_INLINE float	signature:(float x)
SDL_SwapFloat::__anon308df0fb030a::f	/usr/include/SDL2/SDL_endian.h	/^        float f;$/;"	m	union:SDL_SwapFloat::__anon308df0fb030a	typeref:typename:float	access:public
SDL_SwapFloat::__anon308df0fb030a::ui32	/usr/include/SDL2/SDL_endian.h	/^        Uint32 ui32;$/;"	m	union:SDL_SwapFloat::__anon308df0fb030a	typeref:typename:Uint32	access:public
SDL_SwapFloatBE	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapFloatBE(/;"	d	signature:(X)
SDL_SwapFloatLE	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapFloatLE(/;"	d	signature:(X)
SDL_SwapLE16	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapLE16(/;"	d	signature:(X)
SDL_SwapLE32	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapLE32(/;"	d	signature:(X)
SDL_SwapLE64	/usr/include/SDL2/SDL_endian.h	/^#define SDL_SwapLE64(/;"	d	signature:(X)
SDL_SysWMEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_SysWMEvent$/;"	s
SDL_SysWMEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_SysWMEvent;$/;"	t	typeref:struct:SDL_SysWMEvent
SDL_SysWMEvent::msg	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
SDL_SysWMEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
SDL_SysWMEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
SDL_SysWMinfo	/usr/include/SDL2/SDL_syswm.h	/^struct SDL_SysWMinfo$/;"	s
SDL_SysWMinfo	/usr/include/SDL2/SDL_syswm.h	/^typedef struct SDL_SysWMinfo SDL_SysWMinfo;$/;"	t	typeref:struct:SDL_SysWMinfo
SDL_SysWMinfo::__anon51e8038f090a	/usr/include/SDL2/SDL_syswm.h	/^    {$/;"	u	struct:SDL_SysWMinfo	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08::hdc	/usr/include/SDL2/SDL_syswm.h	/^            HDC hdc;                    \/**< The window device context *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HDC	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08::hinstance	/usr/include/SDL2/SDL_syswm.h	/^            HINSTANCE hinstance;        \/**< The instance handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HINSTANCE	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08::window	/usr/include/SDL2/SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HWND	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08::window	/usr/include/SDL2/SDL_syswm.h	/^            IInspectable * window;      \/**< The WinRT CoreWindow *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08	typeref:typename:IInspectable *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08::display	/usr/include/SDL2/SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	typeref:typename:Display *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08::window	/usr/include/SDL2/SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	typeref:typename:Window	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08::dfb	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFB *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08::surface	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFBSurface *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08::window	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFBWindow *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08::window	/usr/include/SDL2/SDL_syswm.h	/^            NSWindow __unsafe_unretained *window; \/**< The Cocoa window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08	typeref:typename:NSWindow __unsafe_unretained *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08::colorbuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint colorbuffer; \/**< The GL view's color Renderbuffer Object. It must be bound /;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08::framebuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint framebuffer; \/**< The GL view's Framebuffer Object. It must be bound when re/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08::resolveFramebuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint resolveFramebuffer; \/**< The Framebuffer Object which holds the resolve colo/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08::window	/usr/include/SDL2/SDL_syswm.h	/^            UIWindow __unsafe_unretained *window; \/**< The UIKit window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:UIWindow __unsafe_unretained *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008::display	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_display *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008::shell_surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager /;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_shell_surface *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008::surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_surface *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108::connection	/usr/include/SDL2/SDL_syswm.h	/^            void *connection;  \/**< Mir display server connection *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	typeref:typename:void *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108::surface	/usr/include/SDL2/SDL_syswm.h	/^            void *surface;  \/**< Mir surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	typeref:typename:void *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208::surface	/usr/include/SDL2/SDL_syswm.h	/^            EGLSurface surface;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	typeref:typename:EGLSurface	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208::window	/usr/include/SDL2/SDL_syswm.h	/^            ANativeWindow *window;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	typeref:typename:ANativeWindow *	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308::display	/usr/include/SDL2/SDL_syswm.h	/^            EGLNativeDisplayType display;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	typeref:typename:EGLNativeDisplayType	access:public
SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308::window	/usr/include/SDL2/SDL_syswm.h	/^            EGLNativeWindowType window;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	typeref:typename:EGLNativeWindowType	access:public
SDL_SysWMinfo::__anon51e8038f090a::android	/usr/include/SDL2/SDL_syswm.h	/^        } android;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	access:public
SDL_SysWMinfo::__anon51e8038f090a::cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08	access:public
SDL_SysWMinfo::__anon51e8038f090a::dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	access:public
SDL_SysWMinfo::__anon51e8038f090a::dummy	/usr/include/SDL2/SDL_syswm.h	/^        Uint8 dummy[64];$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:typename:Uint8[64]	access:public
SDL_SysWMinfo::__anon51e8038f090a::mir	/usr/include/SDL2/SDL_syswm.h	/^        } mir;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	access:public
SDL_SysWMinfo::__anon51e8038f090a::uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	access:public
SDL_SysWMinfo::__anon51e8038f090a::vivante	/usr/include/SDL2/SDL_syswm.h	/^        } vivante;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	access:public
SDL_SysWMinfo::__anon51e8038f090a::win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	access:public
SDL_SysWMinfo::__anon51e8038f090a::winrt	/usr/include/SDL2/SDL_syswm.h	/^        } winrt;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08	access:public
SDL_SysWMinfo::__anon51e8038f090a::wl	/usr/include/SDL2/SDL_syswm.h	/^        } wl;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	access:public
SDL_SysWMinfo::__anon51e8038f090a::x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	access:public
SDL_SysWMinfo::info	/usr/include/SDL2/SDL_syswm.h	/^    } info;$/;"	m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon51e8038f090a	access:public
SDL_SysWMinfo::subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMinfo	typeref:typename:SDL_SYSWM_TYPE	access:public
SDL_SysWMinfo::version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMinfo	typeref:typename:SDL_version	access:public
SDL_SysWMmsg	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_SysWMmsg SDL_SysWMmsg;$/;"	t	typeref:struct:SDL_SysWMmsg
SDL_SysWMmsg	/usr/include/SDL2/SDL_syswm.h	/^struct SDL_SysWMmsg$/;"	s
SDL_SysWMmsg::__anon51e8038f020a	/usr/include/SDL2/SDL_syswm.h	/^    {$/;"	u	struct:SDL_SysWMmsg	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308::hwnd	/usr/include/SDL2/SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:HWND	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308::lParam	/usr/include/SDL2/SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:LPARAM	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308::msg	/usr/include/SDL2/SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:UINT	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308::wParam	/usr/include/SDL2/SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:WPARAM	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408::event	/usr/include/SDL2/SDL_syswm.h	/^            XEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408	typeref:typename:XEvent	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508::event	/usr/include/SDL2/SDL_syswm.h	/^            DFBEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508	typeref:typename:DFBEvent	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608::dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608	typeref:typename:int	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708::dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708	typeref:typename:int	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808::dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808	typeref:typename:int	access:public
SDL_SysWMmsg::__anon51e8038f020a::cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608	access:public
SDL_SysWMmsg::__anon51e8038f020a::dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508	access:public
SDL_SysWMmsg::__anon51e8038f020a::dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:typename:int	access:public
SDL_SysWMmsg::__anon51e8038f020a::uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708	access:public
SDL_SysWMmsg::__anon51e8038f020a::vivante	/usr/include/SDL2/SDL_syswm.h	/^        } vivante;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808	access:public
SDL_SysWMmsg::__anon51e8038f020a::win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	access:public
SDL_SysWMmsg::__anon51e8038f020a::x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408	access:public
SDL_SysWMmsg::msg	/usr/include/SDL2/SDL_syswm.h	/^    } msg;$/;"	m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon51e8038f020a	access:public
SDL_SysWMmsg::subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMmsg	typeref:typename:SDL_SYSWM_TYPE	access:public
SDL_SysWMmsg::version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMmsg	typeref:typename:SDL_version	access:public
SDL_SystemCursor	/usr/include/SDL2/SDL_mouse.h	/^} SDL_SystemCursor;$/;"	t	typeref:enum:__anon6cd8de350103
SDL_TABLESIZE	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_TABLESIZE(/;"	d	signature:(table)
SDL_TEXTEDITING	/usr/include/SDL2/SDL_events.h	/^    SDL_TEXTEDITING,            \/**< Keyboard text editing (composition) *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_TEXTEDITINGEVENT_TEXT_SIZE	/usr/include/SDL2/SDL_events.h	/^#define SDL_TEXTEDITINGEVENT_TEXT_SIZE /;"	d
SDL_TEXTINPUT	/usr/include/SDL2/SDL_events.h	/^    SDL_TEXTINPUT,              \/**< Keyboard text input *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_TEXTINPUTEVENT_TEXT_SIZE	/usr/include/SDL2/SDL_events.h	/^#define SDL_TEXTINPUTEVENT_TEXT_SIZE /;"	d
SDL_TEXTUREACCESS_STATIC	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_STATIC,    \/**< Changes rarely, not lockable *\/$/;"	e	enum:__anon9214fbec0303	access:public
SDL_TEXTUREACCESS_STREAMING	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_STREAMING, \/**< Changes frequently, lockable *\/$/;"	e	enum:__anon9214fbec0303	access:public
SDL_TEXTUREACCESS_TARGET	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_TARGET     \/**< Texture can be used as a render target *\/$/;"	e	enum:__anon9214fbec0303	access:public
SDL_TEXTUREMODULATE_ALPHA	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_ALPHA = 0x00000002     \/**< srcA = srcA * alpha *\/$/;"	e	enum:__anon9214fbec0403	access:public
SDL_TEXTUREMODULATE_COLOR	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_COLOR = 0x00000001,    \/**< srcC = srcC * color *\/$/;"	e	enum:__anon9214fbec0403	access:public
SDL_TEXTUREMODULATE_NONE	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_NONE = 0x00000000,     \/**< No modulation *\/$/;"	e	enum:__anon9214fbec0403	access:public
SDL_THREADS_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_THREADS_DISABLED /;"	d
SDL_THREADS_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_THREADS_DISABLED /;"	d
SDL_THREAD_PRIORITY_HIGH	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_HIGH,$/;"	e	enum:__anon5aeba9e40103	access:public
SDL_THREAD_PRIORITY_LOW	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_LOW,$/;"	e	enum:__anon5aeba9e40103	access:public
SDL_THREAD_PRIORITY_NORMAL	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_NORMAL,$/;"	e	enum:__anon5aeba9e40103	access:public
SDL_THREAD_PRIORITY_TIME_CRITICAL	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_TIME_CRITICAL$/;"	e	enum:__anon5aeba9e40103	access:public
SDL_THREAD_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_THREAD_PSP /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL2/SDL_config.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP /;"	d
SDL_THREAD_STDCPP	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_THREAD_STDCPP /;"	d
SDL_THREAD_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_THREAD_WINDOWS /;"	d
SDL_THREAD_WINDOWS	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_THREAD_WINDOWS /;"	d
SDL_TICKS_PASSED	/usr/include/SDL2/SDL_timer.h	/^#define SDL_TICKS_PASSED(/;"	d	signature:(A,B)
SDL_TIMERS_DISABLED	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_TIMERS_DISABLED /;"	d
SDL_TIMERS_DISABLED	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_TIMERS_DISABLED /;"	d
SDL_TIMERS_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_TIMERS_PSP /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMER_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_TIMER_WINDOWS /;"	d
SDL_TIMER_WINDOWS	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_TIMER_WINDOWS /;"	d
SDL_TLSCreate	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_TLSID SDLCALL SDL_TLSCreate(void);$/;"	p	typeref:typename:DECLSPEC SDL_TLSID SDLCALL	signature:(void)
SDL_TLSGet	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void * SDLCALL SDL_TLSGet(SDL_TLSID id);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_TLSID id)
SDL_TLSID	/usr/include/SDL2/SDL_thread.h	/^typedef unsigned int SDL_TLSID;$/;"	t	typeref:typename:unsigned int
SDL_TLSSet	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (SDLCALL *destructo/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TLSID id,const void * value,void (SDLCALL * destructor)(void *))
SDL_TOUCH_DEVICE_DIRECT	/usr/include/SDL2/SDL_touch.h	/^    SDL_TOUCH_DEVICE_DIRECT,            \/* touch screen with window-relative coordinates *\/$/;"	e	enum:__anon87a7ce2f0103	access:public
SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE	/usr/include/SDL2/SDL_touch.h	/^    SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE, \/* trackpad with absolute device coordinates *\/$/;"	e	enum:__anon87a7ce2f0103	access:public
SDL_TOUCH_DEVICE_INDIRECT_RELATIVE	/usr/include/SDL2/SDL_touch.h	/^    SDL_TOUCH_DEVICE_INDIRECT_RELATIVE  \/* trackpad with screen cursor-relative coordinates *\/$/;"	e	enum:__anon87a7ce2f0103	access:public
SDL_TOUCH_DEVICE_INVALID	/usr/include/SDL2/SDL_touch.h	/^    SDL_TOUCH_DEVICE_INVALID = -1,$/;"	e	enum:__anon87a7ce2f0103	access:public
SDL_TOUCH_MOUSEID	/usr/include/SDL2/SDL_touch.h	/^#define SDL_TOUCH_MOUSEID /;"	d
SDL_TRUE	/usr/include/SDL2/SDL_stdinc.h	/^    SDL_TRUE = 1$/;"	e	enum:__anonea0bf3f10103	access:public
SDL_TRUE	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_TRUE /;"	d
SDL_TTF_COMPILEDVERSION	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_COMPILEDVERSION /;"	d
SDL_TTF_H_	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_H_$/;"	d
SDL_TTF_MAJOR_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_MAJOR_VERSION /;"	d
SDL_TTF_MINOR_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_MINOR_VERSION /;"	d
SDL_TTF_PATCHLEVEL	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_PATCHLEVEL /;"	d
SDL_TTF_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_VERSION(/;"	d	signature:(X)
SDL_TTF_VERSION_ATLEAST	/usr/include/SDL2/SDL_ttf.h	/^#define SDL_TTF_VERSION_ATLEAST(/;"	d	signature:(X,Y,Z)
SDL_TextEditingEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TextEditingEvent$/;"	s
SDL_TextEditingEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TextEditingEvent;$/;"	t	typeref:struct:SDL_TextEditingEvent
SDL_TextEditingEvent::length	/usr/include/SDL2/SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
SDL_TextEditingEvent::start	/usr/include/SDL2/SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text /;"	m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
SDL_TextEditingEvent::text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:char[]	access:public
SDL_TextEditingEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;                           \/**< In milliseconds, populated using SDL_GetTi/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextEditingEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextEditingEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TextInputEvent$/;"	s
SDL_TextInputEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TextInputEvent;$/;"	t	typeref:struct:SDL_TextInputEvent
SDL_TextInputEvent::text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:char[]	access:public
SDL_TextInputEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;                         \/**< In milliseconds, populated using SDL_GetTick/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_Texture	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_Texture SDL_Texture;$/;"	t	typeref:struct:SDL_Texture
SDL_TextureAccess	/usr/include/SDL2/SDL_render.h	/^} SDL_TextureAccess;$/;"	t	typeref:enum:__anon9214fbec0303
SDL_TextureModulate	/usr/include/SDL2/SDL_render.h	/^} SDL_TextureModulate;$/;"	t	typeref:enum:__anon9214fbec0403
SDL_Thread	/usr/include/SDL2/SDL_thread.h	/^typedef struct SDL_Thread SDL_Thread;$/;"	t	typeref:struct:SDL_Thread
SDL_ThreadFunction	/usr/include/SDL2/SDL_thread.h	/^typedef int (SDLCALL * SDL_ThreadFunction) (void *data);$/;"	t	typeref:typename:int (SDLCALL *)(void * data)
SDL_ThreadID	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_ThreadID(void);$/;"	p	typeref:typename:DECLSPEC SDL_threadID SDLCALL	signature:(void)
SDL_ThreadPriority	/usr/include/SDL2/SDL_thread.h	/^} SDL_ThreadPriority;$/;"	t	typeref:enum:__anon5aeba9e40103
SDL_TimerCallback	/usr/include/SDL2/SDL_timer.h	/^typedef Uint32 (SDLCALL * SDL_TimerCallback) (Uint32 interval, void *param);$/;"	t	typeref:typename:Uint32 (SDLCALL *)(Uint32 interval,void * param)
SDL_TimerID	/usr/include/SDL2/SDL_timer.h	/^typedef int SDL_TimerID;$/;"	t	typeref:typename:int
SDL_TouchDeviceType	/usr/include/SDL2/SDL_touch.h	/^} SDL_TouchDeviceType;$/;"	t	typeref:enum:__anon87a7ce2f0103
SDL_TouchFingerEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TouchFingerEvent$/;"	s
SDL_TouchFingerEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TouchFingerEvent;$/;"	t	typeref:struct:SDL_TouchFingerEvent
SDL_TouchFingerEvent::dx	/usr/include/SDL2/SDL_events.h	/^    float dx;           \/**< Normalized in the range -1...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::dy	/usr/include/SDL2/SDL_events.h	/^    float dy;           \/**< Normalized in the range -1...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::fingerId	/usr/include/SDL2/SDL_events.h	/^    SDL_FingerID fingerId;$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_FingerID	access:public
SDL_TouchFingerEvent::pressure	/usr/include/SDL2/SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
SDL_TouchFingerEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_TouchID	access:public
SDL_TouchFingerEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
SDL_TouchFingerEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window underneath the finger, if any *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
SDL_TouchFingerEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchID	/usr/include/SDL2/SDL_touch.h	/^typedef Sint64 SDL_TouchID;$/;"	t	typeref:typename:Sint64
SDL_TriggerBreakpoint	/usr/include/SDL2/SDL_assert.h	/^    #define SDL_TriggerBreakpoint(/;"	d	signature:()
SDL_TryLockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_TryLockMutex(SDL_mutex * mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_UIKitRunApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_UIKitRunApp(int argc, char *argv[], SDL_main_func mainFunction);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int argc,char * argv[],SDL_main_func mainFunction)
SDL_UNSUPPORTED	/usr/include/SDL2/SDL_error.h	/^    SDL_UNSUPPORTED,$/;"	e	enum:__anon0bce2e560103	access:public
SDL_UNUSED	/usr/include/SDL2/begin_code.h	/^#    define SDL_UNUSED /;"	d
SDL_UNUSED	/usr/include/SDL2/begin_code.h	/^#    define SDL_UNUSED$/;"	d
SDL_USEREVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_USEREVENT    = 0x8000,$/;"	e	enum:__anon9b19faa10103	access:public
SDL_UnionRect	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC void SDLCALL SDL_UnionRect(const SDL_Rect * A,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B,SDL_Rect * result)
SDL_UnloadObject	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void SDLCALL SDL_UnloadObject(void *handle);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * handle)
SDL_UnlockAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_UnlockAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudioDevice(SDL_AudioDeviceID dev);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_UnlockJoysticks	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_UnlockJoysticks(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_UnlockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_UnlockMutex(SDL_mutex * mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_UnlockSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_UnlockSurface(SDL_Surface * surface);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_UnlockTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_UnlockTexture(SDL_Texture * texture);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Texture * texture)
SDL_UnregisterApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_UnregisterApp(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Unsupported	/usr/include/SDL2/SDL_error.h	/^#define SDL_Unsupported(/;"	d	signature:()
SDL_UpdateTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateTexture(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,const void * pixels,int pitch)
SDL_UpdateWindowSurface	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurface(SDL_Window * window);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_UpdateWindowSurfaceRects	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurfaceRects(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const SDL_Rect * rects,int numrects)
SDL_UpdateYUVTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateYUVTexture(SDL_Texture * texture,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,const Uint8 * Yplane,int Ypitch,const Uint8 * Uplane,int Upitch,const Uint8 * Vplane,int Vpitch)
SDL_UpperBlit	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlit$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_UpperBlitScaled	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlitScaled$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_UserEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_UserEvent$/;"	s
SDL_UserEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_UserEvent;$/;"	t	typeref:struct:SDL_UserEvent
SDL_UserEvent::code	/usr/include/SDL2/SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Sint32	access:public
SDL_UserEvent::data1	/usr/include/SDL2/SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::data2	/usr/include/SDL2/SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_UserEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_UserEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_VERSION	/usr/include/SDL2/SDL_version.h	/^#define SDL_VERSION(/;"	d	signature:(x)
SDL_VERSIONNUM	/usr/include/SDL2/SDL_version.h	/^#define SDL_VERSIONNUM(/;"	d	signature:(X,Y,Z)
SDL_VERSION_ATLEAST	/usr/include/SDL2/SDL_version.h	/^#define SDL_VERSION_ATLEAST(/;"	d	signature:(X,Y,Z)
SDL_VIDEO_DRIVER_ANDROID	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_DRIVER_ANDROID /;"	d
SDL_VIDEO_DRIVER_COCOA	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_COCOA /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_KMSDRM	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_KMSDRM /;"	d
SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC /;"	d
SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC_GBM	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC_GBM /;"	d
SDL_VIDEO_DRIVER_PANDORA	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_VIDEO_DRIVER_PANDORA /;"	d
SDL_VIDEO_DRIVER_PANDORA	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_VIDEO_DRIVER_PANDORA /;"	d
SDL_VIDEO_DRIVER_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_VIDEO_DRIVER_PSP /;"	d
SDL_VIDEO_DRIVER_UIKIT	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_DRIVER_UIKIT /;"	d
SDL_VIDEO_DRIVER_WAYLAND	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND /;"	d
SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC /;"	d
SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_CURSOR	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_CURSOR /;"	d
SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_EGL	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_EGL /;"	d
SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_XKBCOMMON	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_XKBCOMMON /;"	d
SDL_VIDEO_DRIVER_WAYLAND_QT_TOUCH	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_WAYLAND_QT_TOUCH /;"	d
SDL_VIDEO_DRIVER_WINDOWS	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_DRIVER_WINDOWS /;"	d
SDL_VIDEO_DRIVER_WINRT	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_DRIVER_WINRT /;"	d
SDL_VIDEO_DRIVER_X11	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11 /;"	d
SDL_VIDEO_DRIVER_X11	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_VIDEO_DRIVER_X11 /;"	d
SDL_VIDEO_DRIVER_X11_CONST_PARAM_XEXTADDDISPLAY	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_CONST_PARAM_XEXTADDDISPLAY /;"	d
SDL_VIDEO_DRIVER_X11_CONST_PARAM_XEXTADDDISPLAY	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_CONST_PARAM_XEXTADDDISPLAY /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XCURSOR	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XCURSOR /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINERAMA	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XINERAMA /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINERAMA	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XINERAMA /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2 /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2 /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XVIDMODE	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XVIDMODE /;"	d
SDL_VIDEO_DRIVER_X11_DYNAMIC_XVIDMODE	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XVIDMODE /;"	d
SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM /;"	d
SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM /;"	d
SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS /;"	d
SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS /;"	d
SDL_VIDEO_DRIVER_X11_XCURSOR	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XCURSOR /;"	d
SDL_VIDEO_DRIVER_X11_XDBE	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XDBE /;"	d
SDL_VIDEO_DRIVER_X11_XINERAMA	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XINERAMA /;"	d
SDL_VIDEO_DRIVER_X11_XINERAMA	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XINERAMA /;"	d
SDL_VIDEO_DRIVER_X11_XINPUT2	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XINPUT2 /;"	d
SDL_VIDEO_DRIVER_X11_XINPUT2	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XINPUT2 /;"	d
SDL_VIDEO_DRIVER_X11_XINPUT2_SUPPORTS_MULTITOUCH	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XINPUT2_SUPPORTS_MULTITOUCH /;"	d
SDL_VIDEO_DRIVER_X11_XRANDR	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XRANDR /;"	d
SDL_VIDEO_DRIVER_X11_XRANDR	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XRANDR /;"	d
SDL_VIDEO_DRIVER_X11_XSCRNSAVER	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XSCRNSAVER /;"	d
SDL_VIDEO_DRIVER_X11_XSCRNSAVER	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XSCRNSAVER /;"	d
SDL_VIDEO_DRIVER_X11_XSHAPE	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XSHAPE /;"	d
SDL_VIDEO_DRIVER_X11_XSHAPE	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XSHAPE /;"	d
SDL_VIDEO_DRIVER_X11_XVIDMODE	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XVIDMODE /;"	d
SDL_VIDEO_DRIVER_X11_XVIDMODE	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_DRIVER_X11_XVIDMODE /;"	d
SDL_VIDEO_METAL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_METAL /;"	d
SDL_VIDEO_METAL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_METAL /;"	d
SDL_VIDEO_OPENGL	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_OPENGL /;"	d
SDL_VIDEO_OPENGL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_OPENGL /;"	d
SDL_VIDEO_OPENGL	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_OPENGL /;"	d
SDL_VIDEO_OPENGL_CGL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_OPENGL_CGL /;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	d
SDL_VIDEO_OPENGL_ES	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_OPENGL_ES /;"	d
SDL_VIDEO_OPENGL_ES	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_OPENGL_ES /;"	d
SDL_VIDEO_OPENGL_ES	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_VIDEO_OPENGL_ES /;"	d
SDL_VIDEO_OPENGL_ES	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_VIDEO_OPENGL_ES /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	d
SDL_VIDEO_OPENGL_GLX	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_OPENGL_GLX /;"	d
SDL_VIDEO_OPENGL_GLX	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_OPENGL_GLX /;"	d
SDL_VIDEO_OPENGL_WGL	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_OPENGL_WGL /;"	d
SDL_VIDEO_RENDER_D3D	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_RENDER_D3D /;"	d
SDL_VIDEO_RENDER_D3D11	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_RENDER_D3D11 /;"	d
SDL_VIDEO_RENDER_D3D11	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_RENDER_D3D11 /;"	d
SDL_VIDEO_RENDER_METAL	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_RENDER_METAL /;"	d
SDL_VIDEO_RENDER_METAL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_RENDER_METAL /;"	d
SDL_VIDEO_RENDER_OGL	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_RENDER_OGL /;"	d
SDL_VIDEO_RENDER_OGL	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_RENDER_OGL /;"	d
SDL_VIDEO_RENDER_OGL	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_RENDER_OGL /;"	d
SDL_VIDEO_RENDER_OGL_ES	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_RENDER_OGL_ES /;"	d
SDL_VIDEO_RENDER_OGL_ES	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_RENDER_OGL_ES /;"	d
SDL_VIDEO_RENDER_OGL_ES	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_VIDEO_RENDER_OGL_ES /;"	d
SDL_VIDEO_RENDER_OGL_ES	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_VIDEO_RENDER_OGL_ES /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	d
SDL_VIDEO_RENDER_PSP	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_VIDEO_RENDER_PSP /;"	d
SDL_VIDEO_VULKAN	/usr/include/SDL2/SDL_config.h	/^#define SDL_VIDEO_VULKAN /;"	d
SDL_VIDEO_VULKAN	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_VIDEO_VULKAN /;"	d
SDL_VIDEO_VULKAN	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_VIDEO_VULKAN /;"	d
SDL_VIDEO_VULKAN	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_VIDEO_VULKAN /;"	d
SDL_VIDEO_VULKAN	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_VIDEO_VULKAN /;"	d
SDL_VideoInit	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_VideoInit(const char *driver_name);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name)
SDL_VideoQuit	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_VideoQuit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Vulkan_CreateSurface	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Vulkan_CreateSurface($/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,VkInstance instance,VkSurfaceKHR * surface)
SDL_Vulkan_GetDrawableSize	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC void SDLCALL SDL_Vulkan_GetDrawableSize(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_Vulkan_GetInstanceExtensions	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Vulkan_GetInstanceExtensions($/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,unsigned int * pCount,const char ** pNames)
SDL_Vulkan_GetVkGetInstanceProcAddr	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC void *SDLCALL SDL_Vulkan_GetVkGetInstanceProcAddr(void);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_Vulkan_LoadLibrary	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC int SDLCALL SDL_Vulkan_LoadLibrary(const char *path);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * path)
SDL_Vulkan_UnloadLibrary	/usr/include/SDL2/SDL_vulkan.h	/^extern DECLSPEC void SDLCALL SDL_Vulkan_UnloadLibrary(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_WINDOWEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_WINDOWEVENT    = 0x200, \/**< Window state change *\/$/;"	e	enum:__anon9b19faa10103	access:public
SDL_WINDOWEVENT_CLOSE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_CLOSE,          \/**< The window manager requests that the window be closed /;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_ENTER	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_ENTER,          \/**< Window has gained mouse focus *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_EXPOSED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_EXPOSED,        \/**< Window has been exposed and should be$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_FOCUS_GAINED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_GAINED,   \/**< Window has gained keyboard focus *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_FOCUS_LOST	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_LOST,     \/**< Window has lost keyboard focus *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_HIDDEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_HIDDEN,         \/**< Window has been hidden *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_HIT_TEST	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_HIT_TEST        \/**< Window had a hit test that wasn't SDL_HITTEST_NORMAL. /;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_LEAVE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_LEAVE,          \/**< Window has lost mouse focus *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_MAXIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MAXIMIZED,      \/**< Window has been maximized *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_MINIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MINIMIZED,      \/**< Window has been minimized *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_MOVED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MOVED,          \/**< Window has been moved to data1, data2$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_NONE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_NONE,           \/**< Never used *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_RESIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_RESIZED,        \/**< Window has been resized to data1xdata2 *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_RESTORED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_RESTORED,       \/**< Window has been restored to normal size$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_SHOWN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_SHOWN,          \/**< Window has been shown *\/$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_SIZE_CHANGED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_SIZE_CHANGED,   \/**< The window size has changed, either as$/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWEVENT_TAKE_FOCUS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_TAKE_FOCUS,     \/**< Window is being offered a focus (should SetWindowInput/;"	e	enum:__anon126ae9e30303	access:public
SDL_WINDOWPOS_CENTERED	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED /;"	d
SDL_WINDOWPOS_CENTERED_DISPLAY	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED_DISPLAY(/;"	d	signature:(X)
SDL_WINDOWPOS_CENTERED_MASK	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED_MASK /;"	d
SDL_WINDOWPOS_ISCENTERED	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_ISCENTERED(/;"	d	signature:(X)
SDL_WINDOWPOS_ISUNDEFINED	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_ISUNDEFINED(/;"	d	signature:(X)
SDL_WINDOWPOS_UNDEFINED	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED /;"	d
SDL_WINDOWPOS_UNDEFINED_DISPLAY	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED_DISPLAY(/;"	d	signature:(X)
SDL_WINDOWPOS_UNDEFINED_MASK	/usr/include/SDL2/SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED_MASK /;"	d
SDL_WINDOW_ALLOW_HIGHDPI	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000,      \/**< window should be created in high-DPI mode /;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_ALWAYS_ON_TOP	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_ALWAYS_ON_TOP = 0x00008000,      \/**< window should always be above others *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_BORDERLESS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_BORDERLESS = 0x00000010,         \/**< no window decoration *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_FOREIGN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FOREIGN = 0x00000800,            \/**< window not created by SDL *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_FULLSCREEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FULLSCREEN = 0x00000001,         \/**< fullscreen window *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_FULLSCREEN_DESKTOP	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_HIDDEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_HIDDEN = 0x00000008,             \/**< window is not visible *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_INPUT_FOCUS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_INPUT_FOCUS = 0x00000200,        \/**< window has input focus *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_INPUT_GRABBED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_INPUT_GRABBED = 0x00000100,      \/**< window has grabbed input focus *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_LACKS_SHAPE	/usr/include/SDL2/SDL_shape.h	/^#define SDL_WINDOW_LACKS_SHAPE /;"	d
SDL_WINDOW_MAXIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MAXIMIZED = 0x00000080,          \/**< window is maximized *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_MINIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MINIMIZED = 0x00000040,          \/**< window is minimized *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_MOUSE_CAPTURE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MOUSE_CAPTURE = 0x00004000,      \/**< window has mouse captured (unrelated to IN/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_MOUSE_FOCUS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MOUSE_FOCUS = 0x00000400,        \/**< window has mouse focus *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_OPENGL	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_OPENGL = 0x00000002,             \/**< window usable with OpenGL context *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_POPUP_MENU	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_POPUP_MENU    = 0x00080000,      \/**< window should be treated as a popup menu */;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_RESIZABLE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_RESIZABLE = 0x00000020,          \/**< window can be resized *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_SHOWN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_SHOWN = 0x00000004,              \/**< window is visible *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_SKIP_TASKBAR	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_SKIP_TASKBAR  = 0x00010000,      \/**< window should not be added to the taskbar /;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_TOOLTIP	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_TOOLTIP       = 0x00040000,      \/**< window should be treated as a tooltip *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_UTILITY	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_UTILITY       = 0x00020000,      \/**< window should be treated as a utility wind/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINDOW_VULKAN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_VULKAN        = 0x10000000       \/**< window usable for Vulkan surface *\/$/;"	e	enum:__anon126ae9e30203	access:public
SDL_WINRT_DEVICEFAMILY_DESKTOP	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_DESKTOP,$/;"	e	enum:__anon8eaecdd10203	access:public
SDL_WINRT_DEVICEFAMILY_MOBILE	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_MOBILE,$/;"	e	enum:__anon8eaecdd10203	access:public
SDL_WINRT_DEVICEFAMILY_UNKNOWN	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_UNKNOWN,$/;"	e	enum:__anon8eaecdd10203	access:public
SDL_WINRT_DEVICEFAMILY_XBOX	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_XBOX,$/;"	e	enum:__anon8eaecdd10203	access:public
SDL_WINRT_PATH_INSTALLED_LOCATION	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_PATH_INSTALLED_LOCATION,$/;"	e	enum:__anon8eaecdd10103	access:public
SDL_WINRT_PATH_LOCAL_FOLDER	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_PATH_LOCAL_FOLDER,$/;"	e	enum:__anon8eaecdd10103	access:public
SDL_WINRT_PATH_ROAMING_FOLDER	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_PATH_ROAMING_FOLDER,$/;"	e	enum:__anon8eaecdd10103	access:public
SDL_WINRT_PATH_TEMP_FOLDER	/usr/include/SDL2/SDL_system.h	/^    SDL_WINRT_PATH_TEMP_FOLDER$/;"	e	enum:__anon8eaecdd10103	access:public
SDL_WaitEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEvent(SDL_Event * event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_WaitEventTimeout	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEventTimeout(SDL_Event * event,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event,int timeout)
SDL_WaitThread	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_WaitThread(SDL_Thread * thread, int *status);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread,int * status)
SDL_WarpMouseGlobal	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_WarpMouseGlobal(int x, int y);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x,int y)
SDL_WarpMouseInWindow	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_WarpMouseInWindow(SDL_Window * window,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int x,int y)
SDL_WasInit	/usr/include/SDL2/SDL.h	/^extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(Uint32 flags)
SDL_WinRTGetDeviceFamily	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC SDL_WinRT_DeviceFamily SDLCALL SDL_WinRTGetDeviceFamily();$/;"	p	typeref:typename:DECLSPEC SDL_WinRT_DeviceFamily SDLCALL	signature:()
SDL_WinRTGetFSPathUNICODE	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const wchar_t * SDLCALL SDL_WinRTGetFSPathUNICODE(SDL_WinRT_Path pathType);$/;"	p	typeref:typename:DECLSPEC const wchar_t * SDLCALL	signature:(SDL_WinRT_Path pathType)
SDL_WinRTGetFSPathUTF8	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_WinRTGetFSPathUTF8(SDL_WinRT_Path pathType);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_WinRT_Path pathType)
SDL_WinRTRunApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_WinRTRunApp(SDL_main_func mainFunction, void * reserved);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_main_func mainFunction,void * reserved)
SDL_WinRT_DeviceFamily	/usr/include/SDL2/SDL_system.h	/^} SDL_WinRT_DeviceFamily;$/;"	t	typeref:enum:__anon8eaecdd10203
SDL_WinRT_Path	/usr/include/SDL2/SDL_system.h	/^} SDL_WinRT_Path;$/;"	t	typeref:enum:__anon8eaecdd10103
SDL_Window	/usr/include/SDL2/SDL_video.h	/^typedef struct SDL_Window SDL_Window;$/;"	t	typeref:struct:SDL_Window
SDL_WindowEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_WindowEvent$/;"	s
SDL_WindowEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_WindowEvent;$/;"	t	typeref:struct:SDL_WindowEvent
SDL_WindowEvent::data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
SDL_WindowEvent::data2	/usr/include/SDL2/SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
SDL_WindowEvent::event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEventID	/usr/include/SDL2/SDL_video.h	/^} SDL_WindowEventID;$/;"	t	typeref:enum:__anon126ae9e30303
SDL_WindowFlags	/usr/include/SDL2/SDL_video.h	/^} SDL_WindowFlags;$/;"	t	typeref:enum:__anon126ae9e30203
SDL_WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^typedef struct SDL_WindowShapeMode {$/;"	s
SDL_WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^} SDL_WindowShapeMode;$/;"	t	typeref:struct:SDL_WindowShapeMode
SDL_WindowShapeMode::mode	/usr/include/SDL2/SDL_shape.h	/^    WindowShapeMode mode;$/;"	m	struct:SDL_WindowShapeMode	typeref:typename:WindowShapeMode	access:public
SDL_WindowShapeMode::parameters	/usr/include/SDL2/SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	m	struct:SDL_WindowShapeMode	typeref:typename:SDL_WindowShapeParams	access:public
SDL_WindowShapeParams	/usr/include/SDL2/SDL_shape.h	/^} SDL_WindowShapeParams;$/;"	t	typeref:union:__anon28f69f1d020a
SDL_WindowsMessageHook	/usr/include/SDL2/SDL_system.h	/^typedef void (SDLCALL * SDL_WindowsMessageHook)(void *userdata, void *hWnd, unsigned int message/;"	t	typeref:typename:void (SDLCALL *)(void * userdata,void * hWnd,unsigned int message,Uint64 wParam,Sint64 lParam)
SDL_WriteBE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE16(SDL_RWops * dst, Uint16 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteBE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE32(SDL_RWops * dst, Uint32 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteBE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE64(SDL_RWops * dst, Uint64 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_WriteLE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE16(SDL_RWops * dst, Uint16 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteLE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE32(SDL_RWops * dst, Uint32 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteLE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE64(SDL_RWops * dst, Uint64 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_WriteU8	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteU8(SDL_RWops * dst, Uint8 value);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint8 value)
SDL_YUV_CONVERSION_AUTOMATIC	/usr/include/SDL2/SDL_surface.h	/^    SDL_YUV_CONVERSION_AUTOMATIC    \/**< BT.601 for SD content, BT.709 for HD content *\/$/;"	e	enum:__anon4591c3f50103	access:public
SDL_YUV_CONVERSION_BT601	/usr/include/SDL2/SDL_surface.h	/^    SDL_YUV_CONVERSION_BT601,       \/**< BT.601 (the default) *\/$/;"	e	enum:__anon4591c3f50103	access:public
SDL_YUV_CONVERSION_BT709	/usr/include/SDL2/SDL_surface.h	/^    SDL_YUV_CONVERSION_BT709,       \/**< BT.709 *\/$/;"	e	enum:__anon4591c3f50103	access:public
SDL_YUV_CONVERSION_JPEG	/usr/include/SDL2/SDL_surface.h	/^    SDL_YUV_CONVERSION_JPEG,        \/**< Full range JPEG *\/$/;"	e	enum:__anon4591c3f50103	access:public
SDL_YUV_CONVERSION_MODE	/usr/include/SDL2/SDL_surface.h	/^} SDL_YUV_CONVERSION_MODE;$/;"	t	typeref:enum:__anon4591c3f50103
SDL_abs	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_abs(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_acos	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_acos(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_acosf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_acosf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_arraysize	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_arraysize(/;"	d	signature:(array)
SDL_asin	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_asin(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_asinf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_asinf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_assert	/usr/include/SDL2/SDL_assert.h	/^#   define SDL_assert(/;"	d	signature:(condition)
SDL_assert_always	/usr/include/SDL2/SDL_assert.h	/^#define SDL_assert_always(/;"	d	signature:(condition)
SDL_assert_data	/usr/include/SDL2/SDL_assert.h	/^#define SDL_assert_data /;"	d
SDL_assert_h_	/usr/include/SDL2/SDL_assert.h	/^#define SDL_assert_h_$/;"	d
SDL_assert_paranoid	/usr/include/SDL2/SDL_assert.h	/^#   define SDL_assert_paranoid(/;"	d	signature:(condition)
SDL_assert_release	/usr/include/SDL2/SDL_assert.h	/^#   define SDL_assert_release(/;"	d	signature:(condition)
SDL_assert_state	/usr/include/SDL2/SDL_assert.h	/^#define SDL_assert_state /;"	d
SDL_atan	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_atan2	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan2(double x, double y);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_atan2f	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_atan2f(float x, float y);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_atanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_atanf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_atof	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atof(const char *str);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(const char * str)
SDL_atoi	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_atoi(const char *str);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str)
SDL_atomic_h_	/usr/include/SDL2/SDL_atomic.h	/^#define SDL_atomic_h_$/;"	d
SDL_atomic_t	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	t	typeref:struct:__anon67595f290108
SDL_audio_h_	/usr/include/SDL2/SDL_audio.h	/^#define SDL_audio_h_$/;"	d
SDL_beginthread	/usr/include/SDL2/SDL_thread.h	/^#define SDL_beginthread /;"	d
SDL_bits_h_	/usr/include/SDL2/SDL_bits.h	/^#define SDL_bits_h_$/;"	d
SDL_blendmode_h_	/usr/include/SDL2/SDL_blendmode.h	/^#define SDL_blendmode_h_$/;"	d
SDL_blit	/usr/include/SDL2/SDL_surface.h	/^typedef int (SDLCALL *SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,$/;"	t	typeref:typename:int (SDLCALL *)(struct SDL_Surface * src,SDL_Rect * srcrect,struct SDL_Surface * dst,SDL_Rect * dstrect)
SDL_bool	/usr/include/SDL2/SDL_stdinc.h	/^typedef int SDL_bool;$/;"	t	typeref:typename:int
SDL_bool	/usr/include/SDL2/SDL_stdinc.h	/^} SDL_bool;$/;"	t	typeref:enum:__anonea0bf3f10103
SDL_calloc	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_calloc /;"	d
SDL_calloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_calloc(size_t nmemb, size_t size);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(size_t nmemb,size_t size)
SDL_calloc_func	/usr/include/SDL2/SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_calloc_func)(size_t nmemb, size_t size);$/;"	t	typeref:typename:void * (SDLCALL *)(size_t nmemb,size_t size)
SDL_ceil	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_ceil(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_ceilf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_ceilf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_clipboard_h_	/usr/include/SDL2/SDL_clipboard.h	/^#define SDL_clipboard_h_$/;"	d
SDL_cond	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_cond SDL_cond;$/;"	t	typeref:struct:SDL_cond
SDL_config_android_h_	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_config_android_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_android.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_config_h_$/;"	d
SDL_config_h_	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_config_h_$/;"	d
SDL_config_iphoneos_h_	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SDL_config_iphoneos_h_$/;"	d
SDL_config_macosx_h_	/usr/include/SDL2/SDL_config_macosx.h	/^#define SDL_config_macosx_h_$/;"	d
SDL_config_minimal_h_	/usr/include/SDL2/SDL_config_minimal.h	/^#define SDL_config_minimal_h_$/;"	d
SDL_config_os2_h_	/usr/include/SDL2/SDL_config_os2.h	/^#define SDL_config_os2_h_$/;"	d
SDL_config_pandora_h_	/usr/include/SDL2/SDL_config_pandora.h	/^#define SDL_config_pandora_h_$/;"	d
SDL_config_psp_h_	/usr/include/SDL2/SDL_config_psp.h	/^#define SDL_config_psp_h_$/;"	d
SDL_config_windows_h_	/usr/include/SDL2/SDL_config_windows.h	/^#define SDL_config_windows_h_$/;"	d
SDL_config_winrt_h_	/usr/include/SDL2/SDL_config_winrt.h	/^#define SDL_config_winrt_h_$/;"	d
SDL_config_wiz_h_	/usr/include/SDL2/SDL_config_wiz.h	/^#define SDL_config_wiz_h_$/;"	d
SDL_const_cast	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_const_cast(/;"	d	signature:(type,expression)
SDL_copysign	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_copysign(double x, double y);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_copysignf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_copysignf(float x, float y);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_cos	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_cos(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_cosf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_cosf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_cpuinfo_h_	/usr/include/SDL2/SDL_cpuinfo.h	/^#define SDL_cpuinfo_h_$/;"	d
SDL_disabled_assert	/usr/include/SDL2/SDL_assert.h	/^#define SDL_disabled_assert(/;"	d	signature:(condition)
SDL_enabled_assert	/usr/include/SDL2/SDL_assert.h	/^#define SDL_enabled_assert(/;"	d	signature:(condition)
SDL_endian_h_	/usr/include/SDL2/SDL_endian.h	/^#define SDL_endian_h_$/;"	d
SDL_endthread	/usr/include/SDL2/SDL_thread.h	/^#define SDL_endthread /;"	d
SDL_error_h_	/usr/include/SDL2/SDL_error.h	/^#define SDL_error_h_$/;"	d
SDL_errorcode	/usr/include/SDL2/SDL_error.h	/^} SDL_errorcode;$/;"	t	typeref:enum:__anon0bce2e560103
SDL_eventaction	/usr/include/SDL2/SDL_events.h	/^} SDL_eventaction;$/;"	t	typeref:enum:__anon9b19faa10203
SDL_events_h_	/usr/include/SDL2/SDL_events.h	/^#define SDL_events_h_$/;"	d
SDL_exp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_exp(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_expf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_expf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_fabs	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_fabs(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_fabsf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_fabsf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_filesystem_h_	/usr/include/SDL2/SDL_filesystem.h	/^#define SDL_filesystem_h_$/;"	d
SDL_floor	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_floor(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_floorf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_floorf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_fmod	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_fmod(double x, double y);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_fmodf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_fmodf(float x, float y);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_framerateDelay	/usr/include/SDL2/SDL2_framerate.h	/^	SDL2_FRAMERATE_SCOPE Uint32 SDL_framerateDelay(FPSmanager * manager);$/;"	p	typeref:typename:SDL2_FRAMERATE_SCOPE Uint32	signature:(FPSmanager * manager)
SDL_free	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_free /;"	d
SDL_free	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_free(void *mem);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * mem)
SDL_free_func	/usr/include/SDL2/SDL_stdinc.h	/^typedef void (SDLCALL *SDL_free_func)(void *mem);$/;"	t	typeref:typename:void (SDLCALL *)(void * mem)
SDL_gamecontroller_h_	/usr/include/SDL2/SDL_gamecontroller.h	/^#define SDL_gamecontroller_h_$/;"	d
SDL_gesture_h_	/usr/include/SDL2/SDL_gesture.h	/^#define SDL_gesture_h_$/;"	d
SDL_getFramecount	/usr/include/SDL2/SDL2_framerate.h	/^	SDL2_FRAMERATE_SCOPE int SDL_getFramecount(FPSmanager * manager);$/;"	p	typeref:typename:SDL2_FRAMERATE_SCOPE int	signature:(FPSmanager * manager)
SDL_getFramerate	/usr/include/SDL2/SDL2_framerate.h	/^	SDL2_FRAMERATE_SCOPE int SDL_getFramerate(FPSmanager * manager);$/;"	p	typeref:typename:SDL2_FRAMERATE_SCOPE int	signature:(FPSmanager * manager)
SDL_getenv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_getenv(const char *name);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * name)
SDL_h_	/usr/include/SDL2/SDL.h	/^#define SDL_h_$/;"	d
SDL_haptic_h_	/usr/include/SDL2/SDL_haptic.h	/^#define SDL_haptic_h_$/;"	d
SDL_hints_h_	/usr/include/SDL2/SDL_hints.h	/^#define SDL_hints_h_$/;"	d
SDL_iOSSetAnimationCallback	/usr/include/SDL2/SDL_system.h	/^#define SDL_iOSSetAnimationCallback(/;"	d	signature:(window,interval,callback,callbackParam)
SDL_iOSSetEventPump	/usr/include/SDL2/SDL_system.h	/^#define SDL_iOSSetEventPump(/;"	d	signature:(enabled)
SDL_iPhoneSetAnimationCallback	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_iPhoneSetAnimationCallback(SDL_Window * window, int interval, vo/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,int interval,void (* callback)(void *),void * callbackParam)
SDL_iPhoneSetEventPump	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_iPhoneSetEventPump(SDL_bool enabled);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_bool enabled)
SDL_iconv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_iconv(SDL_iconv_t cd, const char **inbuf,$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_iconv_t cd,const char ** inbuf,size_t * inbytesleft,char ** outbuf,size_t * outbytesleft)
SDL_iconv_close	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_iconv_close(SDL_iconv_t cd);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_iconv_t cd)
SDL_iconv_open	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC SDL_iconv_t SDLCALL SDL_iconv_open(const char *tocode,$/;"	p	typeref:typename:DECLSPEC SDL_iconv_t SDLCALL	signature:(const char * tocode,const char * fromcode)
SDL_iconv_string	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_iconv_string(const char *tocode,$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * tocode,const char * fromcode,const char * inbuf,size_t inbytesleft)
SDL_iconv_t	/usr/include/SDL2/SDL_stdinc.h	/^typedef struct _SDL_iconv_t *SDL_iconv_t;$/;"	t	typeref:struct:_SDL_iconv_t *
SDL_iconv_utf8_locale	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_iconv_utf8_locale(/;"	d	signature:(S)
SDL_iconv_utf8_ucs2	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs2(/;"	d	signature:(S)
SDL_iconv_utf8_ucs4	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs4(/;"	d	signature:(S)
SDL_imageFilterAbsDiff	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterAbsDiff(unsigned char *Src1, unsigned char *Src2, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterAdd	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterAdd(unsigned char *Src1, unsigned char *Src2, unsigne/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterAddByte	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterAddByte(unsigned char *Src1, unsigned char *Dest, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char C)
SDL_imageFilterAddByteToHalf	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterAddByteToHalf(unsigned char *Src1, unsigned char *Des/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char C)
SDL_imageFilterAddUint	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterAddUint(unsigned char *Src1, unsigned char *Dest, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned int C)
SDL_imageFilterBinarizeUsingThreshold	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterBinarizeUsingThreshold(unsigned char *Src1, unsigned /;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char T)
SDL_imageFilterBitAnd	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterBitAnd(unsigned char *Src1, unsigned char *Src2, unsi/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterBitNegation	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterBitNegation(unsigned char *Src1, unsigned char *Dest,/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length)
SDL_imageFilterBitOr	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterBitOr(unsigned char *Src1, unsigned char *Src2, unsig/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterClipToRange	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterClipToRange(unsigned char *Src1, unsigned char *Dest,/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char Tmin,unsigned char Tmax)
SDL_imageFilterDiv	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterDiv(unsigned char *Src1, unsigned char *Src2, unsigne/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterMMXdetect	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMMXdetect(void);$/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(void)
SDL_imageFilterMMXoff	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE void SDL_imageFilterMMXoff(void);$/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE void	signature:(void)
SDL_imageFilterMMXon	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE void SDL_imageFilterMMXon(void);$/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE void	signature:(void)
SDL_imageFilterMean	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMean(unsigned char *Src1, unsigned char *Src2, unsign/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterMult	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMult(unsigned char *Src1, unsigned char *Src2, unsign/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterMultByByte	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMultByByte(unsigned char *Src1, unsigned char *Dest, /;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char C)
SDL_imageFilterMultDivby2	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMultDivby2(unsigned char *Src1, unsigned char *Src2, /;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterMultDivby4	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMultDivby4(unsigned char *Src1, unsigned char *Src2, /;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterMultNor	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterMultNor(unsigned char *Src1, unsigned char *Src2, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterNormalizeLinear	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterNormalizeLinear(unsigned char *Src, unsigned char *De/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src,unsigned char * Dest,unsigned int length,int Cmin,int Cmax,int Nmin,int Nmax)
SDL_imageFilterShiftLeft	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftLeft(unsigned char *Src1, unsigned char *Dest, u/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N)
SDL_imageFilterShiftLeftByte	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftLeftByte(unsigned char *Src1, unsigned char *Des/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N)
SDL_imageFilterShiftLeftUint	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftLeftUint(unsigned char *Src1, unsigned char *Des/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N)
SDL_imageFilterShiftRight	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftRight(unsigned char *Src1, unsigned char *Dest, /;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N)
SDL_imageFilterShiftRightAndMultByByte	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftRightAndMultByByte(unsigned char *Src1, unsigned/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N,unsigned char C)
SDL_imageFilterShiftRightUint	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterShiftRightUint(unsigned char *Src1, unsigned char *De/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char N)
SDL_imageFilterSub	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterSub(unsigned char *Src1, unsigned char *Src2, unsigne/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Src2,unsigned char * Dest,unsigned int length)
SDL_imageFilterSubByte	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterSubByte(unsigned char *Src1, unsigned char *Dest, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned char C)
SDL_imageFilterSubUint	/usr/include/SDL2/SDL2_imageFilter.h	/^	SDL2_IMAGEFILTER_SCOPE int SDL_imageFilterSubUint(unsigned char *Src1, unsigned char *Dest, uns/;"	p	typeref:typename:SDL2_IMAGEFILTER_SCOPE int	signature:(unsigned char * Src1,unsigned char * Dest,unsigned int length,unsigned int C)
SDL_initFramerate	/usr/include/SDL2/SDL2_framerate.h	/^	SDL2_FRAMERATE_SCOPE void SDL_initFramerate(FPSmanager * manager);$/;"	p	typeref:typename:SDL2_FRAMERATE_SCOPE void	signature:(FPSmanager * manager)
SDL_isdigit	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isdigit(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_islower	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_islower(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_isspace	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isspace(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_isupper	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isupper(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_itoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_itoa(int value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int value,char * str,int radix)
SDL_joystick_h_	/usr/include/SDL2/SDL_joystick.h	/^#define SDL_joystick_h_$/;"	d
SDL_keyboard_h_	/usr/include/SDL2/SDL_keyboard.h	/^#define SDL_keyboard_h_$/;"	d
SDL_keycode_h_	/usr/include/SDL2/SDL_keycode.h	/^#define SDL_keycode_h_$/;"	d
SDL_lltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_lltoa(Sint64 value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Sint64 value,char * str,int radix)
SDL_loadso_h_	/usr/include/SDL2/SDL_loadso.h	/^#define SDL_loadso_h_$/;"	d
SDL_log	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_log(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_log10	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_log10(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_log10f	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_log10f(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_log_h_	/usr/include/SDL2/SDL_log.h	/^#define SDL_log_h_$/;"	d
SDL_logf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_logf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_ltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ltoa(long value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(long value,char * str,int radix)
SDL_main	/usr/include/SDL2/SDL_main.h	/^extern SDLMAIN_DECLSPEC int SDL_main(int argc, char *argv[]);$/;"	p	typeref:typename:SDLMAIN_DECLSPEC int	signature:(int argc,char * argv[])
SDL_main_func	/usr/include/SDL2/SDL_main.h	/^typedef int (*SDL_main_func)(int argc, char *argv[]);$/;"	t	typeref:typename:int (*)(int argc,char * argv[])
SDL_main_h_	/usr/include/SDL2/SDL_main.h	/^#define SDL_main_h_$/;"	d
SDL_malloc	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_malloc /;"	d
SDL_malloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_malloc(size_t size);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(size_t size)
SDL_malloc_func	/usr/include/SDL2/SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_malloc_func)(size_t size);$/;"	t	typeref:typename:void * (SDLCALL *)(size_t size)
SDL_max	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_max(/;"	d	signature:(x,y)
SDL_memcmp	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_memcmp /;"	d
SDL_memcmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_memcmp(const void *s1, const void *s2, size_t len);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const void * s1,const void * s2,size_t len)
SDL_memcpy	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_memcpy /;"	d
SDL_memcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memcpy(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) con/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,SDL_IN_BYTECAP (len)const void * src,size_t len)
SDL_memmove	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_memmove /;"	d
SDL_memmove	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memmove(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) co/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,SDL_IN_BYTECAP (len)const void * src,size_t len)
SDL_memset	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_memset /;"	d
SDL_memset	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memset(SDL_OUT_BYTECAP(len) void *dst, int c, size_t len);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,int c,size_t len)
SDL_memset4	/usr/include/SDL2/SDL_stdinc.h	/^SDL_FORCE_INLINE void SDL_memset4(void *dst, Uint32 val, size_t dwords)$/;"	f	typeref:typename:SDL_FORCE_INLINE void	signature:(void * dst,Uint32 val,size_t dwords)
SDL_messagebox_h_	/usr/include/SDL2/SDL_messagebox.h	/^#define SDL_messagebox_h_$/;"	d
SDL_metal_h_	/usr/include/SDL2/SDL_metal.h	/^#define SDL_metal_h_$/;"	d
SDL_min	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_min(/;"	d	signature:(x,y)
SDL_mouse_h_	/usr/include/SDL2/SDL_mouse.h	/^#define SDL_mouse_h_$/;"	d
SDL_mutex	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_mutex SDL_mutex;$/;"	t	typeref:struct:SDL_mutex
SDL_mutexP	/usr/include/SDL2/SDL_mutex.h	/^#define SDL_mutexP(/;"	d	signature:(m)
SDL_mutexV	/usr/include/SDL2/SDL_mutex.h	/^#define SDL_mutexV(/;"	d	signature:(m)
SDL_mutex_h_	/usr/include/SDL2/SDL_mutex.h	/^#define SDL_mutex_h_$/;"	d
SDL_opengl_h_	/usr/include/SDL2/SDL_opengl.h	/^#define SDL_opengl_h_$/;"	d
SDL_pixels_h_	/usr/include/SDL2/SDL_pixels.h	/^#define SDL_pixels_h_$/;"	d
SDL_platform_h_	/usr/include/SDL2/SDL_platform.h	/^#define SDL_platform_h_$/;"	d
SDL_pow	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_pow(double x, double y);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_power_h_	/usr/include/SDL2/SDL_power.h	/^#define SDL_power_h_$/;"	d
SDL_powf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_powf(float x, float y);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_qsort	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_qsort(void *base, size_t nmemb, size_t size, int (*compare) (co/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * base,size_t nmemb,size_t size,int (* compare)(const void *,const void *))
SDL_quit_h_	/usr/include/SDL2/SDL_quit.h	/^#define SDL_quit_h_$/;"	d
SDL_realloc	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_realloc /;"	d
SDL_realloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_realloc(void *mem, size_t size);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * mem,size_t size)
SDL_realloc_func	/usr/include/SDL2/SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_realloc_func)(void *mem, size_t size);$/;"	t	typeref:typename:void * (SDLCALL *)(void * mem,size_t size)
SDL_rect_h_	/usr/include/SDL2/SDL_rect.h	/^#define SDL_rect_h_$/;"	d
SDL_reinterpret_cast	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_reinterpret_cast(/;"	d	signature:(type,expression)
SDL_render_h_	/usr/include/SDL2/SDL_render.h	/^#define SDL_render_h_$/;"	d
SDL_rwops_h_	/usr/include/SDL2/SDL_rwops.h	/^#define SDL_rwops_h_$/;"	d
SDL_scalbn	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_scalbn(double x, int n);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,int n)
SDL_scalbnf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_scalbnf(float x, int n);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,int n)
SDL_scancode_h_	/usr/include/SDL2/SDL_scancode.h	/^#define SDL_scancode_h_$/;"	d
SDL_sem	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_semaphore SDL_sem;$/;"	t	typeref:struct:SDL_semaphore
SDL_sensor_h_	/usr/include/SDL2/SDL_sensor.h	/^#define SDL_sensor_h_$/;"	d
SDL_setFramerate	/usr/include/SDL2/SDL2_framerate.h	/^	SDL2_FRAMERATE_SCOPE int SDL_setFramerate(FPSmanager * manager, Uint32 rate);$/;"	p	typeref:typename:SDL2_FRAMERATE_SCOPE int	signature:(FPSmanager * manager,Uint32 rate)
SDL_setenv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_setenv(const char *name, const char *value, int overwrite);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * name,const char * value,int overwrite)
SDL_shape_h_	/usr/include/SDL2/SDL_shape.h	/^#define SDL_shape_h_$/;"	d
SDL_sin	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sin(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_sinf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_sinf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_snprintf	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_snprintf /;"	d
SDL_snprintf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_snprintf(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, SDL_PR/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * text,size_t maxlen,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_sqrt	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sqrt(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_sqrtf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_sqrtf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_sscanf	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_sscanf /;"	d
SDL_sscanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_sscanf(const char *text, SDL_SCANF_FORMAT_STRING const char *fmt/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text,SDL_SCANF_FORMAT_STRING const char * fmt,...)
SDL_stack_alloc	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_stack_alloc(/;"	d	signature:(type,count)
SDL_stack_free	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_stack_free(/;"	d	signature:(data)
SDL_static_cast	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_static_cast(/;"	d	signature:(type,expression)
SDL_stdinc_h_	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_stdinc_h_$/;"	d
SDL_strcasecmp	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strcasecmp /;"	d
SDL_strcasecmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcasecmp(const char *str1, const char *str2);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strchr	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strchr /;"	d
SDL_strchr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strchr(const char *str, int c);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str,int c)
SDL_strcmp	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strcmp /;"	d
SDL_strcmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcmp(const char *str1, const char *str2);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strdup	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strdup /;"	d
SDL_strdup	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strdup(const char *str);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str)
SDL_strlcat	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strlcat /;"	d
SDL_strlcat	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcat(SDL_INOUT_Z_CAP(maxlen) char *dst, const char *src, s/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_INOUT_Z_CAP (maxlen)char * dst,const char * src,size_t maxlen)
SDL_strlcpy	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strlcpy /;"	d
SDL_strlcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcpy(SDL_OUT_Z_CAP(maxlen) char *dst, const char *src, siz/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * dst,const char * src,size_t maxlen)
SDL_strlen	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strlen /;"	d
SDL_strlen	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlen(const char *str);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const char * str)
SDL_strlwr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strlwr(char *str);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_strncasecmp	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strncasecmp /;"	d
SDL_strncasecmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncasecmp(const char *str1, const char *str2, size_t len);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t len)
SDL_strncmp	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strncmp /;"	d
SDL_strncmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncmp(const char *str1, const char *str2, size_t maxlen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t maxlen)
SDL_strrchr	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strrchr /;"	d
SDL_strrchr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrchr(const char *str, int c);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str,int c)
SDL_strrev	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrev(char *str);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_strstr	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strstr /;"	d
SDL_strstr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strstr(const char *haystack, const char *needle);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * haystack,const char * needle)
SDL_strtod	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_strtod(const char *str, char **endp);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(const char * str,char ** endp)
SDL_strtokr	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_strtokr /;"	d
SDL_strtokr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strtokr(char *s1, const char *s2, char **saveptr);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * s1,const char * s2,char ** saveptr)
SDL_strtol	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC long SDLCALL SDL_strtol(const char *str, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC long SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoll	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC Sint64 SDLCALL SDL_strtoll(const char *str, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoul	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC unsigned long SDLCALL SDL_strtoul(const char *str, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC unsigned long SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoull	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC Uint64 SDLCALL SDL_strtoull(const char *str, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strupr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strupr(char *str);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_surface_h_	/usr/include/SDL2/SDL_surface.h	/^#define SDL_surface_h_$/;"	d
SDL_system_h_	/usr/include/SDL2/SDL_system.h	/^#define SDL_system_h_$/;"	d
SDL_syswm_h_	/usr/include/SDL2/SDL_syswm.h	/^#define SDL_syswm_h_$/;"	d
SDL_tan	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_tan(double x);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_tanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_tanf(float x);$/;"	p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_test_assert_h_	/usr/include/SDL2/SDL_test_assert.h	/^#define SDL_test_assert_h_$/;"	d
SDL_test_common_h_	/usr/include/SDL2/SDL_test_common.h	/^#define SDL_test_common_h_$/;"	d
SDL_test_compare_h_	/usr/include/SDL2/SDL_test_compare.h	/^#define SDL_test_compare_h_$/;"	d
SDL_test_crc32_h_	/usr/include/SDL2/SDL_test_crc32.h	/^#define SDL_test_crc32_h_$/;"	d
SDL_test_font_h_	/usr/include/SDL2/SDL_test_font.h	/^#define SDL_test_font_h_$/;"	d
SDL_test_fuzzer_h_	/usr/include/SDL2/SDL_test_fuzzer.h	/^#define SDL_test_fuzzer_h_$/;"	d
SDL_test_h_	/usr/include/SDL2/SDL_test.h	/^#define SDL_test_h_$/;"	d
SDL_test_h_arness_h	/usr/include/SDL2/SDL_test_harness.h	/^#define SDL_test_h_arness_h$/;"	d
SDL_test_images_h_	/usr/include/SDL2/SDL_test_images.h	/^#define SDL_test_images_h_$/;"	d
SDL_test_log_h_	/usr/include/SDL2/SDL_test_log.h	/^#define SDL_test_log_h_$/;"	d
SDL_test_md5_h_	/usr/include/SDL2/SDL_test_md5.h	/^#define SDL_test_md5_h_$/;"	d
SDL_test_memory_h_	/usr/include/SDL2/SDL_test_memory.h	/^#define SDL_test_memory_h_$/;"	d
SDL_test_random_h_	/usr/include/SDL2/SDL_test_random.h	/^#define SDL_test_random_h_$/;"	d
SDL_threadID	/usr/include/SDL2/SDL_thread.h	/^typedef unsigned long SDL_threadID;$/;"	t	typeref:typename:unsigned long
SDL_thread_h_	/usr/include/SDL2/SDL_thread.h	/^#define SDL_thread_h_$/;"	d
SDL_timer_h_	/usr/include/SDL2/SDL_timer.h	/^#define SDL_timer_h_$/;"	d
SDL_tolower	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_tolower(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_touch_h_	/usr/include/SDL2/SDL_touch.h	/^#define SDL_touch_h_$/;"	d
SDL_toupper	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_toupper(int x);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_uitoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_uitoa(unsigned int value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(unsigned int value,char * str,int radix)
SDL_ulltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ulltoa(Uint64 value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Uint64 value,char * str,int radix)
SDL_ultoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ultoa(unsigned long value, char *str, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(unsigned long value,char * str,int radix)
SDL_utf8strlcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_utf8strlcpy(SDL_OUT_Z_CAP(dst_bytes) char *dst, const char *s/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (dst_bytes)char * dst,const char * src,size_t dst_bytes)
SDL_utf8strlen	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_utf8strlen(const char *str);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const char * str)
SDL_version	/usr/include/SDL2/SDL_version.h	/^typedef struct SDL_version$/;"	s
SDL_version	/usr/include/SDL2/SDL_version.h	/^} SDL_version;$/;"	t	typeref:struct:SDL_version
SDL_version::major	/usr/include/SDL2/SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::minor	/usr/include/SDL2/SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::patch	/usr/include/SDL2/SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version_h_	/usr/include/SDL2/SDL_version.h	/^#define SDL_version_h_$/;"	d
SDL_video_h_	/usr/include/SDL2/SDL_video.h	/^#define SDL_video_h_$/;"	d
SDL_vsnprintf	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_vsnprintf /;"	d
SDL_vsnprintf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsnprintf(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, const/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * text,size_t maxlen,const char * fmt,va_list ap)
SDL_vsscanf	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_vsscanf /;"	d
SDL_vsscanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsscanf(const char *text, const char *fmt, va_list ap);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text,const char * fmt,va_list ap)
SDL_vulkanInstance	/usr/include/SDL2/SDL_vulkan.h	/^typedef VkInstance SDL_vulkanInstance;$/;"	t	typeref:typename:VkInstance
SDL_vulkanSurface	/usr/include/SDL2/SDL_vulkan.h	/^typedef VkSurfaceKHR SDL_vulkanSurface; \/* for compatibility with Tizen *\/$/;"	t	typeref:typename:VkSurfaceKHR
SDL_vulkan_h_	/usr/include/SDL2/SDL_vulkan.h	/^#define SDL_vulkan_h_$/;"	d
SDL_wcscmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_wcscmp(const wchar_t *str1, const wchar_t *str2);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const wchar_t * str1,const wchar_t * str2)
SDL_wcsdup	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC wchar_t *SDLCALL SDL_wcsdup(const wchar_t *wstr);$/;"	p	typeref:typename:DECLSPEC wchar_t * SDLCALL	signature:(const wchar_t * wstr)
SDL_wcslcat	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcat(SDL_INOUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t */;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_INOUT_Z_CAP (maxlen)wchar_t * dst,const wchar_t * src,size_t maxlen)
SDL_wcslcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcpy(SDL_OUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *sr/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)wchar_t * dst,const wchar_t * src,size_t maxlen)
SDL_wcslen	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslen(const wchar_t *wstr);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const wchar_t * wstr)
SDL_wcsncmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_wcsncmp(const wchar_t *str1, const wchar_t *str2, size_t maxlen)/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const wchar_t * str1,const wchar_t * str2,size_t maxlen)
SDL_wcsstr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC wchar_t *SDLCALL SDL_wcsstr(const wchar_t *haystack, const wchar_t *needle);$/;"	p	typeref:typename:DECLSPEC wchar_t * SDLCALL	signature:(const wchar_t * haystack,const wchar_t * needle)
SDL_zero	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_zero(/;"	d	signature:(x)
SDL_zeroa	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_zeroa(/;"	d	signature:(x)
SDL_zerop	/usr/include/SDL2/SDL_stdinc.h	/^#define SDL_zerop(/;"	d	signature:(x)
SDLname_h_	/usr/include/SDL2/SDL_name.h	/^#define SDLname_h_$/;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config.h	/^#define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_android.h	/^#define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_macosx.h	/^    #define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_pandora.h	/^#define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_windows.h	/^# define SIZEOF_VOIDP /;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config_winrt.h	/^# define SIZEOF_VOIDP /;"	d
SMOOTHING_OFF	/usr/include/SDL2/SDL2_rotozoom.h	/^#define SMOOTHING_OFF	/;"	d
SMOOTHING_ON	/usr/include/SDL2/SDL2_rotozoom.h	/^#define SMOOTHING_ON	/;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_android.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_iphoneos.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_macosx.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_os2.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_pandora.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_psp.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_windows.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_winrt.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config_wiz.h	/^#define STDC_HEADERS /;"	d
ShapeModeBinarizeAlpha	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeBinarizeAlpha,$/;"	e	enum:__anon28f69f1d0103	access:public
ShapeModeColorKey	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeColorKey$/;"	e	enum:__anon28f69f1d0103	access:public
ShapeModeDefault	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeDefault,$/;"	e	enum:__anon28f69f1d0103	access:public
ShapeModeReverseBinarizeAlpha	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeReverseBinarizeAlpha,$/;"	e	enum:__anon28f69f1d0103	access:public
Sint16	/usr/include/SDL2/SDL_stdinc.h	/^typedef int16_t Sint16;$/;"	t	typeref:typename:int16_t
Sint32	/usr/include/SDL2/SDL_stdinc.h	/^typedef int32_t Sint32;$/;"	t	typeref:typename:int32_t
Sint64	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * seek)
Sint64	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * size)
Sint64	/usr/include/SDL2/SDL_stdinc.h	/^typedef int64_t Sint64;$/;"	t	typeref:typename:int64_t
Sint8	/usr/include/SDL2/SDL_stdinc.h	/^typedef int8_t Sint8;$/;"	t	typeref:typename:int8_t
TCPsocket	/usr/include/SDL2/SDL_net.h	/^typedef struct _TCPsocket *TCPsocket;$/;"	t	typeref:struct:_TCPsocket *
TEST_ABORTED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_ABORTED /;"	d
TEST_COMPLETED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_COMPLETED /;"	d
TEST_DISABLED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_DISABLED /;"	d
TEST_ENABLED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_ENABLED /;"	d
TEST_RESULT_FAILED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_RESULT_FAILED /;"	d
TEST_RESULT_NO_ASSERT	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_RESULT_NO_ASSERT /;"	d
TEST_RESULT_PASSED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_RESULT_PASSED /;"	d
TEST_RESULT_SETUP_FAILURE	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_RESULT_SETUP_FAILURE /;"	d
TEST_RESULT_SKIPPED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_RESULT_SKIPPED /;"	d
TEST_SKIPPED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_SKIPPED /;"	d
TEST_STARTED	/usr/include/SDL2/SDL_test_harness.h	/^#define TEST_STARTED /;"	d
TTF_ByteSwappedUNICODE	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_ByteSwappedUNICODE(int swapped);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int swapped)
TTF_CloseFont	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_CloseFont(TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font)
TTF_Font	/usr/include/SDL2/SDL_ttf.h	/^typedef struct _TTF_Font TTF_Font;$/;"	t	typeref:struct:_TTF_Font
TTF_FontAscent	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontAscent(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontDescent	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontDescent(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceFamilyName	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceFamilyName(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceIsFixedWidth	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontFaceIsFixedWidth(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceStyleName	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceStyleName(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaces	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC long SDLCALL TTF_FontFaces(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC long SDLCALL	signature:(const TTF_Font * font)
TTF_FontHeight	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontHeight(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontLineSkip	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontLineSkip(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetError	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_GetError /;"	d
TTF_GetFontHinting	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontHinting(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerning	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontKerning(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerningSize	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int TTF_GetFontKerningSize(TTF_Font *font, int prev_index, int index) SDL_DEPREC/;"	p	typeref:typename:DECLSPEC int	signature:(TTF_Font * font,int prev_index,int index)
TTF_GetFontKerningSizeGlyphs	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int TTF_GetFontKerningSizeGlyphs(TTF_Font *font, Uint16 previous_ch, Uint16 ch);$/;"	p	typeref:typename:DECLSPEC int	signature:(TTF_Font * font,Uint16 previous_ch,Uint16 ch)
TTF_GetFontOutline	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontOutline(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontStyle	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontStyle(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GlyphIsProvided	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphIsProvided(const TTF_Font *font, Uint16 ch);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font,Uint16 ch)
TTF_GlyphMetrics	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphMetrics(TTF_Font *font, Uint16 ch,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,Uint16 ch,int * minx,int * maxx,int * miny,int * maxy,int * advance)
TTF_HINTING_LIGHT	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_HINTING_LIGHT /;"	d
TTF_HINTING_MONO	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_HINTING_MONO /;"	d
TTF_HINTING_NONE	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_HINTING_NONE /;"	d
TTF_HINTING_NORMAL	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_HINTING_NORMAL /;"	d
TTF_Init	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_Init(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
TTF_Linked_Version	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC const SDL_version * SDLCALL TTF_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
TTF_MAJOR_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_MAJOR_VERSION /;"	d
TTF_MINOR_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_MINOR_VERSION /;"	d
TTF_OpenFont	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFont(const char *file, int ptsize);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize)
TTF_OpenFontIndex	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndex(const char *file, int ptsize, long index);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize,long index)
TTF_OpenFontIndexRW	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndexRW(SDL_RWops *src, int freesrc, int ptsize, /;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize,long index)
TTF_OpenFontRW	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontRW(SDL_RWops *src, int freesrc, int ptsize);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize)
TTF_PATCHLEVEL	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_PATCHLEVEL /;"	d
TTF_Quit	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
TTF_RenderGlyph_Blended	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderGlyph_Shaded	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg,SDL_Color bg)
TTF_RenderGlyph_Solid	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderText	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_RenderText(/;"	d	signature:(font,text,fg,bg)
TTF_RenderText_Blended	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderText_Blended_Wrapped	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Blended_Wrapped(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderText_Shaded	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderText_Solid	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUNICODE	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_RenderUNICODE(/;"	d	signature:(font,text,fg,bg)
TTF_RenderUNICODE_Blended	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUNICODE_Blended_Wrapped	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Blended_Wrapped(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderUNICODE_Shaded	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUNICODE_Solid	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUTF8	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_RenderUTF8(/;"	d	signature:(font,text,fg,bg)
TTF_RenderUTF8_Blended	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUTF8_Blended_Wrapped	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Blended_Wrapped(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderUTF8_Shaded	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUTF8_Solid	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_STYLE_BOLD	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_STYLE_BOLD /;"	d
TTF_STYLE_ITALIC	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_STYLE_ITALIC /;"	d
TTF_STYLE_NORMAL	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_STYLE_NORMAL /;"	d
TTF_STYLE_STRIKETHROUGH	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_STYLE_STRIKETHROUGH /;"	d
TTF_STYLE_UNDERLINE	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_STYLE_UNDERLINE /;"	d
TTF_SetError	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_SetError /;"	d
TTF_SetFontHinting	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontHinting(TTF_Font *font, int hinting);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int hinting)
TTF_SetFontKerning	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontKerning(TTF_Font *font, int allowed);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int allowed)
TTF_SetFontOutline	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontOutline(TTF_Font *font, int outline);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int outline)
TTF_SetFontStyle	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontStyle(TTF_Font *font, int style);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int style)
TTF_SizeText	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeText(TTF_Font *font, const char *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_SizeUNICODE	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUNICODE(TTF_Font *font, const Uint16 *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const Uint16 * text,int * w,int * h)
TTF_SizeUTF8	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUTF8(TTF_Font *font, const char *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_VERSION	/usr/include/SDL2/SDL_ttf.h	/^#define TTF_VERSION(/;"	d	signature:(X)
TTF_WasInit	/usr/include/SDL2/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_WasInit(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
UDPpacket	/usr/include/SDL2/SDL_net.h	/^} UDPpacket;$/;"	t	typeref:struct:__anonf2bfe3b30208
UDPsocket	/usr/include/SDL2/SDL_net.h	/^typedef struct _UDPsocket *UDPsocket;$/;"	t	typeref:struct:_UDPsocket *
UIViewController	/usr/include/SDL2/SDL_syswm.h	/^typedef struct _UIViewController UIViewController;$/;"	t	typeref:struct:_UIViewController
UIWindow	/usr/include/SDL2/SDL_syswm.h	/^typedef struct _UIWindow UIWindow;$/;"	t	typeref:struct:_UIWindow
UNICODE_BOM_NATIVE	/usr/include/SDL2/SDL_ttf.h	/^#define UNICODE_BOM_NATIVE /;"	d
UNICODE_BOM_SWAPPED	/usr/include/SDL2/SDL_ttf.h	/^#define UNICODE_BOM_SWAPPED /;"	d
Uint16	/usr/include/SDL2/SDL_net.h	/^typedef uint16_t Uint16;$/;"	t	typeref:typename:uint16_t
Uint16	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint16_t Uint16;$/;"	t	typeref:typename:uint16_t
Uint32	/usr/include/SDL2/SDL_net.h	/^typedef uint32_t Uint32;$/;"	t	typeref:typename:uint32_t
Uint32	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint32_t Uint32;$/;"	t	typeref:typename:uint32_t
Uint64	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint64_t Uint64;$/;"	t	typeref:typename:uint64_t
Uint8	/usr/include/SDL2/SDL_net.h	/^typedef uint8_t Uint8;$/;"	t	typeref:typename:uint8_t
Uint8	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint8_t Uint8;$/;"	t	typeref:typename:uint8_t
VERBOSE_AUDIO	/usr/include/SDL2/SDL_test_common.h	/^#define VERBOSE_AUDIO /;"	d
VERBOSE_EVENT	/usr/include/SDL2/SDL_test_common.h	/^#define VERBOSE_EVENT /;"	d
VERBOSE_MODES	/usr/include/SDL2/SDL_test_common.h	/^#define VERBOSE_MODES /;"	d
VERBOSE_RENDER	/usr/include/SDL2/SDL_test_common.h	/^#define VERBOSE_RENDER /;"	d
VERBOSE_VIDEO	/usr/include/SDL2/SDL_test_common.h	/^#define VERBOSE_VIDEO /;"	d
VK_DEFINE_HANDLE	/usr/include/SDL2/SDL_vulkan.h	/^#define VK_DEFINE_HANDLE(/;"	d	signature:(object)
VK_DEFINE_NON_DISPATCHABLE_HANDLE	/usr/include/SDL2/SDL_vulkan.h	/^#define VK_DEFINE_NON_DISPATCHABLE_HANDLE(/;"	d	signature:(object)
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_egl.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_opengl.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_opengl_glext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_syswm.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WINAPI_FAMILY_WINRT	/usr/include/SDL2/SDL_platform.h	/^#define WINAPI_FAMILY_WINRT /;"	d
WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^} WindowShapeMode;$/;"	t	typeref:enum:__anon28f69f1d0103
_ReadWriteBarrier	/usr/include/SDL2/SDL_atomic.h	/^void _ReadWriteBarrier(void);$/;"	p	typeref:typename:void	signature:(void)
_SDL2_framerate_h	/usr/include/SDL2/SDL2_framerate.h	/^#define _SDL2_framerate_h$/;"	d
_SDL2_gfxPrimitives_h	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^#define _SDL2_gfxPrimitives_h$/;"	d
_SDL2_imageFilter_h	/usr/include/SDL2/SDL2_imageFilter.h	/^#define _SDL2_imageFilter_h$/;"	d
_SDL2_rotozoom_h	/usr/include/SDL2/SDL2_rotozoom.h	/^#define _SDL2_rotozoom_h$/;"	d
_SDLNet_GenericSocket	/usr/include/SDL2/SDL_net.h	/^typedef struct _SDLNet_GenericSocket {$/;"	s
_SDLNet_GenericSocket::ready	/usr/include/SDL2/SDL_net.h	/^    int ready;$/;"	m	struct:_SDLNet_GenericSocket	typeref:typename:int	access:public
_SDLNet_Read16	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE Uint16 _SDLNet_Read16(const void *areap)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint16	signature:(const void * areap)
_SDLNet_Read16	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE Uint16 _SDLNet_Read16(void *areap)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint16	signature:(void * areap)
_SDLNet_Read32	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE Uint32 _SDLNet_Read32(const void *areap)$/;"	f	typeref:typename:SDL_FORCE_INLINE Uint32	signature:(const void * areap)
_SDLNet_SocketReady	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE int _SDLNet_SocketReady(SDLNet_GenericSocket sock)$/;"	f	typeref:typename:SDL_FORCE_INLINE int	signature:(SDLNet_GenericSocket sock)
_SDLNet_Write16	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE void _SDLNet_Write16(Uint16 value, void *areap)$/;"	f	typeref:typename:SDL_FORCE_INLINE void	signature:(Uint16 value,void * areap)
_SDLNet_Write32	/usr/include/SDL2/SDL_net.h	/^SDL_FORCE_INLINE void _SDLNet_Write32(Uint32 value, void *areap)$/;"	f	typeref:typename:SDL_FORCE_INLINE void	signature:(Uint32 value,void * areap)
_SDL_NET_H	/usr/include/SDL2/SDL_net.h	/^#define _SDL_NET_H$/;"	d
_SDL_clz_watcom	/usr/include/SDL2/SDL_bits.h	/^extern _inline int _SDL_clz_watcom (Uint32);$/;"	p	typeref:typename:_inline int	signature:(Uint32)
_SIZE_T_DEFINED_	/usr/include/SDL2/SDL_config.h	/^#define _SIZE_T_DEFINED_$/;"	d
_SIZE_T_DEFINED_	/usr/include/SDL2/SDL_config_windows.h	/^#define _SIZE_T_DEFINED_$/;"	d
_SIZE_T_DEFINED_	/usr/include/SDL2/SDL_config_winrt.h	/^#define _SIZE_T_DEFINED_$/;"	d
_System	/usr/include/SDL2/SDL_opengl.h	/^#    define _System$/;"	d
_System	/usr/include/SDL2/begin_code.h	/^#  define _System /;"	d
_UINTPTR_T_DEFINED	/usr/include/SDL2/SDL_config.h	/^#define _UINTPTR_T_DEFINED$/;"	d
_UINTPTR_T_DEFINED	/usr/include/SDL2/SDL_config_windows.h	/^#define _UINTPTR_T_DEFINED$/;"	d
_UINTPTR_T_DEFINED	/usr/include/SDL2/SDL_config_winrt.h	/^#define _UINTPTR_T_DEFINED$/;"	d
_USE_MATH_DEFINES	/usr/include/SDL2/SDL_stdinc.h	/^#  define _USE_MATH_DEFINES$/;"	d
__3dNOW__	/usr/include/SDL2/SDL_cpuinfo.h	/^#define __3dNOW__$/;"	d
__AIX__	/usr/include/SDL2/SDL_platform.h	/^#define __AIX__ /;"	d
__ANDROID__	/usr/include/SDL2/SDL_platform.h	/^#define __ANDROID__ /;"	d
__ARM_NEON	/usr/include/SDL2/SDL_cpuinfo.h	/^#      define __ARM_NEON /;"	d
__BSDI__	/usr/include/SDL2/SDL_platform.h	/^#define __BSDI__ /;"	d
__DREAMCAST__	/usr/include/SDL2/SDL_platform.h	/^#define __DREAMCAST__ /;"	d
__FREEBSD__	/usr/include/SDL2/SDL_platform.h	/^#define __FREEBSD__ /;"	d
__HAIKU__	/usr/include/SDL2/SDL_platform.h	/^#define __HAIKU__ /;"	d
__HPUX__	/usr/include/SDL2/SDL_platform.h	/^#define __HPUX__ /;"	d
__IPHONEOS__	/usr/include/SDL2/SDL_platform.h	/^#define __IPHONEOS__ /;"	d
__IRIX__	/usr/include/SDL2/SDL_platform.h	/^#define __IRIX__ /;"	d
__LINUX__	/usr/include/SDL2/SDL_platform.h	/^#define __LINUX__ /;"	d
__MACOSX__	/usr/include/SDL2/SDL_platform.h	/^#define __MACOSX__ /;"	d
__MMX__	/usr/include/SDL2/SDL_cpuinfo.h	/^#define __MMX__$/;"	d
__NACL__	/usr/include/SDL2/SDL_platform.h	/^#define __NACL__ /;"	d
__NETBSD__	/usr/include/SDL2/SDL_platform.h	/^#define __NETBSD__ /;"	d
__OPENBSD__	/usr/include/SDL2/SDL_platform.h	/^#define __OPENBSD__ /;"	d
__OS2__	/usr/include/SDL2/SDL_platform.h	/^#define __OS2__ /;"	d
__OSF__	/usr/include/SDL2/SDL_platform.h	/^#define __OSF__ /;"	d
__PNACL__	/usr/include/SDL2/SDL_platform.h	/^#define __PNACL__ /;"	d
__PSP__	/usr/include/SDL2/SDL_platform.h	/^#define __PSP__ /;"	d
__QNXNTO__	/usr/include/SDL2/SDL_platform.h	/^#define __QNXNTO__ /;"	d
__RISCOS__	/usr/include/SDL2/SDL_platform.h	/^#define __RISCOS__ /;"	d
__SDL_NOGETPROCADDR__	/usr/include/SDL2/SDL_platform.h	/^#define __SDL_NOGETPROCADDR__$/;"	d
__SOLARIS__	/usr/include/SDL2/SDL_platform.h	/^#define __SOLARIS__ /;"	d
__SSE2__	/usr/include/SDL2/SDL_cpuinfo.h	/^#define __SSE2__$/;"	d
__SSE__	/usr/include/SDL2/SDL_cpuinfo.h	/^#define __SSE__$/;"	d
__TVOS__	/usr/include/SDL2/SDL_platform.h	/^#define __TVOS__ /;"	d
__WIN32__	/usr/include/SDL2/SDL_opengl.h	/^#define __WIN32__$/;"	d
__WIN32__	/usr/include/SDL2/SDL_platform.h	/^#define __WIN32__ /;"	d
__WINDOWS__	/usr/include/SDL2/SDL_platform.h	/^#define __WINDOWS__ /;"	d
__WINRT__	/usr/include/SDL2/SDL_platform.h	/^#define __WINRT__ /;"	d
__anon04d11f350108	/usr/include/SDL2/SDL2_framerate.h	/^	typedef struct {$/;"	s
__anon04d11f350108::baseticks	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 baseticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
__anon04d11f350108::framecount	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 framecount;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
__anon04d11f350108::lastticks	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 lastticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
__anon04d11f350108::rate	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 rate;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
__anon04d11f350108::rateticks	/usr/include/SDL2/SDL2_framerate.h	/^		float rateticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:float	access:public
__anon04e3cee10103	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon04e3cee10203	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon04e3cee10303	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon04e3cee10403	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon04e3cee10503	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon04e3cee10603	/usr/include/SDL2/SDL_pixels.h	/^{$/;"	g
__anon0bce2e560103	/usr/include/SDL2/SDL_error.h	/^{$/;"	g
__anon126ae9e30108	/usr/include/SDL2/SDL_video.h	/^{$/;"	s
__anon126ae9e30108::driverdata	/usr/include/SDL2/SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:void *	access:public
__anon126ae9e30108::format	/usr/include/SDL2/SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:Uint32	access:public
__anon126ae9e30108::h	/usr/include/SDL2/SDL_video.h	/^    int h;                      \/**< height, in screen coordinates *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
__anon126ae9e30108::refresh_rate	/usr/include/SDL2/SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
__anon126ae9e30108::w	/usr/include/SDL2/SDL_video.h	/^    int w;                      \/**< width, in screen coordinates *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
__anon126ae9e30203	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30303	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30403	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30503	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30603	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30703	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30803	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30903	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30a03	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon126ae9e30b03	/usr/include/SDL2/SDL_video.h	/^{$/;"	g
__anon2328389e0103	/usr/include/SDL2/SDL_assert.h	/^{$/;"	g
__anon28f69f1d0103	/usr/include/SDL2/SDL_shape.h	/^typedef enum {$/;"	g
__anon28f69f1d020a	/usr/include/SDL2/SDL_shape.h	/^typedef union {$/;"	u
__anon28f69f1d020a::binarizationCutoff	/usr/include/SDL2/SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	m	union:__anon28f69f1d020a	typeref:typename:Uint8	access:public
__anon28f69f1d020a::colorKey	/usr/include/SDL2/SDL_shape.h	/^    SDL_Color colorKey;$/;"	m	union:__anon28f69f1d020a	typeref:typename:SDL_Color	access:public
__anon2a823ef40108	/usr/include/SDL2/SDL_test_common.h	/^{$/;"	s
__anon2a823ef40108::argv	/usr/include/SDL2/SDL_test_common.h	/^    char **argv;$/;"	m	struct:__anon2a823ef40108	typeref:typename:char **	access:public
__anon2a823ef40108::audiodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *audiodriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
__anon2a823ef40108::audiospec	/usr/include/SDL2/SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_AudioSpec	access:public
__anon2a823ef40108::depth	/usr/include/SDL2/SDL_test_common.h	/^    int depth;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::display	/usr/include/SDL2/SDL_test_common.h	/^    int display;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
__anon2a823ef40108::gl_accelerated	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accelerated;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_accum_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_accum_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_accum_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_green_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_accum_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_red_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_alpha_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_blue_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_buffer_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_buffer_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_debug	/usr/include/SDL2/SDL_test_common.h	/^    int gl_debug;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_depth_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_depth_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_double_buffer	/usr/include/SDL2/SDL_test_common.h	/^    int gl_double_buffer;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_green_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_major_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_major_version;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_minor_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_minor_version;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_multisamplebuffers	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_multisamplesamples	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_profile_mask	/usr/include/SDL2/SDL_test_common.h	/^    int gl_profile_mask;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_red_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_retained_backing	/usr/include/SDL2/SDL_test_common.h	/^    int gl_retained_backing;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_stencil_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stencil_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::gl_stereo	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stereo;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::logical_h	/usr/include/SDL2/SDL_test_common.h	/^    int logical_h;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::logical_w	/usr/include/SDL2/SDL_test_common.h	/^    int logical_w;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::num_windows	/usr/include/SDL2/SDL_test_common.h	/^    int num_windows;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::refresh_rate	/usr/include/SDL2/SDL_test_common.h	/^    int refresh_rate;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::render_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 render_flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
__anon2a823ef40108::renderdriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *renderdriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
__anon2a823ef40108::renderers	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Renderer **	access:public
__anon2a823ef40108::scale	/usr/include/SDL2/SDL_test_common.h	/^    float scale;$/;"	m	struct:__anon2a823ef40108	typeref:typename:float	access:public
__anon2a823ef40108::skip_renderer	/usr/include/SDL2/SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_bool	access:public
__anon2a823ef40108::targets	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Texture **targets;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Texture **	access:public
__anon2a823ef40108::verbose	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 verbose;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
__anon2a823ef40108::videodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *videodriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
__anon2a823ef40108::window_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 window_flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
__anon2a823ef40108::window_h	/usr/include/SDL2/SDL_test_common.h	/^    int window_h;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_icon	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_icon;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
__anon2a823ef40108::window_maxH	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxH;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_maxW	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxW;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_minH	/usr/include/SDL2/SDL_test_common.h	/^    int window_minH;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_minW	/usr/include/SDL2/SDL_test_common.h	/^    int window_minW;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_title	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_title;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
__anon2a823ef40108::window_w	/usr/include/SDL2/SDL_test_common.h	/^    int window_w;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_x	/usr/include/SDL2/SDL_test_common.h	/^    int window_x;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::window_y	/usr/include/SDL2/SDL_test_common.h	/^    int window_y;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
__anon2a823ef40108::windows	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Window **windows;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Window **	access:public
__anon308df0fb010a	/usr/include/SDL2/SDL_endian.h	/^    {$/;"	u	function:SDL_Swap64
__anon308df0fb0208	/usr/include/SDL2/SDL_endian.h	/^        {$/;"	s	union:SDL_Swap64::__anon308df0fb010a	access:public
__anon308df0fb030a	/usr/include/SDL2/SDL_endian.h	/^    {$/;"	u	function:SDL_SwapFloat
__anon4591c3f50103	/usr/include/SDL2/SDL_surface.h	/^{$/;"	g
__anon51e8038f0103	/usr/include/SDL2/SDL_syswm.h	/^{$/;"	g
__anon51e8038f020a	/usr/include/SDL2/SDL_syswm.h	/^    {$/;"	u	struct:SDL_SysWMmsg	access:public
__anon51e8038f0308	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f0408	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f0508	/usr/include/SDL2/SDL_syswm.h	/^        struct {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f0608	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f0708	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f0808	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMmsg::__anon51e8038f020a	access:public
__anon51e8038f090a	/usr/include/SDL2/SDL_syswm.h	/^    {$/;"	u	struct:SDL_SysWMinfo	access:public
__anon51e8038f0a08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f0b08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f0c08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f0d08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f0e08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f0f08	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f1008	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f1108	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f1208	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon51e8038f1308	/usr/include/SDL2/SDL_syswm.h	/^        {$/;"	s	union:SDL_SysWMinfo::__anon51e8038f090a	access:public
__anon53e44f790103	/usr/include/SDL2/SDL_power.h	/^{$/;"	g
__anon5aeba9e40103	/usr/include/SDL2/SDL_thread.h	/^typedef enum {$/;"	g
__anon5f08bdf10103	/usr/include/SDL2/SDL_mixer.h	/^{$/;"	g
__anon5f08bdf10203	/usr/include/SDL2/SDL_mixer.h	/^typedef enum {$/;"	g
__anon5f08bdf10303	/usr/include/SDL2/SDL_mixer.h	/^typedef enum {$/;"	g
__anon67595f290108	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	s
__anon67595f290108::value	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	m	struct:__anon67595f290108	typeref:typename:int	access:public
__anon685d33560103	/usr/include/SDL2/SDL_blendmode.h	/^{$/;"	g
__anon685d33560203	/usr/include/SDL2/SDL_blendmode.h	/^{$/;"	g
__anon685d33560303	/usr/include/SDL2/SDL_blendmode.h	/^{$/;"	g
__anon6cd8de350103	/usr/include/SDL2/SDL_mouse.h	/^{$/;"	g
__anon6cd8de350203	/usr/include/SDL2/SDL_mouse.h	/^{$/;"	g
__anon7f6bbc260103	/usr/include/SDL2/SDL_sensor.h	/^{$/;"	g
__anon8400e16c0103	/usr/include/SDL2/SDL_scancode.h	/^{$/;"	g
__anon87a7ce2f0103	/usr/include/SDL2/SDL_touch.h	/^{$/;"	g
__anon8eaecdd10103	/usr/include/SDL2/SDL_system.h	/^{$/;"	g
__anon8eaecdd10203	/usr/include/SDL2/SDL_system.h	/^{$/;"	g
__anon9214fbec0103	/usr/include/SDL2/SDL_render.h	/^{$/;"	g
__anon9214fbec0203	/usr/include/SDL2/SDL_render.h	/^{$/;"	g
__anon9214fbec0303	/usr/include/SDL2/SDL_render.h	/^{$/;"	g
__anon9214fbec0403	/usr/include/SDL2/SDL_render.h	/^{$/;"	g
__anon9214fbec0503	/usr/include/SDL2/SDL_render.h	/^{$/;"	g
__anon9ad848680108	/usr/include/SDL2/SDL_test_crc32.h	/^  typedef struct {$/;"	s
__anon9ad848680108::crc32_table	/usr/include/SDL2/SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	m	struct:__anon9ad848680108	typeref:typename:CrcUint32[256]	access:public
__anon9b19faa10103	/usr/include/SDL2/SDL_events.h	/^{$/;"	g
__anon9b19faa10203	/usr/include/SDL2/SDL_events.h	/^{$/;"	g
__anona3c0e4fc0108	/usr/include/SDL2/SDL_joystick.h	/^typedef struct {$/;"	s
__anona3c0e4fc0108::data	/usr/include/SDL2/SDL_joystick.h	/^    Uint8 data[16];$/;"	m	struct:__anona3c0e4fc0108	typeref:typename:Uint8[16]	access:public
__anona3c0e4fc0203	/usr/include/SDL2/SDL_joystick.h	/^{$/;"	g
__anona3c0e4fc0303	/usr/include/SDL2/SDL_joystick.h	/^{$/;"	g
__anonbdddce5a0103	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	g
__anonbdddce5a0203	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	g
__anonbdddce5a0308	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	s
__anonbdddce5a0308::buttonid	/usr/include/SDL2/SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:int	access:public
__anonbdddce5a0308::flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:Uint32	access:public
__anonbdddce5a0308::text	/usr/include/SDL2/SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:const char *	access:public
__anonbdddce5a0408	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	s
__anonbdddce5a0408::b	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
__anonbdddce5a0408::g	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
__anonbdddce5a0408::r	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
__anonbdddce5a0503	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	g
__anonbdddce5a0608	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	s
__anonbdddce5a0608::colors	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	m	struct:__anonbdddce5a0608	typeref:typename:SDL_MessageBoxColor[]	access:public
__anonbdddce5a0708	/usr/include/SDL2/SDL_messagebox.h	/^{$/;"	s
__anonbdddce5a0708::buttons	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const SDL_MessageBoxButtonData *	access:public
__anonbdddce5a0708::colorScheme	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NU/;"	m	struct:__anonbdddce5a0708	typeref:typename:const SDL_MessageBoxColorScheme *	access:public
__anonbdddce5a0708::flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:Uint32	access:public
__anonbdddce5a0708::message	/usr/include/SDL2/SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const char *	access:public
__anonbdddce5a0708::numbuttons	/usr/include/SDL2/SDL_messagebox.h	/^    int numbuttons;$/;"	m	struct:__anonbdddce5a0708	typeref:typename:int	access:public
__anonbdddce5a0708::title	/usr/include/SDL2/SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const char *	access:public
__anonbdddce5a0708::window	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:SDL_Window *	access:public
__anonce60ad6c0108	/usr/include/SDL2/SDL_test_random.h	/^  typedef struct {$/;"	s
__anonce60ad6c0108::a	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int a;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
__anonce60ad6c0108::ah	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int ah;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
__anonce60ad6c0108::al	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int al;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
__anonce60ad6c0108::c	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int c;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
__anonce60ad6c0108::x	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int x;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
__anond20919310108	/usr/include/SDL2/SDL_test_md5.h	/^  typedef struct {$/;"	s
__anond20919310108::buf	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	m	struct:__anond20919310108	typeref:typename:MD5UINT4[4]	access:public
__anond20919310108::digest	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	m	struct:__anond20919310108	typeref:typename:unsigned char[16]	access:public
__anond20919310108::i	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anond20919310108	typeref:typename:MD5UINT4[2]	access:public
__anond20919310108::in	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	m	struct:__anond20919310108	typeref:typename:unsigned char[64]	access:public
__anond2fc05840103	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef enum {$/;"	g
__anondd78d7120103	/usr/include/SDL2/SDL_hints.h	/^{$/;"	g
__anondde4071e0103	/usr/include/SDL2/SDL_audio.h	/^{$/;"	g
__anonea0bf3f10103	/usr/include/SDL2/SDL_stdinc.h	/^{$/;"	g
__anonea0bf3f10203	/usr/include/SDL2/SDL_stdinc.h	/^{$/;"	g
__anonec6745aa0103	/usr/include/SDL2/SDL_gamecontroller.h	/^{$/;"	g
__anonec6745aa0203	/usr/include/SDL2/SDL_gamecontroller.h	/^{$/;"	g
__anonec6745aa030a	/usr/include/SDL2/SDL_gamecontroller.h	/^    {$/;"	u	struct:SDL_GameControllerButtonBind	access:public
__anonec6745aa0408	/usr/include/SDL2/SDL_gamecontroller.h	/^        struct {$/;"	s	union:SDL_GameControllerButtonBind::__anonec6745aa030a	access:public
__anonec6745aa0503	/usr/include/SDL2/SDL_gamecontroller.h	/^{$/;"	g
__anonec6745aa0603	/usr/include/SDL2/SDL_gamecontroller.h	/^{$/;"	g
__anonf21dfde40103	/usr/include/SDL2/SDL_egl.h	/^typedef enum {$/;"	g
__anonf26700b00103	/usr/include/SDL2/SDL_keycode.h	/^{$/;"	g
__anonf26700b00203	/usr/include/SDL2/SDL_keycode.h	/^{$/;"	g
__anonf2a0f72e0103	/usr/include/SDL2/SDL_log.h	/^{$/;"	g
__anonf2a0f72e0203	/usr/include/SDL2/SDL_log.h	/^{$/;"	g
__anonf2bfe3b30108	/usr/include/SDL2/SDL_net.h	/^typedef struct {$/;"	s
__anonf2bfe3b30108::host	/usr/include/SDL2/SDL_net.h	/^    Uint32 host;            \/* 32-bit IPv4 host address *\/$/;"	m	struct:__anonf2bfe3b30108	typeref:typename:Uint32	access:public
__anonf2bfe3b30108::port	/usr/include/SDL2/SDL_net.h	/^    Uint16 port;            \/* 16-bit protocol port *\/$/;"	m	struct:__anonf2bfe3b30108	typeref:typename:Uint16	access:public
__anonf2bfe3b30208	/usr/include/SDL2/SDL_net.h	/^typedef struct {$/;"	s
__anonf2bfe3b30208::address	/usr/include/SDL2/SDL_net.h	/^    IPaddress address;  \/* The source\/dest address of an incoming\/outgoing packet *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:IPaddress	access:public
__anonf2bfe3b30208::channel	/usr/include/SDL2/SDL_net.h	/^    int channel;        \/* The src\/dst channel of the packet *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
__anonf2bfe3b30208::data	/usr/include/SDL2/SDL_net.h	/^    Uint8 *data;        \/* The packet data *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:Uint8 *	access:public
__anonf2bfe3b30208::len	/usr/include/SDL2/SDL_net.h	/^    int len;            \/* The length of the packet data *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
__anonf2bfe3b30208::maxlen	/usr/include/SDL2/SDL_net.h	/^    int maxlen;         \/* The size of the data buffer *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
__anonf2bfe3b30208::status	/usr/include/SDL2/SDL_net.h	/^    int status;         \/* packet status after sending *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
__anonfff75667010a	/usr/include/SDL2/SDL_rwops.h	/^    {$/;"	u	struct:SDL_RWops	access:public
__anonfff756670208	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
__anonfff756670308	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
__anonfff756670408	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
__anonfff756670508	/usr/include/SDL2/SDL_rwops.h	/^        {$/;"	s	union:SDL_RWops::__anonfff75667010a	access:public
__debugbreak	/usr/include/SDL2/SDL_assert.h	/^    extern void __cdecl __debugbreak(void);$/;"	p	typeref:typename:void __cdecl	signature:(void)
__eglMustCastToProperFunctionPointerType	/usr/include/SDL2/SDL_egl.h	/^typedef void (*__eglMustCastToProperFunctionPointerType)(void);$/;"	t	typeref:typename:void (*)(void)
__egl_h_	/usr/include/SDL2/SDL_egl.h	/^#define __egl_h_ /;"	d
__eglext_h_	/usr/include/SDL2/SDL_egl.h	/^#define __eglext_h_ /;"	d
__eglplatform_h_	/usr/include/SDL2/SDL_egl.h	/^#define __eglplatform_h_$/;"	d
__gl2_h_	/usr/include/SDL2/SDL_opengles2_gl2.h	/^#define __gl2_h_$/;"	d
__gl2ext_h_	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^#define __gl2ext_h_$/;"	d
__gl2platform_h_	/usr/include/SDL2/SDL_opengles2_gl2platform.h	/^#define __gl2platform_h_$/;"	d
__gl_h_	/usr/include/SDL2/SDL_opengl.h	/^#define __gl_h_$/;"	d
__glext_h_	/usr/include/SDL2/SDL_opengl_glext.h	/^#define __glext_h_ /;"	d
__inline__	/usr/include/SDL2/begin_code.h	/^#define __inline__ /;"	d
__khrplatform_h_	/usr/include/SDL2/SDL_egl.h	/^#define __khrplatform_h_$/;"	d
__khrplatform_h_	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^#define __khrplatform_h_$/;"	d
_begin_code_h	/usr/include/SDL2/begin_code.h	/^#define _begin_code_h$/;"	d
a	/usr/include/SDL2/SDL_endian.h	/^            Uint32 a, b;$/;"	m	struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	typeref:typename:Uint32	access:public
a	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 a;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
a	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int a;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
aacircleColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aacircleColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Uint32 color)
aacircleRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aacircleRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
aaellipseColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aaellipseColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint32 color)
aaellipseRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aaellipseRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
aalineColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aalineColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint32 color)
aalineRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aalineRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
aapolygonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aapolygonColor(SDL_Renderer * renderer, const Sint16 * vx, const S/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint32 color)
aapolygonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aapolygonRGBA(SDL_Renderer * renderer, const Sint16 * vx, const Si/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
aatrigonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aatrigonColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint1/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint32 color)
aatrigonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int aatrigonRGBA(SDL_Renderer * renderer,  Sint16 x1, Sint16 y1, Sint1/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
abuf	/usr/include/SDL2/SDL_mixer.h	/^    Uint8 *abuf;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8 *	access:public
address	/usr/include/SDL2/SDL_net.h	/^    IPaddress address;  \/* The source\/dest address of an incoming\/outgoing packet *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:IPaddress	access:public
adevice	/usr/include/SDL2/SDL_events.h	/^    SDL_AudioDeviceEvent adevice;   \/**< Audio device event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_AudioDeviceEvent	access:public
ah	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int ah;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
al	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int al;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
alen	/usr/include/SDL2/SDL_mixer.h	/^    Uint32 alen;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint32	access:public
alloca	/usr/include/SDL2/SDL_stdinc.h	/^#  define alloca /;"	d
alloca	/usr/include/SDL2/SDL_stdinc.h	/^char *alloca();$/;"	p	typeref:typename:char *	signature:()
alloca	/usr/include/SDL2/SDL_stdinc.h	/^void *alloca(unsigned);$/;"	p	typeref:typename:void *	signature:(unsigned)
allocated	/usr/include/SDL2/SDL_mixer.h	/^    int allocated;$/;"	m	struct:Mix_Chunk	typeref:typename:int	access:public
always_ignore	/usr/include/SDL2/SDL_assert.h	/^    int always_ignore;$/;"	m	struct:SDL_AssertData	typeref:typename:int	access:public
android	/usr/include/SDL2/SDL_syswm.h	/^        } android;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	access:public
androidio	/usr/include/SDL2/SDL_rwops.h	/^        } androidio;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	access:public
arcColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int arcColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 rad, /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint32 color)
arcRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int arcRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 rad, S/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
argv	/usr/include/SDL2/SDL_test_common.h	/^    char **argv;$/;"	m	struct:__anon2a823ef40108	typeref:typename:char **	access:public
assetFileDescriptorRef	/usr/include/SDL2/SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
audiodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *audiodriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
audiospec	/usr/include/SDL2/SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_AudioSpec	access:public
autoclose	/usr/include/SDL2/SDL_rwops.h	/^            SDL_bool autoclose;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	typeref:typename:SDL_bool	access:public
axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
axis	/usr/include/SDL2/SDL_gamecontroller.h	/^        int axis;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:typename:int	access:public
b	/usr/include/SDL2/SDL_endian.h	/^            Uint32 a, b;$/;"	m	struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	typeref:typename:Uint32	access:public
b	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
b	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 b;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
ball	/usr/include/SDL2/SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
base	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *base;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
baseticks	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 baseticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
bezierColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int bezierColor(SDL_Renderer * renderer, const Sint16 * vx, const Sint/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,int s,Uint32 color)
bezierRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int bezierRGBA(SDL_Renderer * renderer, const Sint16 * vx, const Sint1/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,int s,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
binarizationCutoff	/usr/include/SDL2/SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	m	union:__anon28f69f1d020a	typeref:typename:Uint8	access:public
bindType	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:typename:SDL_GameControllerBindType	access:public
boxColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int boxColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 x2,/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint32 color)
boxRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int boxRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 x2,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
buf	/usr/include/SDL2/SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
buf	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	m	struct:__anond20919310108	typeref:typename:MD5UINT4[4]	access:public
button	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
button	/usr/include/SDL2/SDL_gamecontroller.h	/^        int button;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:typename:int	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
buttonid	/usr/include/SDL2/SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:int	access:public
buttons	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const SDL_MessageBoxButtonData *	access:public
bytes_per_pixel	/usr/include/SDL2/SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:unsigned int	access:public
c	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int c;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
callback	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioCallback callback; \/**< Callback that feeds the audio device (NULL to use SDL_Queu/;"	m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioCallback	access:public
caxis	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerAxisEvent	access:public
cbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerButtonEvent	access:public
cdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_ControllerDeviceEvent	access:public
center	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
channel	/usr/include/SDL2/SDL_net.h	/^    int channel;        \/* The src\/dst channel of the packet *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
channels	/usr/include/SDL2/SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
channels	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint8	access:public
characterColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int characterColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, char c/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,char c,Uint32 color)
characterRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int characterRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, char c,/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,char c,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
circleColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int circleColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 ra/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Uint32 color)
circleRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int circleRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 rad/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
clicks	/usr/include/SDL2/SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
clip_rect	/usr/include/SDL2/SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08	access:public
cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608	access:public
code	/usr/include/SDL2/SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Sint32	access:public
colorKey	/usr/include/SDL2/SDL_shape.h	/^    SDL_Color colorKey;$/;"	m	union:__anon28f69f1d020a	typeref:typename:SDL_Color	access:public
colorScheme	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NU/;"	m	struct:__anonbdddce5a0708	typeref:typename:const SDL_MessageBoxColorScheme *	access:public
colorbuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint colorbuffer; \/**< The GL view's color Renderbuffer Object. It must be bound /;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
colors	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	m	struct:__anonbdddce5a0608	typeref:typename:SDL_MessageBoxColor[]	access:public
colors	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Color *colors;$/;"	m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
common	/usr/include/SDL2/SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_CommonEvent	access:public
condition	/usr/include/SDL2/SDL_assert.h	/^    const char *condition;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
condition	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCondition	access:public
connection	/usr/include/SDL2/SDL_syswm.h	/^            void *connection;  \/**< Mir display server connection *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	typeref:typename:void *	access:public
constant	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticConstant	access:public
crc32_table	/usr/include/SDL2/SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	m	struct:__anon9ad848680108	typeref:typename:CrcUint32[256]	access:public
custom	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCustom	access:public
dDist	/usr/include/SDL2/SDL_events.h	/^    float dDist;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
dTheta	/usr/include/SDL2/SDL_events.h	/^    float dTheta;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
data	/usr/include/SDL2/SDL_events.h	/^    float data[6];      \/**< Up to 6 values from the sensor - additional values can be queried /;"	m	struct:SDL_SensorEvent	typeref:typename:float[6]	access:public
data	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16 *	access:public
data	/usr/include/SDL2/SDL_joystick.h	/^    Uint8 data[16];$/;"	m	struct:__anona3c0e4fc0108	typeref:typename:Uint8[16]	access:public
data	/usr/include/SDL2/SDL_net.h	/^    Uint8 *data;        \/* The packet data *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:Uint8 *	access:public
data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Sint32	access:public
data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
data1	/usr/include/SDL2/SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
data1	/usr/include/SDL2/SDL_rwops.h	/^            void *data1;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	typeref:typename:void *	access:public
data2	/usr/include/SDL2/SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
data2	/usr/include/SDL2/SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
data2	/usr/include/SDL2/SDL_rwops.h	/^            void *data2;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	typeref:typename:void *	access:public
deadband	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone; max 0xFFFF: whole axis-range when 0-cen/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
depth	/usr/include/SDL2/SDL_test_common.h	/^    int depth;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
description	/usr/include/SDL2/SDL_test_harness.h	/^    char *description;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFB *	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508	access:public
dgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DollarGestureEvent	access:public
digest	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	m	struct:__anond20919310108	typeref:typename:unsigned char[16]	access:public
dir	/usr/include/SDL2/SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	m	struct:SDL_HapticDirection	typeref:typename:Sint32[3]	access:public
direction	/usr/include/SDL2/SDL_events.h	/^    Uint32 direction;   \/**< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the value/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:SDL_HapticDirection	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:SDL_HapticDirection	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:SDL_HapticDirection	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:SDL_HapticDirection	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:SDL_HapticDirection	access:public
display	/usr/include/SDL2/SDL_events.h	/^    SDL_DisplayEvent display;       \/**< Display event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DisplayEvent	access:public
display	/usr/include/SDL2/SDL_events.h	/^    Uint32 display;     \/**< The associated display index *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
display	/usr/include/SDL2/SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	typeref:typename:Display *	access:public
display	/usr/include/SDL2/SDL_syswm.h	/^            EGLNativeDisplayType display;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	typeref:typename:EGLNativeDisplayType	access:public
display	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_display *	access:public
display	/usr/include/SDL2/SDL_test_common.h	/^    int display;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
driverdata	/usr/include/SDL2/SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:void *	access:public
drop	/usr/include/SDL2/SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_DropEvent	access:public
dst_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0608	typeref:typename:int	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708	typeref:typename:int	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^            int dummy;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808	typeref:typename:int	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^        Uint8 dummy[64];$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:typename:Uint8[64]	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:typename:int	access:public
dx	/usr/include/SDL2/SDL_events.h	/^    float dx;           \/**< Normalized in the range -1...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
dy	/usr/include/SDL2/SDL_events.h	/^    float dy;           \/**< Normalized in the range -1...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
edit	/usr/include/SDL2/SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TextEditingEvent	access:public
eglBindAPI	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindAPI (EGLenum api);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLenum api)
eglBindTexImage	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buffer/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
eglChooseConfig	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglChooseConfig (EGLDisplay dpy, const EGLint *attrib_list, EGLCon/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list,EGLConfig * configs,EGLint config_size,EGLint * num_config)
eglClientWaitSync	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags, EGLTime/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint flags,EGLTime timeout)
eglClientWaitSyncKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, E/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags,EGLTimeKHR timeout)
eglClientWaitSyncNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSyncNV (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout);$/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLSyncNV sync,EGLint flags,EGLTimeNV timeout)
eglCopyBuffers	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglCopyBuffers (EGLDisplay dpy, EGLSurface surface, EGLNativePixma/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLNativePixmapType target)
eglCreateContext	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglCreateContext (EGLDisplay dpy, EGLConfig config, EGLContext sha/;"	p	typeref:typename:EGLAPI EGLContext EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLContext share_context,const EGLint * attrib_list)
eglCreateDRMImageMESA	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLImageKHR EGLAPIENTRY eglCreateDRMImageMESA (EGLDisplay dpy, const EGLint *attrib_list)/;"	p	typeref:typename:EGLAPI EGLImageKHR EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list)
eglCreateFenceSyncNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSyncNV EGLAPIENTRY eglCreateFenceSyncNV (EGLDisplay dpy, EGLenum condition, const EGLi/;"	p	typeref:typename:EGLAPI EGLSyncNV EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum condition,const EGLint * attrib_list)
eglCreateImage	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLImage EGLAPIENTRY eglCreateImage (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLC/;"	p	typeref:typename:EGLAPI EGLImage EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLAttrib * attrib_list)
eglCreateImageKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLImageKHR EGLAPIENTRY eglCreateImageKHR (EGLDisplay dpy, EGLContext ctx, EGLenum target/;"	p	typeref:typename:EGLAPI EGLImageKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLint * attrib_list)
eglCreatePbufferFromClientBuffer	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferFromClientBuffer (EGLDisplay dpy, EGLenum buftype,/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum buftype,EGLClientBuffer buffer,EGLConfig config,const EGLint * attrib_list)
eglCreatePbufferSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferSurface (EGLDisplay dpy, EGLConfig config, const E/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,const EGLint * attrib_list)
eglCreatePixmapSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePixmapSurface (EGLDisplay dpy, EGLConfig config, EGLNativ/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLNativePixmapType pixmap,const EGLint * attrib_list)
eglCreatePixmapSurfaceHI	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePixmapSurfaceHI (EGLDisplay dpy, EGLConfig config, struct/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,struct EGLClientPixmapHI * pixmap)
eglCreatePlatformPixmapSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformPixmapSurface (EGLDisplay dpy, EGLConfig config, /;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLAttrib * attrib_list)
eglCreatePlatformPixmapSurfaceEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformPixmapSurfaceEXT (EGLDisplay dpy, EGLConfig confi/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLint * attrib_list)
eglCreatePlatformWindowSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformWindowSurface (EGLDisplay dpy, EGLConfig config, /;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLAttrib * attrib_list)
eglCreatePlatformWindowSurfaceEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformWindowSurfaceEXT (EGLDisplay dpy, EGLConfig confi/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLint * attrib_list)
eglCreateStreamFromFileDescriptorKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLStreamKHR EGLAPIENTRY eglCreateStreamFromFileDescriptorKHR (EGLDisplay dpy, EGLNativeF/;"	p	typeref:typename:EGLAPI EGLStreamKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLNativeFileDescriptorKHR file_descriptor)
eglCreateStreamKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLStreamKHR EGLAPIENTRY eglCreateStreamKHR (EGLDisplay dpy, const EGLint *attrib_list);$/;"	p	typeref:typename:EGLAPI EGLStreamKHR EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list)
eglCreateStreamProducerSurfaceKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreateStreamProducerSurfaceKHR (EGLDisplay dpy, EGLConfig confi/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLStreamKHR stream,const EGLint * attrib_list)
eglCreateStreamSyncNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateStreamSyncNV (EGLDisplay dpy, EGLStreamKHR stream, EGLenu/;"	p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum type,const EGLint * attrib_list)
eglCreateSync	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSync EGLAPIENTRY eglCreateSync (EGLDisplay dpy, EGLenum type, const EGLAttrib *attrib_/;"	p	typeref:typename:EGLAPI EGLSync EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLAttrib * attrib_list)
eglCreateSync64KHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateSync64KHR (EGLDisplay dpy, EGLenum type, const EGLAttribK/;"	p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLAttribKHR * attrib_list)
eglCreateSyncKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateSyncKHR (EGLDisplay dpy, EGLenum type, const EGLint *attr/;"	p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLint * attrib_list)
eglCreateWindowSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreateWindowSurface (EGLDisplay dpy, EGLConfig config, EGLNativ/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLNativeWindowType win,const EGLint * attrib_list)
eglDestroyContext	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyContext (EGLDisplay dpy, EGLContext ctx);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx)
eglDestroyImage	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyImage (EGLDisplay dpy, EGLImage image);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImage image)
eglDestroyImageKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyImageKHR (EGLDisplay dpy, EGLImageKHR image);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image)
eglDestroyStreamKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyStreamKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglDestroySurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySurface (EGLDisplay dpy, EGLSurface surface);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglDestroySync	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySync (EGLDisplay dpy, EGLSync sync);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync)
eglDestroySyncKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySyncKHR (EGLDisplay dpy, EGLSyncKHR sync);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync)
eglDestroySyncNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySyncNV (EGLSyncNV sync);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync)
eglDupNativeFenceFDANDROID	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglDupNativeFenceFDANDROID (EGLDisplay dpy, EGLSyncKHR sync);$/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync)
eglExportDMABUFImageMESA	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDMABUFImageMESA (EGLDisplay dpy, EGLImageKHR image, int */;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,int * fds,EGLint * strides,EGLint * offsets)
eglExportDMABUFImageQueryMESA	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDMABUFImageQueryMESA (EGLDisplay dpy, EGLImageKHR image, /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,int * fourcc,int * num_planes,EGLuint64KHR * modifiers)
eglExportDRMImageMESA	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDRMImageMESA (EGLDisplay dpy, EGLImageKHR image, EGLint */;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,EGLint * name,EGLint * handle,EGLint * stride)
eglFenceNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglFenceNV (EGLSyncNV sync);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync)
eglGetConfigAttrib	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigAttrib (EGLDisplay dpy, EGLConfig config, EGLint attri/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLint attribute,EGLint * value)
eglGetConfigs	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigs (EGLDisplay dpy, EGLConfig *configs, EGLint config_s/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig * configs,EGLint config_size,EGLint * num_config)
eglGetCurrentContext	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglGetCurrentContext (void);$/;"	p	typeref:typename:EGLAPI EGLContext EGLAPIENTRY	signature:(void)
eglGetCurrentDisplay	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetCurrentDisplay (void);$/;"	p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(void)
eglGetCurrentSurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglGetCurrentSurface (EGLint readdraw);$/;"	p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLint readdraw)
eglGetDisplay	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetDisplay (EGLNativeDisplayType display_id);$/;"	p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLNativeDisplayType display_id)
eglGetError	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglGetError (void);$/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(void)
eglGetOutputLayersEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetOutputLayersEXT (EGLDisplay dpy, const EGLAttrib *attrib_lis/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputLayerEXT * layers,EGLint max_layers,EGLint * num_layers)
eglGetOutputPortsEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetOutputPortsEXT (EGLDisplay dpy, const EGLAttrib *attrib_list/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputPortEXT * ports,EGLint max_ports,EGLint * num_ports)
eglGetPlatformDisplay	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetPlatformDisplay (EGLenum platform, void *native_display, con/;"	p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLenum platform,void * native_display,const EGLAttrib * attrib_list)
eglGetPlatformDisplayEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetPlatformDisplayEXT (EGLenum platform, void *native_display, /;"	p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLenum platform,void * native_display,const EGLint * attrib_list)
eglGetProcAddress	/usr/include/SDL2/SDL_egl.h	/^EGLAPI __eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress (const char *procn/;"	p	typeref:typename:EGLAPI __eglMustCastToProperFunctionPointerType EGLAPIENTRY	signature:(const char * procname)
eglGetStreamFileDescriptorKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLNativeFileDescriptorKHR EGLAPIENTRY eglGetStreamFileDescriptorKHR (EGLDisplay dpy, EGL/;"	p	typeref:typename:EGLAPI EGLNativeFileDescriptorKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglGetSyncAttrib	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttrib (EGLDisplay dpy, EGLSync sync, EGLint attribute, /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint attribute,EGLAttrib * value)
eglGetSyncAttribKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttribKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint attri/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint attribute,EGLint * value)
eglGetSyncAttribNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttribNV (EGLSyncNV sync, EGLint attribute, EGLint *valu/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync,EGLint attribute,EGLint * value)
eglGetSystemTimeFrequencyNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLuint64NV EGLAPIENTRY eglGetSystemTimeFrequencyNV (void);$/;"	p	typeref:typename:EGLAPI EGLuint64NV EGLAPIENTRY	signature:(void)
eglGetSystemTimeNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLuint64NV EGLAPIENTRY eglGetSystemTimeNV (void);$/;"	p	typeref:typename:EGLAPI EGLuint64NV EGLAPIENTRY	signature:(void)
eglInitialize	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglInitialize (EGLDisplay dpy, EGLint *major, EGLint *minor);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint * major,EGLint * minor)
eglLockSurfaceKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglLockSurfaceKHR (EGLDisplay dpy, EGLSurface surface, const EGLin/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,const EGLint * attrib_list)
eglMakeCurrent	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglMakeCurrent (EGLDisplay dpy, EGLSurface draw, EGLSurface read, /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface draw,EGLSurface read,EGLContext ctx)
eglOutputLayerAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT layer, /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib value)
eglOutputPortAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port, EGL/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib value)
eglPostSubBufferNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglPostSubBufferNV (EGLDisplay dpy, EGLSurface surface, EGLint x, /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint x,EGLint y,EGLint width,EGLint height)
eglQueryAPI	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLenum EGLAPIENTRY eglQueryAPI (void);$/;"	p	typeref:typename:EGLAPI EGLenum EGLAPIENTRY	signature:(void)
eglQueryContext	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryContext (EGLDisplay dpy, EGLContext ctx, EGLint attribute,/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLint attribute,EGLint * value)
eglQueryDeviceAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDeviceAttribEXT (EGLDeviceEXT device, EGLint attribute, EG/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDeviceEXT device,EGLint attribute,EGLAttrib * value)
eglQueryDeviceStringEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryDeviceStringEXT (EGLDeviceEXT device, EGLint name);$/;"	p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDeviceEXT device,EGLint name)
eglQueryDevicesEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDevicesEXT (EGLint max_devices, EGLDeviceEXT *devices, EGL/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLint max_devices,EGLDeviceEXT * devices,EGLint * num_devices)
eglQueryDisplayAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDisplayAttribEXT (EGLDisplay dpy, EGLint attribute, EGLAtt/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
eglQueryNativeDisplayNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativeDisplayNV (EGLDisplay dpy, EGLNativeDisplayType *dis/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLNativeDisplayType * display_id)
eglQueryNativePixmapNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativePixmapNV (EGLDisplay dpy, EGLSurface surf, EGLNative/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surf,EGLNativePixmapType * pixmap)
eglQueryNativeWindowNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativeWindowNV (EGLDisplay dpy, EGLSurface surf, EGLNative/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surf,EGLNativeWindowType * window)
eglQueryOutputLayerAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT la/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib * value)
eglQueryOutputLayerStringEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryOutputLayerStringEXT (EGLDisplay dpy, EGLOutputLayerEXT l/;"	p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint name)
eglQueryOutputPortAttribEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib * value)
eglQueryOutputPortStringEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryOutputPortStringEXT (EGLDisplay dpy, EGLOutputPortEXT por/;"	p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint name)
eglQueryStreamKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum at/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint * value)
eglQueryStreamTimeKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamTimeKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenu/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLTimeKHR * value)
eglQueryStreamu64KHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamu64KHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLuint64KHR * value)
eglQueryString	/usr/include/SDL2/SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryString (EGLDisplay dpy, EGLint name);$/;"	p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint name)
eglQuerySurface	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurface (EGLDisplay dpy, EGLSurface surface, EGLint attrib/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint * value)
eglQuerySurface64KHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurface64KHR (EGLDisplay dpy, EGLSurface surface, EGLint a/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLAttribKHR * value)
eglQuerySurfacePointerANGLE	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurfacePointerANGLE (EGLDisplay dpy, EGLSurface surface, E/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,void ** value)
eglReleaseTexImage	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buf/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
eglReleaseThread	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseThread (void);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglSetBlobCacheFuncsANDROID	/usr/include/SDL2/SDL_egl.h	/^EGLAPI void EGLAPIENTRY eglSetBlobCacheFuncsANDROID (EGLDisplay dpy, EGLSetBlobFuncANDROID set, /;"	p	typeref:typename:EGLAPI void EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSetBlobFuncANDROID set,EGLGetBlobFuncANDROID get)
eglSetDamageRegionKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSetDamageRegionKHR (EGLDisplay dpy, EGLSurface surface, EGLint /;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSignalSyncKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSignalSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLenum mode)
eglSignalSyncNV	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSignalSyncNV (EGLSyncNV sync, EGLenum mode);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync,EGLenum mode)
eglStreamAttribKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum a/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint value)
eglStreamConsumerAcquireKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerAcquireKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglStreamConsumerGLTextureExternalKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerGLTextureExternalKHR (EGLDisplay dpy, EGLStreamKH/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglStreamConsumerOutputEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerOutputEXT (EGLDisplay dpy, EGLStreamKHR stream, E/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLOutputLayerEXT layer)
eglStreamConsumerReleaseKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerReleaseKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglSurfaceAttrib	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSurfaceAttrib (EGLDisplay dpy, EGLSurface surface, EGLint attri/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint value)
eglSwapBuffers	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffers (EGLDisplay dpy, EGLSurface surface);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglSwapBuffersRegion2NOK	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersRegion2NOK (EGLDisplay dpy, EGLSurface surface, EGLi/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
eglSwapBuffersRegionNOK	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersRegionNOK (EGLDisplay dpy, EGLSurface surface, EGLin/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
eglSwapBuffersWithDamageEXT	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageEXT (EGLDisplay dpy, EGLSurface surface, E/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSwapBuffersWithDamageKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageKHR (EGLDisplay dpy, EGLSurface surface, E/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSwapInterval	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapInterval (EGLDisplay dpy, EGLint interval);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint interval)
eglTerminate	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglTerminate (EGLDisplay dpy);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy)
eglUnlockSurfaceKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglUnlockSurfaceKHR (EGLDisplay dpy, EGLSurface surface);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglWaitClient	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitClient (void);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglWaitGL	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitGL (void);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglWaitNative	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitNative (EGLint engine);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLint engine)
eglWaitSync	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags);$/;"	p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint flags)
eglWaitSyncKHR	/usr/include/SDL2/SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags);$/;"	p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags)
ellipseColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int ellipseColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 r/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint32 color)
ellipseRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int ellipseRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
enabled	/usr/include/SDL2/SDL_test_harness.h	/^    int enabled;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:int	access:public
end	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
error	/usr/include/SDL2/SDL_events.h	/^    float error;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_DisplayEventID *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
event	/usr/include/SDL2/SDL_syswm.h	/^            DFBEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0508	typeref:typename:DFBEvent	access:public
event	/usr/include/SDL2/SDL_syswm.h	/^            XEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408	typeref:typename:XEvent	access:public
f	/usr/include/SDL2/SDL_endian.h	/^        float f;$/;"	m	union:SDL_SwapFloat::__anon308df0fb030a	typeref:typename:float	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
fd	/usr/include/SDL2/SDL_rwops.h	/^            int fd;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:int	access:public
file	/usr/include/SDL2/SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free(), is NULL on b/;"	m	struct:SDL_DropEvent	typeref:typename:char *	access:public
fileNameRef	/usr/include/SDL2/SDL_rwops.h	/^            void *fileNameRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
filename	/usr/include/SDL2/SDL_assert.h	/^    const char *filename;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
filledCircleColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledCircleColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sin/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 r,Uint32 color)
filledCircleRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledCircleRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
filledEllipseColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledEllipseColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Si/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint32 color)
filledEllipseRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledEllipseRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rx,Sint16 ry,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
filledPieColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledPieColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint32 color)
filledPieRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledPieRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
filledPolygonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledPolygonColor(SDL_Renderer * renderer, const Sint16 * vx, con/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint32 color)
filledPolygonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledPolygonRGBA(SDL_Renderer * renderer, const Sint16 * vx,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
filledTrigonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledTrigonColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, S/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint32 color)
filledTrigonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int filledTrigonRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Si/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
filter_index	/usr/include/SDL2/SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
filters	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFilter filters[SDL_AUDIOCVT_MAX_FILTERS + 1]; \/**< NULL-terminated list of filter /;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFilter[]	access:public
fingerId	/usr/include/SDL2/SDL_events.h	/^    SDL_FingerID fingerId;$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_FingerID	access:public
flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:Uint32	access:public
flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:Uint32	access:public
flags	/usr/include/SDL2/SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
flags	/usr/include/SDL2/SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioFormat	access:public
format	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 format;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
format	/usr/include/SDL2/SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
format	/usr/include/SDL2/SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:Uint32	access:public
fp	/usr/include/SDL2/SDL_rwops.h	/^            FILE *fp;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	typeref:typename:FILE *	access:public
framebuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint framebuffer; \/**< The GL view's Framebuffer Object. It must be bound when re/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
framecount	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 framecount;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
freq	/usr/include/SDL2/SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:int	access:public
function	/usr/include/SDL2/SDL_assert.h	/^    const char *function;$/;"	m	struct:SDL_AssertData	typeref:typename:const char *	access:public
g	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
g	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 g;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
gestureId	/usr/include/SDL2/SDL_events.h	/^    SDL_GestureID gestureId;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_GestureID	access:public
gfxPrimitivesSetFont	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE void gfxPrimitivesSetFont(const void *fontdata, Uint32 cw, Uint32 ch);$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE void	signature:(const void * fontdata,Uint32 cw,Uint32 ch)
gfxPrimitivesSetFontRotation	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE void gfxPrimitivesSetFontRotation(Uint32 rotation);$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE void	signature:(Uint32 rotation)
glAccum	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glAccum( GLenum op, GLfloat value );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum op,GLfloat value)
glAccumxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAccumxOES (GLenum op, GLfixed value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLfixed value)
glActiveProgramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glActiveShaderProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLuint program)
glActiveShaderProgramEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glActiveShaderProgramEXT (GLuint pipeline, GLuint program);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLuint program)
glActiveStencilFaceEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum face);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face)
glActiveTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glActiveTexture( GLenum texture );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glActiveTexture	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glActiveTexture	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glActiveTexture (GLenum texture);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum texture)
glActiveTextureARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glActiveTextureARB(GLenum texture);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glActiveTextureARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glActiveVaryingNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveVaryingNV (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,const GLchar * name)
glAlphaFragmentOp1ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
glAlphaFragmentOp2ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
glAlphaFragmentOp3ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
glAlphaFunc	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glAlphaFunc( GLenum func, GLclampf ref );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func,GLclampf ref)
glAlphaFuncQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glAlphaFuncQCOM (GLenum func, GLclampf ref);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func,GLclampf ref)
glAlphaFuncxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFuncxOES (GLenum func, GLfixed ref);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLfixed ref)
glApplyTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glAreProgramsResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean */;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei n,const GLuint * programs,GLboolean * residences)
glAreTexturesResident	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glAreTexturesResident( GLsizei n,$/;"	p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLsizei n,const GLuint * textures,GLboolean * residences)
glAreTexturesResidentEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean /;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei n,const GLuint * textures,GLboolean * residences)
glArrayElement	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glArrayElement( GLint i );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i)
glArrayElementEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint i);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint i)
glArrayObjectATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
glAsyncMarkerSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint marker);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint marker)
glAttachObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLhandleARB obj)
glAttachShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint shader)
glAttachShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint shader)
glBegin	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBegin( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glBeginConditionalRender	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum mode)
glBeginConditionalRenderNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum mode)
glBeginConditionalRenderNVX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNVX (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBeginFragmentShaderATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBeginOcclusionQueryNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBeginPerfMonitorAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor)
glBeginPerfMonitorAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor)
glBeginPerfQueryINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginPerfQueryINTEL (GLuint queryHandle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glBeginQuery	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum target, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBeginQueryEXT (GLenum target, GLuint id);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryIndexed	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint id)
glBeginTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginTransformFeedbackEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackEXT (GLenum primitiveMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackNV (GLenum primitiveMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginVertexShaderEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBeginVideoCaptureNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginVideoCaptureNV (GLuint video_capture_slot);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot)
glBindAttribLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,const GLchar * name)
glBindAttribLocation	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,const GLchar * name)
glBindAttribLocationARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharA/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,const GLcharARB * name)
glBindBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBufferARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum target, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBufferBase	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferBaseEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferBaseNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
glBindBufferOffsetNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr o/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
glBindBufferRange	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBufferRangeEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr o/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBufferRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr of/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBuffersBase	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
glBindBuffersRange	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
glBindFragDataLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint color,const GLchar * name)
glBindFragDataLocationEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint color,const GLchar * name)
glBindFragDataLocationIndexed	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
glBindFragmentShaderATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBindFramebuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindFramebuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindFramebufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum target, GLuint framebuffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindImageTexture	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean laye/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
glBindImageTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
glBindImageTextures	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * textures)
glBindLightParameterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum light, GLenum value);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum light,GLenum value)
glBindMaterialParameterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum face, GLenum value);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum face,GLenum value)
glBindMultiTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLuint texture)
glBindParameterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum value);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum value)
glBindProgramARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum target, GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint program)
glBindProgramNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum target, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindProgramPipeline	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline)
glBindProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBindProgramPipelineEXT (GLuint pipeline);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline)
glBindRenderbuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindRenderbuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindSampler	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint unit,GLuint sampler)
glBindSamplers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindSamplers (GLuint first, GLsizei count, const GLuint *samplers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * samplers)
glBindTexGenParameterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum unit,GLenum coord,GLenum value)
glBindTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBindTexture( GLenum target, GLuint texture );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLuint texture)
glBindTexture	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint texture)
glBindTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum target, GLuint texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint texture)
glBindTextureUnitParameterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum unit, GLenum value);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum unit,GLenum value)
glBindTextures	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * textures)
glBindTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTransformFeedbackNV (GLenum target, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindVertexArray	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint array)
glBindVertexArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint array);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint array)
glBindVertexArrayOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBindVertexArrayOES (GLuint array);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint array)
glBindVertexBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
glBindVertexBuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLuint *buffers, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
glBindVertexShaderEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBindVideoCaptureStreamBufferNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
glBindVideoCaptureStreamTextureNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
glBinormal3bEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte bx,GLbyte by,GLbyte bz)
glBinormal3bvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glBinormal3dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble bx,GLdouble by,GLdouble bz)
glBinormal3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glBinormal3fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat bx,GLfloat by,GLfloat bz)
glBinormal3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glBinormal3iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint bx, GLint by, GLint bz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint bx,GLint by,GLint bz)
glBinormal3ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glBinormal3sEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort bx,GLshort by,GLshort bz)
glBinormal3svEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glBinormalPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glBitmap	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBitmap( GLsizei width, GLsizei height,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
glBitmapxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBitmapxOES (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
glBlendBarrierNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendBarrierNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBlendColor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendColor( GLclampf red, GLclampf green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glBlendColor	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glBlendColor	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendColor (GLclampf red, GLclampf green, GLclampf blue, G/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glBlendColorEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glBlendColorxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glBlendEquation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendEquation( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glBlendEquation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glBlendEquation	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquation ( GLenum mode );$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glBlendEquationEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glBlendEquationIndexedAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationIndexedAMD (GLuint buf, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendEquationSeparate	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparate	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendEquationSeparateATI( GLenum modeRGB, GLenum modeA );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum modeRGB,GLenum modeA)
glBlendEquationSeparateEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateIndexedAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparatei	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateiARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationi	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendEquationiARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendFunc	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendFunc( GLenum sfactor, GLenum dfactor );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum sfactor,GLenum dfactor)
glBlendFunc	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum sfactor,GLenum dfactor)
glBlendFuncIndexedAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendFuncSeparate	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlp/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparate	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum sr/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparateEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactor/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparateINGR	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfacto/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparateIndexedAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparatei	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparateiARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum sr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFunci	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendFunciARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendParameteriNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendParameteriNV (GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint value)
glBlitFramebuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBlitFramebufferANGLE (GLint srcX0, GLint srcY0, GLint srcX1, GLint/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBlitFramebufferNV (GLint srcX0, GLint srcY0, GLint srcX1, GLint sr/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBufferAddressRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
glBufferData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
glBufferData	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
glBufferDataARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum target, GLsizeiptrARB size, const void *data, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
glBufferParameteriAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glBufferStorage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferStorage (GLenum target, GLsizeiptr size, const void *data, GLbitfiel/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
glBufferSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
glBufferSubData	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
glBufferSubDataARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
glCallList	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCallList( GLuint list );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list)
glCallLists	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCallLists( GLsizei n, GLenum type,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,GLenum type,const GLvoid * lists)
glCheckFramebufferStatus	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum target)
glCheckFramebufferStatus	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLenum       GL_APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(GLenum target)
glCheckFramebufferStatusEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum target);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum target)
glCheckNamedFramebufferStatusEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLuint framebuffer,GLenum target)
glClampColor	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum clamp)
glClampColorARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClampColorARB (GLenum target, GLenum clamp);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum clamp)
glClear	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClear( GLbitfield mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glClear	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClear (GLbitfield mask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLbitfield mask)
glClearAccum	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearAccum( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glClearAccumxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearAccumxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glClearBufferData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLen/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
glClearBufferSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
glClearBufferfi	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stenc/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
glClearBufferfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLfloat * value)
glClearBufferiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLint * value)
glClearBufferuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLuint * value)
glClearColor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha /;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glClearColor	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearColor (GLclampf red, GLclampf green, GLclampf blue, G/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glClearColorIiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue,GLint alpha)
glClearColorIuiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue,GLuint alpha)
glClearColorxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glClearDepth	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearDepth( GLclampd depth );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampd depth)
glClearDepthdNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble depth)
glClearDepthf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthf (GLfloat d);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat d)
glClearDepthf	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearDepthf (GLclampf depth);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf depth)
glClearDepthfOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthfOES (GLclampf depth);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf depth)
glClearDepthxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthxOES (GLfixed depth);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed depth)
glClearIndex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearIndex( GLfloat c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat c)
glClearNamedBufferDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum form/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
glClearNamedBufferSubDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeip/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
glClearStencil	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearStencil( GLint s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s)
glClearStencil	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearStencil (GLint s);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint s)
glClearTexImage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
glClearTexSubImage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffse/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
glClientActiveTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClientActiveTexture( GLenum texture );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glClientActiveTexture	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glClientActiveTextureARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClientActiveTextureARB(GLenum texture);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glClientActiveTextureARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glClientActiveVertexStreamATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum stream);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream)
glClientAttribDefaultEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glClientWaitSync	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glClientWaitSyncAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLenum GL_APIENTRY glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 tim/;"	p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glClipPlane	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glClipPlane( GLenum plane, const GLdouble *equation );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum plane,const GLdouble * equation)
glClipPlanefOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClipPlanefOES (GLenum plane, const GLfloat *equation);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,const GLfloat * equation)
glClipPlanexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glClipPlanexOES (GLenum plane, const GLfixed *equation);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,const GLfixed * equation)
glColor3b	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3b( GLbyte red, GLbyte green, GLbyte blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glColor3bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3bv( const GLbyte *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glColor3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3d( GLdouble red, GLdouble green, GLdouble blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glColor3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glColor3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3f( GLfloat red, GLfloat green, GLfloat blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * c,const GLfloat * v)
glColor3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glColor3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
glColor3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glColor3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3i( GLint red, GLint green, GLint blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint red,GLint green,GLint blue)
glColor3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glColor3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3s( GLshort red, GLshort green, GLshort blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glColor3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glColor3ub	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ub( GLubyte red, GLubyte green, GLubyte blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glColor3ubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ubv( const GLubyte *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * v)
glColor3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ui( GLuint red, GLuint green, GLuint blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glColor3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3uiv( const GLuint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLuint * v)
glColor3us	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3us( GLushort red, GLushort green, GLushort blue );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glColor3usv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3usv( const GLushort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLushort * v)
glColor3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3xOES (GLfixed red, GLfixed green, GLfixed blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue)
glColor3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3xvOES (const GLfixed *components);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * components)
glColor4b	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4b( GLbyte red, GLbyte green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
glColor4bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4bv( const GLbyte *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glColor4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4d( GLdouble red, GLdouble green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
glColor4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glColor4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4f( GLfloat red, GLfloat green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * c,const GLfloat * n,const GLfloat * v)
glColor4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glColor4hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
glColor4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glColor4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4i( GLint red, GLint green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint red,GLint green,GLint blue,GLint alpha)
glColor4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glColor4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4s( GLshort red, GLshort green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort red,GLshort green,GLshort blue,GLshort alpha)
glColor4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glColor4ub	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ub( GLubyte red, GLubyte green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
glColor4ubVertex2fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
glColor4ubVertex2fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * c,const GLfloat * v)
glColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * c,const GLfloat * v)
glColor4ubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ubv( const GLubyte *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * v)
glColor4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ui( GLuint red, GLuint green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint red,GLuint green,GLuint blue,GLuint alpha)
glColor4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4uiv( const GLuint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLuint * v)
glColor4us	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4us( GLushort red, GLushort green,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLushort red,GLushort green,GLushort blue,GLushort alpha)
glColor4usv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4usv( const GLushort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLushort * v)
glColor4xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glColor4xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4xvOES (const GLfixed *components);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * components)
glColorFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glColorFragmentOp1ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
glColorFragmentOp2ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
glColorFragmentOp3ATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
glColorMask	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorMask( GLboolean red, GLboolean green, GLboolean blue, GLboolean alp/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glColorMask	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glColorMaskIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
glColorMaski	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
glColorMaterial	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorMaterial( GLenum face, GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum mode)
glColorP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP3ui (GLenum type, GLuint color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glColorP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP3uiv (GLenum type, const GLuint *color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glColorP4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP4ui (GLenum type, GLuint color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glColorP4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP4uiv (GLenum type, const GLuint *color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glColorPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorPointer( GLint size, GLenum type,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glColorPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glColorPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glColorPointervINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glColorSubTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorSubTable( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
glColorSubTable	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
glColorSubTableEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum form/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
glColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTable( GLenum target, GLenum internalformat,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * table)
glColorTable	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum fo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
glColorTableEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
glColorTableParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTableParameterfv(GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameterfvSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTableParameteriv(GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableParameterivSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
glCombinerInputNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum inp/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
glCombinerOutputNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cd/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
glCombinerParameterfNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glCombinerParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glCombinerParameteriNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glCombinerParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glCombinerStageParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum pname,const GLfloat * params)
glCompileShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader)
glCompileShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompileShader (GLuint shader);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader)
glCompileShaderARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB shaderObj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB shaderObj)
glCompileShaderIncludeARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
glCompressedMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint leve/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint leve/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint leve/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTexImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage1D( GLenum target, GLint level, GLenum internalformat,/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage1DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage2D( GLenum target, GLint level, GLenum internalformat,/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum i/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage2DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage3D( GLenum target, GLint level, GLenum internalformat,/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCompressedTexImage3DOES (GLenum target, GLint level, GLenum intern/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage1D( GLenum target, GLint level, GLint xoffset, GLsi/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage1DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLin/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage2DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage3D( GLenum target, GLint level, GLint xoffset, GLin/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3DARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCompressedTexSubImage3DOES (GLenum target, GLint level, GLint xoff/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTextureImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
glConvolutionFilter1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionFilter1D( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * image)
glConvolutionFilter1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
glConvolutionFilter1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
glConvolutionFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionFilter2D( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * image)
glConvolutionFilter2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
glConvolutionFilter2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
glConvolutionParameterf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameterf( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameteri( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum target, GLenum pname, GLint params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameterxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glConvolutionParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterxvOES (GLenum target, GLenum pname, const GLfixed *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glCopyBufferSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOff/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
glCopyColorSubTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyColorSubTable( GLenum target, GLsizei start,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorSubTable	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorSubTableEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyColorTable( GLenum target, GLenum internalformat,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyColorTable	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyColorTableSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyConvolutionFilter1D( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyConvolutionFilter2D( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyConvolutionFilter2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyConvolutionFilter2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyImageSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
glCopyImageSubDataNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
glCopyMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyPathNV (GLuint resultPath, GLuint srcPath);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint srcPath)
glCopyPixels	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyPixels( GLint x, GLint y,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)
glCopyTexImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexImage1D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTexImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTexImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexImage2D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum interna/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexSubImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage1D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTexSubImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage2D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffs/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yof/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage3D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffse/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yof/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCopyTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, G/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTextureImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTextureImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTextureLevelsAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTe/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount)
glCopyTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCoverFillPathInstancedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
glCoverFillPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverFillPathNV (GLuint path, GLenum coverMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum coverMode)
glCoverStrokePathInstancedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
glCoverStrokePathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverStrokePathNV (GLuint path, GLenum coverMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum coverMode)
glCoverageMaskNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCoverageMaskNV (GLboolean mask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean mask)
glCoverageOperationNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCoverageOperationNV (GLenum operation);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum operation)
glCreatePerfQueryINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCreatePerfQueryINTEL (GLuint queryId, GLuint *queryHandle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint * queryHandle)
glCreateProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(void)
glCreateProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateProgram (void);$/;"	p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(void)
glCreateProgramObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(void)
glCreateShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type)
glCreateShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateShader (GLenum type);$/;"	p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLenum type)
glCreateShaderObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum shaderType);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum shaderType)
glCreateShaderProgramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type,const GLchar * string)
glCreateShaderProgramv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*st/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type,GLsizei count,const GLchar * const * strings)
glCreateShaderProgramvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLuint GL_APIENTRY glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLcha/;"	p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLenum type,GLsizei count,const GLchar ** strings)
glCreateSyncFromCLeventARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context *context, struct _cl_event /;"	p	typeref:typename:GLAPI GLsync APIENTRY	signature:(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
glCullFace	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glCullFace( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glCullFace	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCullFace (GLenum mode);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glCullParameterdvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLdouble * params)
glCullParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * params)
glCurrentPaletteMatrixARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint index)
glDebugMessageCallback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROC callback,const void * userParam)
glDebugMessageCallbackAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void *userParam);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROCAMD callback,void * userParam)
glDebugMessageCallbackARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void *userParam);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROCARB callback,const void * userParam)
glDebugMessageCallbackKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageCallbackKHR (GLDEBUGPROCKHR callback, const void *user/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLDEBUGPROCKHR callback,const void * userParam)
glDebugMessageControl	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageControlARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageControlKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageControlKHR (GLenum source, GLenum type, GLenum severit/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageEnableAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageInsert	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDebugMessageInsertAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
glDebugMessageInsertARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum sever/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDebugMessageInsertKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageInsertKHR (GLenum source, GLenum type, GLuint id, GLen/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDeformSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glDeformationMap3dSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustri/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
glDeformationMap3fSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
glDeleteAsyncMarkersSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint marker,GLsizei range)
glDeleteBuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteBuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteBuffers (GLsizei n, const GLuint* buffers);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteBuffersARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei n, const GLuint *buffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteFencesAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFencesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFencesNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFragmentShaderATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDeleteFramebuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteFramebuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint* framebuffers)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteFramebuffersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteLists	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDeleteLists( GLuint list, GLsizei range );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list,GLsizei range)
glDeleteNamedStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name)
glDeleteNamesAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint *names);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint num,const GLuint * names)
glDeleteObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB obj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj)
glDeleteOcclusionQueriesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeletePathsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei range)
glDeletePerfMonitorsAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * monitors)
glDeletePerfMonitorsAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * monitors)
glDeletePerfQueryINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePerfQueryINTEL (GLuint queryHandle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glDeleteProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glDeleteProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteProgram (GLuint program);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glDeleteProgramPipelines	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * pipelines)
glDeleteProgramPipelinesEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * pipelines)
glDeleteProgramsARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei n, const GLuint *programs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glDeleteProgramsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glDeleteQueries	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteQueriesARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteQueriesEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteQueriesEXT (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteRenderbuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteRenderbuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint* renderbuffer/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteRenderbuffersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteSamplers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLuint * samplers)
glDeleteShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader)
glDeleteShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteShader (GLuint shader);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader)
glDeleteSync	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync)
glDeleteSyncAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteSyncAPPLE (GLsync sync);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync)
glDeleteTextures	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDeleteTextures( GLsizei n, const GLuint *textures);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTextures	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteTextures (GLsizei n, const GLuint* textures);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTexturesEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei n, const GLuint *textures);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTransformFeedbacks	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteTransformFeedbacksNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacksNV (GLsizei n, const GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteVertexArrays	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexArraysAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexArraysOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexShaderEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDepthBoundsEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampd zmin,GLclampd zmax)
glDepthBoundsdNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble zmin,GLdouble zmax)
glDepthFunc	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthFunc( GLenum func );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func)
glDepthFunc	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthFunc (GLenum func);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func)
glDepthMask	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthMask( GLboolean flag );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean flag)
glDepthMask	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthMask (GLboolean flag);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean flag)
glDepthRange	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthRange( GLclampd near_val, GLclampd far_val );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampd near_val,GLclampd far_val)
glDepthRangeArrayv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLdouble * v)
glDepthRangeIndexed	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble n,GLdouble f)
glDepthRangedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble zNear,GLdouble zFar)
glDepthRangef	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat n,GLfloat f)
glDepthRangef	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthRangef (GLclampf zNear, GLclampf zFar);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf zNear,GLclampf zFar)
glDepthRangefOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangefOES (GLclampf n, GLclampf f);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf n,GLclampf f)
glDepthRangexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangexOES (GLfixed n, GLfixed f);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed n,GLfixed f)
glDetachObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLhandleARB attachedObj)
glDetachShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint shader)
glDetachShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint shader)
glDetailTexFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei n,const GLfloat * points)
glDisable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDisable( GLenum cap );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glDisable	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDisable (GLenum cap);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum cap)
glDisableClientState	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDisableClientState( GLenum cap );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glDisableClientStateIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glDisableClientStateiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableClientStateiEXT (GLenum array, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glDisableDriverControlQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDisableDriverControlQCOM (GLuint driverControl);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl)
glDisableIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glDisableVariantClientStateEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDisableVertexArrayAttribEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index)
glDisableVertexArrayEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum array)
glDisableVertexAttribAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname)
glDisableVertexAttribArray	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glDisableVertexAttribArray	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index)
glDisableVertexAttribArrayARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glDisablei	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glDiscardFramebufferEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, cons/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments)
glDispatchCompute	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_grou/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
glDispatchComputeGroupSizeARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
glDispatchComputeIndirect	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLintptr indirect)
glDrawArrays	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawArrays( GLenum mode, GLint first, GLsizei count );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArrays	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArraysEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArraysIndirect	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const void *indirect);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect)
glDrawArraysInstanced	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei inst/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
glDrawArraysInstancedANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawArraysInstancedANGLE (GLenum mode, GLint first, GLsizei count,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawArraysInstancedARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawArraysInstancedBaseInstance	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
glDrawArraysInstancedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
glDrawArraysInstancedNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawArraysInstancedNV (GLenum mode, GLint first, GLsizei count, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawBuffer( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glDrawBuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei n, const GLenum *bufs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei n, const GLenum *bufs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersEXT (GLsizei n, const GLenum *bufs);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersIndexedEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersIndexedEXT (GLint n, const GLenum *location, const GLin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint n,const GLenum * location,const GLint * indices)
glDrawBuffersNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersNV (GLsizei n, const GLenum *bufs);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawElementArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawElementArrayATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum mode, GLsizei count);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count)
glDrawElements	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawElements( GLenum mode, GLsizei count,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
glDrawElements	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, con/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
glDrawElementsBaseVertex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
glDrawElementsIndirect	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect)
glDrawElementsInstanced	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
glDrawElementsInstancedANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawElementsInstancedANGLE (GLenum mode, GLsizei count, GLenum typ/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedBaseInstance	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
glDrawElementsInstancedBaseVertex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
glDrawElementsInstancedBaseVertexBaseInstance	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
glDrawElementsInstancedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawElementsInstancedNV (GLenum mode, GLsizei count, GLenum type, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei primcount)
glDrawMeshArraysSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei width)
glDrawPixels	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawPixels( GLsizei width, GLsizei height,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glDrawRangeElementArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint f/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
glDrawRangeElementArrayATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count)
glDrawRangeElements	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawRangeElements( GLenum mode, GLuint start,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
glDrawRangeElements	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
glDrawRangeElementsBaseVertex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
glDrawRangeElementsEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
glDrawTextureNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTextureNV (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
glDrawTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id)
glDrawTransformFeedbackInstanced	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instanceco/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLsizei instancecount)
glDrawTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackNV (GLenum mode, GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id)
glDrawTransformFeedbackStream	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLuint stream)
glDrawTransformFeedbackStreamInstanced	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint strea/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
glEGLImageTargetRenderbufferStorageOES	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetRenderbufferStorageOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetTexture2DOES	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetTexture2DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEdgeFlag	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlag( GLboolean flag );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean flag)
glEdgeFlagFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stride)
glEdgeFlagPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlagPointer( GLsizei stride, const GLvoid *ptr );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei stride,const GLvoid * ptr)
glEdgeFlagPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stride,GLsizei count,const GLboolean * pointer)
glEdgeFlagPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint stride, const GLboolean **pointer, GLint ptr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint stride,const GLboolean ** pointer,GLint ptrstride)
glEdgeFlagv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlagv( const GLboolean *flag );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLboolean * flag)
glElementPointerAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum type, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void * pointer)
glElementPointerATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum type, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void * pointer)
glEnable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnable( GLenum cap );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glEnable	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glEnable (GLenum cap);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum cap)
glEnableClientState	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnableClientState( GLenum cap );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glEnableClientStateIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glEnableClientStateiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableClientStateiEXT (GLenum array, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glEnableDriverControlQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEnableDriverControlQCOM (GLuint driverControl);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl)
glEnableIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEnableVariantClientStateEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint id);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glEnableVertexArrayAttribEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index)
glEnableVertexArrayEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum array)
glEnableVertexAttribAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname)
glEnableVertexAttribArray	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glEnableVertexAttribArray	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index)
glEnableVertexAttribArrayARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glEnablei	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEnd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnd( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glEndConditionalRender	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndConditionalRenderNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndConditionalRenderNVX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNVX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndFragmentShaderATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndList	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEndList( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glEndOcclusionQueryNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndPerfMonitorAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor)
glEndPerfMonitorAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor)
glEndPerfQueryINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndPerfQueryINTEL (GLuint queryHandle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glEndQuery	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glEndQueryARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glEndQueryEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndQueryEXT (GLenum target);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target)
glEndQueryIndexed	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEndTilingQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndTilingQCOM (GLbitfield preserveMask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLbitfield preserveMask)
glEndTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndTransformFeedbackEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndVertexShaderEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndVideoCaptureNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndVideoCaptureNV (GLuint video_capture_slot);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot)
glEvalCoord1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1d( GLdouble u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble u)
glEvalCoord1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1dv( const GLdouble *u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * u)
glEvalCoord1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1f( GLfloat u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat u)
glEvalCoord1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1fv( const GLfloat *u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * u)
glEvalCoord1xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord1xOES (GLfixed u);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed u)
glEvalCoord1xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord1xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glEvalCoord2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2d( GLdouble u, GLdouble v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble u,GLdouble v)
glEvalCoord2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2dv( const GLdouble *u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * u)
glEvalCoord2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2f( GLfloat u, GLfloat v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat u,GLfloat v)
glEvalCoord2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2fv( const GLfloat *u );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * u)
glEvalCoord2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord2xOES (GLfixed u, GLfixed v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed u,GLfixed v)
glEvalCoord2xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord2xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glEvalMapsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum target, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum mode)
glEvalMesh1	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalMesh1( GLenum mode, GLint i1, GLint i2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint i1,GLint i2)
glEvalMesh2	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalMesh2( GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2)
glEvalPoint1	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalPoint1( GLint i );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i)
glEvalPoint2	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalPoint2( GLint i, GLint j );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i,GLint j)
glExecuteProgramNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,const GLfloat * params)
glExtGetBufferPointervQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetBufferPointervQCOM (GLenum target, GLvoid **params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLvoid ** params)
glExtGetBuffersQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetBuffersQCOM (GLuint *buffers, GLint maxBuffers, GLint *numBu/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * buffers,GLint maxBuffers,GLint * numBuffers)
glExtGetFramebuffersQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetFramebuffersQCOM (GLuint *framebuffers, GLint maxFramebuffer/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * framebuffers,GLint maxFramebuffers,GLint * numFramebuffers)
glExtGetProgramBinarySourceQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramBinarySourceQCOM (GLuint program, GLenum shadertype, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum shadertype,GLchar * source,GLint * length)
glExtGetProgramsQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramsQCOM (GLuint *programs, GLint maxPrograms, GLint *nu/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * programs,GLint maxPrograms,GLint * numPrograms)
glExtGetRenderbuffersQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetRenderbuffersQCOM (GLuint *renderbuffers, GLint maxRenderbuf/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * renderbuffers,GLint maxRenderbuffers,GLint * numRenderbuffers)
glExtGetShadersQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetShadersQCOM (GLuint *shaders, GLint maxShaders, GLint *numSh/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * shaders,GLint maxShaders,GLint * numShaders)
glExtGetTexLevelParameterivQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexLevelParameterivQCOM (GLuint texture, GLenum face, GLint /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum face,GLint level,GLenum pname,GLint * params)
glExtGetTexSubImageQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexSubImageQCOM (GLenum target, GLint level, GLint xoffset, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLvoid * texels)
glExtGetTexturesQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexturesQCOM (GLuint *textures, GLint maxTextures, GLint *nu/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * textures,GLint maxTextures,GLint * numTextures)
glExtIsProgramBinaryQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glExtIsProgramBinaryQCOM (GLuint program);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint program)
glExtTexObjectStateOverrideiQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtTexObjectStateOverrideiQCOM (GLenum target, GLenum pname, GLint/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glExtractComponentEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint src,GLuint num)
glFeedbackBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei size,GLenum type,GLfloat * buffer)
glFeedbackBufferxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFeedbackBufferxOES (GLsizei n, GLenum type, const GLfixed *buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLenum type,const GLfixed * buffer)
glFenceSync	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	p	typeref:typename:GLAPI GLsync APIENTRY	signature:(GLenum condition,GLbitfield flags)
glFenceSyncAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLsync GL_APIENTRY glFenceSyncAPPLE (GLenum condition, GLbitfield flags);$/;"	p	typeref:typename:GL_APICALL GLsync GL_APIENTRY	signature:(GLenum condition,GLbitfield flags)
glFinalCombinerInputNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
glFinish	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFinish( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glFinish	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFinish (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glFinishAsyncSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *markerp);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint * markerp)
glFinishFenceAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint fence);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glFinishFenceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint fence);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glFinishFenceNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFinishFenceNV (GLuint fence);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence)
glFinishObjectAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum object, GLint name);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum object,GLint name)
glFinishTextureSUNX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlush	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFlush( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glFlush	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFlush (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glFlushMappedBufferRange	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length)
glFlushMappedBufferRangeAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr si/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size)
glFlushMappedBufferRangeEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizei/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length)
glFlushMappedNamedBufferRangeEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length)
glFlushPixelDataRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glFlushRasterSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlushStaticDataIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushStaticDataIBM (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glFlushVertexArrayRangeAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,void * pointer)
glFlushVertexArrayRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFogCoordFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glFogCoordPointer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum type, GLsizei stride, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glFogCoordPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glFogCoordPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum type, GLint stride, const void **pointer, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glFogCoordd	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble coord)
glFogCoorddEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble coord)
glFogCoorddv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * coord)
glFogCoorddvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * coord)
glFogCoordf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat coord)
glFogCoordfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat coord)
glFogCoordfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * coord)
glFogCoordfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *coord);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * coord)
glFogCoordhNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV fog)
glFogCoordhvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * fog)
glFogFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei n, const GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLfloat * points)
glFogf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogf( GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glFogfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogfv( GLenum pname, const GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLfloat * params)
glFogi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogi( GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glFogiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogiv( GLenum pname, const GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLint * params)
glFogxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogxOES (GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glFogxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogxvOES (GLenum pname, const GLfixed *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * param)
glFragmentColorMaterialSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum face, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glFragmentLightModelfSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glFragmentLightModelfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glFragmentLightModeliSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glFragmentLightModelivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glFragmentLightfSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfloat param)
glFragmentLightfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLfloat * params)
glFragmentLightiSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLint param)
glFragmentLightivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLint * params)
glFragmentMaterialfSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfloat param)
glFragmentMaterialfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLfloat * params)
glFragmentMaterialiSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLint param)
glFragmentMaterialivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLint * params)
glFrameTerminatorGREMEDY	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrameTerminatorGREMEDY (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFrameZoomSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint factor)
glFramebufferDrawBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum mode)
glFramebufferDrawBuffersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLsizei n,const GLenum * bufs)
glFramebufferParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glFramebufferReadBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum mode)
glFramebufferRenderbuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferRenderbuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum rende/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferTexture	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTexture1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2DMultisampleEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleEXT (GLenum target, GLenum attachme/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
glFramebufferTexture2DMultisampleIMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleIMG (GLenum target, GLenum attachme/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
glFramebufferTexture3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTexture3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTexture3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture3DOES (GLenum target, GLenum attachment, GLenum /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTextureARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTextureFaceARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint textur/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
glFramebufferTextureFaceEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint textur/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
glFramebufferTextureLayer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFramebufferTextureLayerARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint textu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFramebufferTextureLayerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint textu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFreeObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glFrontFace	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFrontFace( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glFrontFace	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFrontFace (GLenum mode);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glFrustum	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glFrustum( GLdouble left, GLdouble right,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)
glFrustumfOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrustumfOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
glFrustumxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrustumxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
glGenAsyncMarkersSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei range);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei range)
glGenBuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenBuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenBuffers (GLsizei n, GLuint* buffers);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenBuffersARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei n, GLuint *buffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenFencesAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei n, GLuint *fences);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFencesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFencesNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFragmentShadersATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint range);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint range)
glGenFramebuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenFramebuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenFramebuffers (GLsizei n, GLuint* framebuffers);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenFramebuffersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenLists	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint GLAPIENTRY glGenLists( GLsizei range );$/;"	p	typeref:typename:GLAPI GLuint GLAPIENTRY	signature:(GLsizei range)
glGenNamesAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenNamesAMD (GLenum identifier, GLuint num, GLuint *names);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint num,GLuint * names)
glGenOcclusionQueriesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenPathsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei range)
glGenPerfMonitorsAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * monitors)
glGenPerfMonitorsAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * monitors)
glGenProgramPipelines	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * pipelines)
glGenProgramPipelinesEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * pipelines)
glGenProgramsARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei n, GLuint *programs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * programs)
glGenProgramsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei n, GLuint *programs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * programs)
glGenQueries	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenQueriesARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenQueriesEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenQueriesEXT (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenRenderbuffers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenRenderbuffers	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenRenderbuffers (GLsizei n, GLuint* renderbuffers);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenRenderbuffersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenSamplers	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,GLuint * samplers)
glGenSymbolsEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
glGenTextures	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGenTextures( GLsizei n, GLuint *textures );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTextures	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenTextures (GLsizei n, GLuint* textures);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTexturesEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei n, GLuint *textures);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTransformFeedbacks	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenTransformFeedbacksNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacksNV (GLsizei n, GLuint *ids);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenVertexArrays	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexArraysAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei n, GLuint *arrays);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexArraysOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenVertexArraysOES (GLsizei n, GLuint *arrays);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexShadersEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint range);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint range)
glGenerateMipmap	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glGenerateMipmap	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenerateMipmap (GLenum target);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target)
glGenerateMipmapEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glGenerateMultiTexMipmapEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target)
glGenerateTextureMipmapEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target)
glGetActiveAtomicCounterBufferiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
glGetActiveAttrib	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *l/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveAttrib	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei buf/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufsize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveAttribARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLengt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
glGetActiveSubroutineName	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
glGetActiveSubroutineUniformName	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
glGetActiveSubroutineUniformiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
glGetActiveUniform	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveUniform	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bu/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufsize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveUniformARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLeng/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
glGetActiveUniformBlockName	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
glGetActiveUniformBlockiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
glGetActiveUniformName	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
glGetActiveUniformsiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *u/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
glGetActiveVaryingNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetArrayObjectfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLenum pname,GLfloat * params)
glGetArrayObjectivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLenum pname,GLint * params)
glGetAttachedObjectsARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
glGetAttachedShaders	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
glGetAttachedShaders	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxcount, GLsi/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei maxcount,GLsizei * count,GLuint * shaders)
glGetAttribLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetAttribLocation	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLint        GL_APIENTRY glGetAttribLocation (GLuint program, const GLchar* name);$/;"	p	typeref:typename:GL_APICALL GLint GL_APIENTRY	signature:(GLuint program,const GLchar * name)
glGetAttribLocationARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB programObj,const GLcharARB * name)
glGetBooleanIndexedvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLboolean * data)
glGetBooleani_v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLboolean * data)
glGetBooleanv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetBooleanv( GLenum pname, GLboolean *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLboolean * params)
glGetBooleanv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetBooleanv (GLenum pname, GLboolean* params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLboolean * params)
glGetBufferParameteri64v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint64 * params)
glGetBufferParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameteriv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameterivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameterui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint64EXT * params)
glGetBufferPointerv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetBufferPointervARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum target, GLenum pname, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetBufferPointervOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetBufferPointervOES (GLenum target, GLenum pname, GLvoid **params/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLvoid ** params)
glGetBufferSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *d/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
glGetBufferSubDataARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
glGetClipPlane	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetClipPlane( GLenum plane, GLdouble *equation );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum plane,GLdouble * equation)
glGetClipPlanefOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetClipPlanefOES (GLenum plane, GLfloat *equation);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,GLfloat * equation)
glGetClipPlanexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetClipPlanexOES (GLenum plane, GLfixed *equation);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,GLfixed * equation)
glGetColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTable( GLenum target, GLenum format,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * table)
glGetColorTable	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTable (GLenum target, GLenum format, GLenum type, void *table);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * table)
glGetColorTableEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum target, GLenum format, GLenum type, void *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * data)
glGetColorTableParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTableParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfvSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTableParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameterivSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableSGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum target, GLenum format, GLenum type, void *table);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * table)
glGetCombinerInputParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variab/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
glGetCombinerInputParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variab/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
glGetCombinerOutputParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
glGetCombinerOutputParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum pname,GLint * params)
glGetCombinerStageParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum pname,GLfloat * params)
glGetCompressedMultiTexImageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint lod,void * img)
glGetCompressedTexImage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetCompressedTexImage( GLenum target, GLint lod, GLvoid *img );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint lod,GLvoid * img)
glGetCompressedTexImage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,void * img)
glGetCompressedTexImageARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum target, GLint level, void *img);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,void * img)
glGetCompressedTextureImageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, vo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint lod,void * img)
glGetConvolutionFilter	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionFilter( GLenum target, GLenum format,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * image)
glGetConvolutionFilter	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, void *ima/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * image)
glGetConvolutionFilterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, void */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * image)
glGetConvolutionParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterxvOES (GLenum target, GLenum pname, GLfixed *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetDebugMessageLog	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum *sources, GLen/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDebugMessageLogAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
glGetDebugMessageLogARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum *sources, G/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDebugMessageLogKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLuint GL_APIENTRY glGetDebugMessageLogKHR (GLuint count, GLsizei bufsize, GLenum *so/;"	p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDetailTexFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat * points)
glGetDoubleIndexedvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * data)
glGetDoublei_v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * data)
glGetDoublei_vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLdouble * params)
glGetDoublev	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetDoublev( GLenum pname, GLdouble *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLdouble * params)
glGetDriverControlStringQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlStringQCOM (GLuint driverControl, GLsizei bufSize,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl,GLsizei bufSize,GLsizei * length,GLchar * driverControlString)
glGetDriverControlsQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlsQCOM (GLint *num, GLsizei size, GLuint *driverCon/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint * num,GLsizei size,GLuint * driverControls)
glGetError	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum GLAPIENTRY glGetError( void );$/;"	p	typeref:typename:GLAPI GLenum GLAPIENTRY	signature:(void)
glGetError	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLenum       GL_APIENTRY glGetError (void);$/;"	p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(void)
glGetFenceivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence,GLenum pname,GLint * params)
glGetFenceivNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence,GLenum pname,GLint * params)
glGetFinalCombinerInputParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum pname,GLfloat * params)
glGetFinalCombinerInputParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum pname,GLint * params)
glGetFirstPerfQueryIdINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFirstPerfQueryIdINTEL (GLuint *queryId);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint * queryId)
glGetFixedvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFixedvOES (GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed * params)
glGetFloatIndexedvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * data)
glGetFloati_v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * data)
glGetFloati_vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * params)
glGetFloatv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetFloatv( GLenum pname, GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat * params)
glGetFloatv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetFloatv (GLenum pname, GLfloat* params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLfloat * params)
glGetFogFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat * points)
glGetFragDataIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragDataLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragDataLocationEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocationEXT (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragmentLightfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfloat * params)
glGetFragmentLightivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLint * params)
glGetFragmentMaterialfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfloat * params)
glGetFragmentMaterialivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameteriv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetFramebufferParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint * params)
glGetGraphicsResetStatusARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(void)
glGetGraphicsResetStatusEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLenum GL_APIENTRY glGetGraphicsResetStatusEXT (void);$/;"	p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(void)
glGetHandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum pname);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum pname)
glGetHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogram( GLenum target, GLboolean reset,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
glGetHistogram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetHistogramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum typ/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetHistogramParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogramParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogramParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetImageHandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLi/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
glGetImageHandleNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLin/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
glGetImageTransformParameterfvHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetImageTransformParameterivHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetInfoLogARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLchar/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
glGetInstrumentsSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(void)
glGetInteger64i_v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint64 * data)
glGetInteger64v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint64 * data)
glGetInteger64vAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetInteger64vAPPLE (GLenum pname, GLint64 *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint64 * params)
glGetIntegerIndexedvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegeri_v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegeri_vEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetIntegeri_vEXT (GLenum target, GLuint index, GLint *data);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegerui64i_vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum value,GLuint index,GLuint64EXT * result)
glGetIntegerui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum value,GLuint64EXT * result)
glGetIntegerv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetIntegerv( GLenum pname, GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint * params)
glGetIntegerv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetIntegerv (GLenum pname, GLint* params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint * params)
glGetInternalformati64v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
glGetInternalformativ	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
glGetInvariantBooleanvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetInvariantFloatvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetInvariantIntegervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetLightfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetLightfv( GLenum light, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLfloat * params)
glGetLightiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetLightiv( GLenum light, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLint * params)
glGetLightxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLightxOES (GLenum light, GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfixed * params)
glGetListParameterfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLfloat * params)
glGetListParameterivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLint * params)
glGetLocalConstantBooleanvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetLocalConstantFloatvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetLocalConstantIntegervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetMapAttribParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLfloat * params)
glGetMapAttribParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLint * params)
glGetMapControlPointsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei u/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
glGetMapParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMapParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMapdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapdv( GLenum target, GLenum query, GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLdouble * v)
glGetMapfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapfv( GLenum target, GLenum query, GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLfloat * v)
glGetMapiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapiv( GLenum target, GLenum query, GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLint * v)
glGetMapxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapxvOES (GLenum target, GLenum query, GLfixed *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLfixed * v)
glGetMaterialfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMaterialfv( GLenum face, GLenum pname, GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLfloat * params)
glGetMaterialiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMaterialiv( GLenum face, GLenum pname, GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLint * params)
glGetMaterialxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfixed param)
glGetMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmax( GLenum target, GLboolean reset,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid * values)
glGetMinmax	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetMinmaxEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetMinmaxParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmaxParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmaxParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMinmaxParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMinmaxParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMultiTexEnvfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
glGetMultiTexEnvivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultiTexGendvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
glGetMultiTexGenfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
glGetMultiTexGenivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *pa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
glGetMultiTexImageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum fo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
glGetMultiTexLevelParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetMultiTexLevelParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
glGetMultiTexParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultiTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
glGetMultiTexParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
glGetMultiTexParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultisamplefv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * val)
glGetMultisamplefvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat *val);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * val)
glGetNamedBufferParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLint * params)
glGetNamedBufferParameterui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLuint64EXT * params)
glGetNamedBufferPointervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,void ** params)
glGetNamedBufferSubDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
glGetNamedFramebufferAttachmentParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum at/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
glGetNamedFramebufferParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint * params)
glGetNamedProgramLocalParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLint * params)
glGetNamedProgramLocalParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLuint * params)
glGetNamedProgramLocalParameterdvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLdouble * params)
glGetNamedProgramLocalParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLfloat * params)
glGetNamedProgramStringEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum pname,void * string)
glGetNamedProgramivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum pname,GLint * params)
glGetNamedRenderbufferParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLenum pname,GLint * params)
glGetNamedStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
glGetNamedStringivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
glGetNextPerfQueryIdINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint *nextQueryId);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint * nextQueryId)
glGetObjectBufferfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLfloat * params)
glGetObjectBufferivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLint * params)
glGetObjectLabel	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *l/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabelKHR (GLenum identifier, GLuint name, GLsizei bufSize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectParameterfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLenum pname,GLfloat * params)
glGetObjectParameterivAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum objectType,GLuint name,GLenum pname,GLint * params)
glGetObjectParameterivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLenum pname,GLint * params)
glGetObjectPtrLabel	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLch/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectPtrLabelKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectPtrLabelKHR (const void *ptr, GLsizei bufSize, GLsizei *l/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetOcclusionQueryivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetOcclusionQueryuivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetPathColorGenfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum pname,GLfloat * value)
glGetPathColorGenivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathColorGenivNV (GLenum color, GLenum pname, GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum pname,GLint * value)
glGetPathCommandsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathCommandsNV (GLuint path, GLubyte *commands);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLubyte * commands)
glGetPathCoordsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathCoordsNV (GLuint path, GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLfloat * coords)
glGetPathDashArrayNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathDashArrayNV (GLuint path, GLfloat *dashArray);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLfloat * dashArray)
glGetPathLengthNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLfloat APIENTRY glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments/;"	p	typeref:typename:GLAPI GLfloat APIENTRY	signature:(GLuint path,GLsizei startSegment,GLsizei numSegments)
glGetPathMetricRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
glGetPathMetricsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
glGetPathParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLfloat * value)
glGetPathParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLint * value)
glGetPathSpacingNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameTy/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
glGetPathTexGenfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum pname,GLfloat * value)
glGetPathTexGenivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum pname,GLint * value)
glGetPerfCounterInfoINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterN/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
glGetPerfMonitorCounterDataAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
glGetPerfMonitorCounterDataAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
glGetPerfMonitorCounterInfoAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLuint counter,GLenum pname,void * data)
glGetPerfMonitorCounterInfoAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLuint counter,GLenum pname,GLvoid * data)
glGetPerfMonitorCounterStringAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufS/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
glGetPerfMonitorCounterStringAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsi/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
glGetPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxAct/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
glGetPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
glGetPerfMonitorGroupStringAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *leng/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
glGetPerfMonitorGroupStringAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsiz/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
glGetPerfMonitorGroupsAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *gro/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
glGetPerfMonitorGroupsAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLu/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
glGetPerfQueryDataINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
glGetPerfQueryIdByNameINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryIdByNameINTEL (GLchar *queryName, GLuint *queryId);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLchar * queryName,GLuint * queryId)
glGetPerfQueryInfoINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar *que/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
glGetPixelMapfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapfv( GLenum map, GLfloat *values );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLfloat * values)
glGetPixelMapuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapuiv( GLenum map, GLuint *values );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLuint * values)
glGetPixelMapusv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapusv( GLenum map, GLushort *values );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLushort * values)
glGetPixelMapxv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelMapxv (GLenum map, GLint size, GLfixed *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLint size,GLfixed * values)
glGetPixelTexGenParameterfvSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * params)
glGetPixelTexGenParameterivSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint * params)
glGetPixelTransformParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetPixelTransformParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetPointerIndexedvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, void **data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,void ** data)
glGetPointeri_vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointeri_vEXT (GLenum pname, GLuint index, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,void ** params)
glGetPointerv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPointerv( GLenum pname, GLvoid **params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLvoid ** params)
glGetPointervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum pname, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,void ** params)
glGetPointervKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPointervKHR (GLenum pname, GLvoid **params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLvoid ** params)
glGetPolygonStipple	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPolygonStipple( GLubyte *mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte * mask)
glGetProgramBinary	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
glGetProgramBinaryOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramBinaryOES (GLuint program, GLsizei bufSize, GLsizei *len/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
glGetProgramEnvParameterIivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * params)
glGetProgramEnvParameterIuivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * params)
glGetProgramEnvParameterdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * params)
glGetProgramEnvParameterfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * params)
glGetProgramInfoLog	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLcha/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramInfoLog	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufsize, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei bufsize,GLsizei * length,GLchar * infolog)
glGetProgramInterfaceiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pna/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
glGetProgramLocalParameterIivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * params)
glGetProgramLocalParameterIuivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * params)
glGetProgramLocalParameterdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * params)
glGetProgramLocalParameterfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * params)
glGetProgramNamedParameterdvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
glGetProgramNamedParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
glGetProgramParameterdvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLdouble * params)
glGetProgramParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLfloat * params)
glGetProgramPipelineInfoLog	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *leng/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramPipelineInfoLogEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramPipelineiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLenum pname,GLint * params)
glGetProgramPipelineivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *par/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLenum pname,GLint * params)
glGetProgramResourceIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const /;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, cons/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceLocationIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface,/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceName	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
glGetProgramResourceiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint inde/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
glGetProgramStageiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
glGetProgramStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum target, GLenum pname, void *string);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void * string)
glGetProgramStringNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLubyte * program)
glGetProgramSubroutineParameteruivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * param)
glGetProgramiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint * params)
glGetProgramiv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint* params)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum pname,GLint * params)
glGetProgramivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetProgramivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryIndexediv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLint * params)
glGetQueryObjecti64v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjecti64vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjecti64vEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjectiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectivEXT (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectui64v	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectui64vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectui64vEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryObjectuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryObjectuivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetQueryivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetQueryivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameteriv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, G/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetSamplerParameterIiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint * params)
glGetSamplerParameterIuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLuint * params)
glGetSamplerParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLfloat * params)
glGetSamplerParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint * params)
glGetSeparableFilter	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetSeparableFilter( GLenum target, GLenum format,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * row,GLvoid * column,GLvoid * span)
glGetSeparableFilter	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum target, GLenum format, GLenum type, void *row, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
glGetSeparableFilterEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, void *ro/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
glGetShaderInfoLog	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetShaderInfoLog	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufsize, GLsizei*/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * infolog)
glGetShaderPrecisionFormat	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
glGetShaderPrecisionFormat	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precis/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
glGetShaderSource	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
glGetShaderSource	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderSource (GLuint shader, GLsizei bufsize, GLsizei* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
glGetShaderSourceARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
glGetShaderiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLenum pname,GLint * params)
glGetShaderiv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint* params);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLenum pname,GLint * params)
glGetSharpenTexFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat * points)
glGetString	/usr/include/SDL2/SDL_opengl.h	/^GLAPI const GLubyte * GLAPIENTRY glGetString( GLenum name );$/;"	p	typeref:typename:GLAPI const GLubyte * GLAPIENTRY	signature:(GLenum name)
glGetString	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL const GLubyte* GL_APIENTRY glGetString (GLenum name);$/;"	p	typeref:typename:GL_APICALL const GLubyte * GL_APIENTRY	signature:(GLenum name)
glGetStringi	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI const GLubyte *APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	p	typeref:typename:GLAPI const GLubyte * APIENTRY	signature:(GLenum name,GLuint index)
glGetSubroutineIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *nam/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,GLenum shadertype,const GLchar * name)
glGetSubroutineUniformLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GL/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum shadertype,const GLchar * name)
glGetSynciv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glGetSyncivAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glGetTexBumpParameterfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * param)
glGetTexBumpParameterivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum pname, GLint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint * param)
glGetTexEnvfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexEnvfv( GLenum target, GLenum pname, GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexEnviv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexEnviv( GLenum target, GLenum pname, GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexEnvxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexEnvxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetTexFilterFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum filter,GLfloat * weights)
glGetTexGendv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGendv( GLenum coord, GLenum pname, GLdouble *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLdouble * params)
glGetTexGenfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGenfv( GLenum coord, GLenum pname, GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLfloat * params)
glGetTexGeniv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGeniv( GLenum coord, GLenum pname, GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLint * params)
glGetTexGenxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,GLfixed * params)
glGetTexImage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexImage( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum format,GLenum type,GLvoid * pixels)
glGetTexLevelParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexLevelParameterfv( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetTexLevelParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexLevelParameteriv( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLint * params)
glGetTexLevelParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexLevelParameterxvOES (GLenum target, GLint level, GLenum pname, GLfix/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLfixed * params)
glGetTexParameterIiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterIuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint * params)
glGetTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint * params)
glGetTexParameterPointervAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, void **params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetTexParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexParameterfv( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexParameterfv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat* p/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexParameteriv( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameteriv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint* par/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetTextureHandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleARB (GLuint texture);$/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture)
glGetTextureHandleNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleNV (GLuint texture);$/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture)
glGetTextureImageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum for/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
glGetTextureLevelParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetTextureLevelParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
glGetTextureParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint * params)
glGetTextureParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLuint * params)
glGetTextureParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
glGetTextureParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint * params)
glGetTextureSamplerHandleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);$/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLuint sampler)
glGetTextureSamplerHandleNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);$/;"	p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLuint sampler)
glGetTrackMatrixivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *pa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint address,GLenum pname,GLint * params)
glGetTransformFeedbackVarying	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetTransformFeedbackVaryingEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufS/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetTransformFeedbackVaryingNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *locati/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLint * location)
glGetTranslatedShaderSourceANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
glGetUniformBlockIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,const GLchar * uniformBlockName)
glGetUniformBufferSizeEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformBufferSizeEXT (GLuint program, GLint location);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLint location)
glGetUniformIndices	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
glGetUniformLocation	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetUniformLocation	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLint        GL_APIENTRY glGetUniformLocation (GLuint program, const GLchar* name);$/;"	p	typeref:typename:GL_APICALL GLint GL_APIENTRY	signature:(GLuint program,const GLchar * name)
glGetUniformLocationARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB programObj,const GLcharARB * name)
glGetUniformOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLintptr APIENTRY glGetUniformOffsetEXT (GLuint program, GLint location);$/;"	p	typeref:typename:GLAPI GLintptr APIENTRY	signature:(GLuint program,GLint location)
glGetUniformSubroutineuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLint location,GLuint * params)
glGetUniformdv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble * params)
glGetUniformfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat * params)
glGetUniformfv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat* par/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat * params)
glGetUniformfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLint location,GLfloat * params)
glGetUniformi64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT * params)
glGetUniformiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint * params)
glGetUniformiv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformiv (GLuint program, GLint location, GLint* param/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint * params)
glGetUniformivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLint location,GLint * params)
glGetUniformui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT * params)
glGetUniformuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint * params)
glGetUniformuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint * params)
glGetVariantArrayObjectfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLfloat * params)
glGetVariantArrayObjectivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetVariantBooleanvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetVariantFloatvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetVariantIntegervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetVariantPointervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint id, GLenum value, void **data);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,void ** data)
glGetVaryingLocationNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetVaryingLocationNV (GLuint program, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetVertexArrayIntegeri_vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
glGetVertexArrayIntegervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum pname,GLint * param)
glGetVertexArrayPointeri_vEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLenum pname,void ** param)
glGetVertexArrayPointervEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void **param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum pname,void ** param)
glGetVertexAttribArrayObjectfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribArrayObjectivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint * params)
glGetVertexAttribIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint * params)
glGetVertexAttribLdv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribLdvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribLi64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint64EXT * params)
glGetVertexAttribLui64vARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT *params)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint64EXT * params)
glGetVertexAttribLui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint64EXT * params)
glGetVertexAttribPointerv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribPointerv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoi/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLvoid ** pointer)
glGetVertexAttribPointervARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint index, GLenum pname, void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribPointervNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint index, GLenum pname, void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribdv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribdvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat* pa/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribiv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint* para/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVideoCaptureStreamdvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
glGetVideoCaptureStreamfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
glGetVideoCaptureStreamivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
glGetVideoCaptureivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLenum pname,GLint * params)
glGetVideoi64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLint64EXT * params)
glGetVideoivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoivNV (GLuint video_slot, GLenum pname, GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLint * params)
glGetVideoui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLuint64EXT * params)
glGetVideouivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLuint * params)
glGetnColorTableARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufS/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
glGetnCompressedTexImageARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint lod,GLsizei bufSize,void * img)
glGetnConvolutionFilterARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
glGetnHistogramARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum ty/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
glGetnMapdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
glGetnMapfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
glGetnMapivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
glGetnMinmaxARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
glGetnPixelMapfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLfloat * values)
glGetnPixelMapuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLuint * values)
glGetnPixelMapusvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLushort * values)
glGetnPolygonStippleARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPolygonStippleARB (GLsizei bufSize, GLubyte *pattern);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei bufSize,GLubyte * pattern)
glGetnSeparableFilterARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
glGetnTexImageARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
glGetnUniformdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdoubl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
glGetnUniformfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
glGetnUniformfvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetnUniformfvEXT (GLuint program, GLint location, GLsizei bufSize,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
glGetnUniformivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLint * params)
glGetnUniformivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetnUniformivEXT (GLuint program, GLint location, GLsizei bufSize,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLint * params)
glGetnUniformuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
glGlobalAlphaFactorbSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte factor)
glGlobalAlphaFactordSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble factor)
glGlobalAlphaFactorfSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor)
glGlobalAlphaFactoriSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint factor)
glGlobalAlphaFactorsSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort factor)
glGlobalAlphaFactorubSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte factor)
glGlobalAlphaFactoruiSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint factor)
glGlobalAlphaFactorusSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort factor)
glHint	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glHint( GLenum target, GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum mode)
glHint	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glHint (GLenum target, GLenum mode);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum mode)
glHintPGI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glHintPGI (GLenum target, GLint mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint mode)
glHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glHistogram( GLenum target, GLsizei width,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glHistogram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glHistogramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboole/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glIglooInterfaceSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum pname, const void *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const void * params)
glImageTransformParameterfHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glImageTransformParameterfvHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glImageTransformParameteriHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glImageTransformParameterivHP	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glImportSyncEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitf/;"	p	typeref:typename:GLAPI GLsync APIENTRY	signature:(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
glIndexFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glIndexFuncEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum func, GLclampf ref);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLclampf ref)
glIndexMask	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexMask( GLuint mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint mask)
glIndexMaterialEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum face, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glIndexPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexPointer( GLenum type, GLsizei stride,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum type,GLsizei stride,const GLvoid * ptr)
glIndexPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glIndexPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum type, GLint stride, const void **pointer, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glIndexd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexd( GLdouble c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble c)
glIndexdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexdv( const GLdouble *c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * c)
glIndexf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexf( GLfloat c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat c)
glIndexfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexfv( const GLfloat *c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * c)
glIndexi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexi( GLint c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint c)
glIndexiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexiv( const GLint *c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * c)
glIndexs	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexs( GLshort c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort c)
glIndexsv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexsv( const GLshort *c );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * c)
glIndexub	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexub( GLubyte c );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte c)
glIndexubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexubv( const GLubyte *c );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * c)
glIndexxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexxOES (GLfixed component);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed component)
glIndexxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexxvOES (const GLfixed *component);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * component)
glInitNames	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glInitNames( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glInsertComponentEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint src,GLuint num)
glInsertEventMarkerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const GLchar * marker)
glInsertEventMarkerEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei length,const GLchar * marker)
glInstrumentsBufferSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei size, GLint *buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei size,GLint * buffer)
glInterleavedArrays	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glInterleavedArrays( GLenum format, GLsizei stride,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum format,GLsizei stride,const GLvoid * pointer)
glInterpolatePathsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
glInvalidateBufferData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glInvalidateBufferSubData	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length)
glInvalidateFramebuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments)
glInvalidateSubFramebuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
glInvalidateTexImage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level)
glInvalidateTexSubImage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint y/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
glIsAsyncMarkerSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint marker);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint marker)
glIsBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsBuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsBuffer (GLuint buffer);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint buffer)
glIsBufferARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint buffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsBufferResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glIsEnabled	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsEnabled( GLenum cap );$/;"	p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLenum cap)
glIsEnabled	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsEnabled (GLenum cap);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLenum cap)
glIsEnabledIndexedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target,GLuint index)
glIsEnabledi	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target,GLuint index)
glIsFenceAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint fence);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glIsFenceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint fence);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glIsFenceNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsFenceNV (GLuint fence);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint fence)
glIsFramebuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint framebuffer)
glIsFramebuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint framebuffer)
glIsFramebufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint framebuffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint framebuffer)
glIsImageHandleResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentARB (GLuint64 handle);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsImageHandleResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentNV (GLuint64 handle);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsList	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsList( GLuint list );$/;"	p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLuint list)
glIsNameAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNameAMD (GLenum identifier, GLuint name);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum identifier,GLuint name)
glIsNamedBufferResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsNamedStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLint namelen,const GLchar * name)
glIsObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint buffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsOcclusionQueryNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPathNV (GLuint path);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path)
glIsPointInFillPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLuint mask,GLfloat x,GLfloat y)
glIsPointInStrokePathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLfloat x,GLfloat y)
glIsProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint program)
glIsProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsProgram (GLuint program);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint program)
glIsProgramARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint program);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint program)
glIsProgramNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsProgramPipeline	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint pipeline)
glIsProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsProgramPipelineEXT (GLuint pipeline);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint pipeline)
glIsQuery	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsQueryARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsQueryEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsQueryEXT (GLuint id);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint id)
glIsRenderbuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint renderbuffer)
glIsRenderbuffer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint renderbuffer)
glIsRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint renderbuffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint renderbuffer)
glIsSampler	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint sampler)
glIsShader	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint shader)
glIsShader	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsShader (GLuint shader);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint shader)
glIsSync	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsync sync)
glIsSyncAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsSyncAPPLE (GLsync sync);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLsync sync)
glIsTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsTexture( GLuint texture );$/;"	p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLuint texture)
glIsTexture	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsTexture (GLuint texture);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint texture)
glIsTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint texture);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint texture)
glIsTextureHandleResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentARB (GLuint64 handle);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsTextureHandleResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentNV (GLuint64 handle);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedbackNV (GLuint id);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsVariantEnabledEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint id, GLenum cap);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id,GLenum cap)
glIsVertexArray	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint array)
glIsVertexArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint array);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint array)
glIsVertexArrayOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsVertexArrayOES (GLuint array);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint array)
glIsVertexAttribEnabledAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint index,GLenum pname)
glLabelObjectEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint object,GLsizei length,const GLchar * label)
glLabelObjectEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum type,GLuint object,GLsizei length,const GLchar * label)
glLightEnviSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glLightModelf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModelf( GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glLightModelfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModelfv( GLenum pname, const GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLfloat * params)
glLightModeli	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModeli( GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glLightModeliv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModeliv( GLenum pname, const GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLint * params)
glLightModelxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightModelxOES (GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glLightModelxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightModelxvOES (GLenum pname, const GLfixed *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * param)
glLightf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightf( GLenum light, GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLfloat param)
glLightfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightfv( GLenum light, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,const GLfloat * params)
glLighti	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLighti( GLenum light, GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLint param)
glLightiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightiv( GLenum light, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,const GLint * params)
glLightxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightxOES (GLenum light, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfixed param)
glLightxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightxvOES (GLenum light, GLenum pname, const GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLfixed * params)
glLineStipple	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLineStipple( GLint factor, GLushort pattern );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint factor,GLushort pattern)
glLineWidth	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLineWidth( GLfloat width );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat width)
glLineWidth	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glLineWidth (GLfloat width);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLfloat width)
glLineWidthxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLineWidthxOES (GLfixed width);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed width)
glLinkProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glLinkProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glLinkProgram (GLuint program);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glLinkProgramARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB programObj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glListBase	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glListBase( GLuint base );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint base)
glListParameterfSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLfloat param)
glListParameterfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,const GLfloat * params)
glListParameteriSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint list, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLint param)
glListParameterivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint list, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,const GLint * params)
glLoadIdentity	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadIdentity( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glLoadIdentityDeformationMapSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glLoadMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadMatrixd( const GLdouble *m );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * m)
glLoadMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadMatrixf( const GLfloat *m );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * m)
glLoadMatrixxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadMatrixxOES (const GLfixed *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glLoadName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadName( GLuint name );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint name)
glLoadProgramNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *progr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
glLoadTransposeMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadTransposeMatrixd( const GLdouble m[16] );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble m[16])
glLoadTransposeMatrixd	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glLoadTransposeMatrixdARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glLoadTransposeMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadTransposeMatrixf( const GLfloat m[16] );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat m[16])
glLoadTransposeMatrixf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glLoadTransposeMatrixfARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glLoadTransposeMatrixxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixxOES (const GLfixed *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glLockArraysEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint first, GLsizei count);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint first,GLsizei count)
glLogicOp	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glLogicOp( GLenum opcode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum opcode)
glMakeBufferNonResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glMakeBufferResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum access)
glMakeImageHandleNonResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentARB (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeImageHandleNonResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentNV (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeImageHandleResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle,GLenum access)
glMakeImageHandleResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle,GLenum access)
glMakeNamedBufferNonResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glMakeNamedBufferResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum access)
glMakeTextureHandleNonResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentARB (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleNonResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentNV (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleResidentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentARB (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleResidentNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentNV (GLuint64 handle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMap1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap1d( GLenum target, GLdouble u1, GLdouble u2,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
glMap1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap1f( GLenum target, GLfloat u1, GLfloat u2,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
glMap1xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMap1xOES (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
glMap2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap2d( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
glMap2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap2f( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
glMap2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMap2xOES (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uord/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
glMapBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBufferARB (GLenum target, GLenum access);$/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void* GL_APIENTRY glMapBufferOES (GLenum target, GLenum access);$/;"	p	typeref:typename:GL_APICALL void * GL_APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferRange	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitf/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapBufferRangeEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void* GL_APIENTRY glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr len/;"	p	typeref:typename:GL_APICALL void * GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapControlPointsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
glMapGrid1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid1d( GLint un, GLdouble u1, GLdouble u2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLdouble u1,GLdouble u2)
glMapGrid1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid1f( GLint un, GLfloat u1, GLfloat u2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLfloat u1,GLfloat u2)
glMapGrid1xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapGrid1xOES (GLint n, GLfixed u1, GLfixed u2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint n,GLfixed u1,GLfixed u2)
glMapGrid2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid2d( GLint un, GLdouble u1, GLdouble u2,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)
glMapGrid2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid2f( GLint un, GLfloat u1, GLfloat u2,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)
glMapGrid2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapGrid2xOES (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
glMapNamedBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer,GLenum access)
glMapNamedBufferRangeEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapObjectBufferATI (GLuint buffer);$/;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer)
glMapParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glMapParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum target, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glMapTexture2DINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapTexture2DINTEL (GLuint texture, GLint level, GLbitfield access, GLint /;"	p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
glMapVertexAttrib1dAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
glMapVertexAttrib1fAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
glMapVertexAttrib2dAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
glMapVertexAttrib2fAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
glMaterialf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialf( GLenum face, GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLfloat param)
glMaterialfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialfv( GLenum face, GLenum pname, const GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,const GLfloat * params)
glMateriali	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMateriali( GLenum face, GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLint param)
glMaterialiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialiv( GLenum face, GLenum pname, const GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,const GLint * params)
glMaterialxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfixed param)
glMaterialxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMaterialxvOES (GLenum face, GLenum pname, const GLfixed *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLfixed * param)
glMatrixFrustumEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bot/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
glMatrixIndexPointerARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glMatrixIndexubvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint size, const GLubyte *indices);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLubyte * indices)
glMatrixIndexuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint size, const GLuint *indices);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLuint * indices)
glMatrixIndexusvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint size, const GLushort *indices);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLushort * indices)
glMatrixLoadIdentityEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixLoadTransposedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixLoadTransposefEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixLoaddEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixLoadfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixMode	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMatrixMode( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glMatrixMultTransposedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixMultTransposefEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixMultdEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixMultfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixOrthoEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble botto/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
glMatrixPopEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixPushEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixRotatedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLd/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
glMatrixRotatefEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
glMatrixScaledEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
glMatrixScalefEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
glMatrixTranslatedEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
glMatrixTranslatefEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
glMemoryBarrier	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield barriers)
glMemoryBarrierEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield barriers)
glMinSampleShading	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinSampleShading (GLfloat value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value)
glMinSampleShadingARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value)
glMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMinmax( GLenum target, GLenum internalformat,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMinmax	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinmax (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMinmaxEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMultMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultMatrixd( const GLdouble *m );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * m)
glMultMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultMatrixf( const GLfloat *m );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * m)
glMultMatrixxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultMatrixxOES (const GLfixed *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glMultTransposeMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultTransposeMatrixd( const GLdouble m[16] );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble m[16])
glMultTransposeMatrixd	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glMultTransposeMatrixdARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glMultTransposeMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultTransposeMatrixf( const GLfloat m[16] );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat m[16])
glMultTransposeMatrixf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glMultTransposeMatrixfARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glMultTransposeMatrixxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixxOES (const GLfixed *m);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glMultiDrawArrays	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
glMultiDrawArraysEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawArraysEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawArraysIndirect	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawco/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
glMultiDrawArraysIndirectAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectAMD (GLenum mode, const void *indirect, GLsizei pri/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
glMultiDrawArraysIndirectBindlessNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void *indirect, GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
glMultiDrawArraysIndirectCountARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCountARB (GLenum mode, GLintptr indirect, GLintptr /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
glMultiDrawElementArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawElements	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
glMultiDrawElementsBaseVertex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum typ/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
glMultiDrawElementsEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
glMultiDrawElementsEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum ty/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
glMultiDrawElementsIndirect	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
glMultiDrawElementsIndirectAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const void *indire/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
glMultiDrawElementsIndirectBindlessNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
glMultiDrawElementsIndirectCountARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, GLintptr indi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
glMultiDrawRangeElementArrayAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiModeDrawArraysIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
glMultiModeDrawElementsIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
glMultiTexBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
glMultiTexCoord1bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bOES (GLenum texture, GLbyte s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s)
glMultiTexCoord1bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bvOES (GLenum texture, const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1d( GLenum target, GLdouble s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum target, GLdouble s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dARB(GLenum target, GLdouble s);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum target, GLdouble s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dv( GLenum target, const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dvARB(GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1f( GLenum target, GLfloat s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum target, GLfloat s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fARB(GLenum target, GLfloat s);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum target, GLfloat s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fv( GLenum target, const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fvARB(GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum target, GLhalfNV s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s)
glMultiTexCoord1hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1i( GLenum target, GLint s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum target, GLint s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1iARB(GLenum target, GLint s);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum target, GLint s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1iv( GLenum target, const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1ivARB(GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1s( GLenum target, GLshort s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum target, GLshort s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1sARB(GLenum target, GLshort s);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum target, GLshort s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1sv( GLenum target, const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1svARB(GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xOES (GLenum texture, GLfixed s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s)
glMultiTexCoord1xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xvOES (GLenum texture, const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord2bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bOES (GLenum texture, GLbyte s, GLbyte t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t)
glMultiTexCoord2bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bvOES (GLenum texture, const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2d( GLenum target, GLdouble s, GLdouble t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dv( GLenum target, const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dvARB(GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2f( GLenum target, GLfloat s, GLfloat t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fv( GLenum target, const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fvARB(GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t)
glMultiTexCoord2hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2i( GLenum target, GLint s, GLint t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum target, GLint s, GLint t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2iv( GLenum target, const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2ivARB(GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2s( GLenum target, GLshort s, GLshort t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2sv( GLenum target, const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2svARB(GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xOES (GLenum texture, GLfixed s, GLfixed t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t)
glMultiTexCoord2xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xvOES (GLenum texture, const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord3bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
glMultiTexCoord3bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bvOES (GLenum texture, const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3d( GLenum target, GLdouble s, GLdouble t, GLdouble r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dv( GLenum target, const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dvARB(GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3f( GLenum target, GLfloat s, GLfloat t, GLfloat r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fv( GLenum target, const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fvARB(GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
glMultiTexCoord3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3i( GLenum target, GLint s, GLint t, GLint r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3iv( GLenum target, const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3ivARB(GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3s( GLenum target, GLshort s, GLshort t, GLshort r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3sv( GLenum target, const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3svARB(GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
glMultiTexCoord3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xvOES (GLenum texture, const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord4bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
glMultiTexCoord4bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bvOES (GLenum texture, const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4d( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdo/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GL/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLd/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dv( GLenum target, const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dvARB(GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4f( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLflo/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fv( GLenum target, const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fvARB(GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLha/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
glMultiTexCoord4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4i( GLenum target, GLint s, GLint t, GLint r, GLint q );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4iv( GLenum target, const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4ivARB(GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum target, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4s( GLenum target, GLshort s, GLshort t, GLshort r, GLshort/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLsho/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshor/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4sv( GLenum target, const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4svARB(GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum target, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfix/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
glMultiTexCoord4xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xvOES (GLenum texture, const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoordP1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
glMultiTexEnvfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
glMultiTexEnvfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLflo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
glMultiTexEnviEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint param)
glMultiTexEnvivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexGendEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble para/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
glMultiTexGendvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
glMultiTexGenfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
glMultiTexGenfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
glMultiTexGeniEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLint param)
glMultiTexGenivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
glMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
glMultiTexParameterfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
glMultiTexParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
glMultiTexParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint param)
glMultiTexParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLuint renderbuffer)
glMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glNamedBufferDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void *data, GLen/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
glNamedBufferStorageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void *data, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
glNamedBufferSubDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
glNamedCopyBufferSubDataEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
glNamedFramebufferParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint param)
glNamedFramebufferRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glNamedFramebufferTexture1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glNamedFramebufferTexture2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glNamedFramebufferTexture3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glNamedFramebufferTextureEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
glNamedFramebufferTextureFaceEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
glNamedFramebufferTextureLayerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
glNamedProgramLocalParameter4dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint ind/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glNamedProgramLocalParameter4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLdouble * params)
glNamedProgramLocalParameter4fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint ind/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glNamedProgramLocalParameter4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLfloat * params)
glNamedProgramLocalParameterI4iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint in/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glNamedProgramLocalParameterI4ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint i/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLint * params)
glNamedProgramLocalParameterI4uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint i/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glNamedProgramLocalParameterI4uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLuint * params)
glNamedProgramLocalParameters4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint i/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glNamedProgramLocalParametersI4ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
glNamedProgramLocalParametersI4uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
glNamedProgramStringEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
glNamedRenderbufferStorageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
glNamedRenderbufferStorageMultisampleCoverageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
glNamedRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei sampl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glNamedStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stri/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
glNewList	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNewList( GLuint list, GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list,GLenum mode)
glNewObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei size, const void *pointer, GLenum usage);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei size,const void * pointer,GLenum usage)
glNormal3b	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3b( GLbyte nx, GLbyte ny, GLbyte nz );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte nx,GLbyte ny,GLbyte nz)
glNormal3bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3bv( const GLbyte *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glNormal3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3d( GLdouble nx, GLdouble ny, GLdouble nz );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble nx,GLdouble ny,GLdouble nz)
glNormal3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glNormal3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3f( GLfloat nx, GLfloat ny, GLfloat nz );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat nx,GLfloat ny,GLfloat nz)
glNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * n,const GLfloat * v)
glNormal3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glNormal3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
glNormal3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glNormal3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3i( GLint nx, GLint ny, GLint nz );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint nx,GLint ny,GLint nz)
glNormal3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glNormal3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3s( GLshort nx, GLshort ny, GLshort nz );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort nx,GLshort ny,GLshort nz)
glNormal3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glNormal3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed nx,GLfixed ny,GLfixed nz)
glNormal3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glNormalFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glNormalP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalP3ui (GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glNormalP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalP3uiv (GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glNormalPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormalPointer( GLenum type, GLsizei stride,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum type,GLsizei stride,const GLvoid * ptr)
glNormalPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glNormalPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum type, GLint stride, const void **pointer, GLi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glNormalPointervINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum type, const void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void ** pointer)
glNormalStream3bATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
glNormalStream3bvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum stream, const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLbyte * coords)
glNormalStream3dATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
glNormalStream3dvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glNormalStream3fATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
glNormalStream3fvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glNormalStream3iATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint nx,GLint ny,GLint nz)
glNormalStream3ivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glNormalStream3sATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
glNormalStream3svATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glObjectLabel	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
glObjectLabelKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glObjectLabelKHR (GLenum identifier, GLuint name, GLsizei length, co/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
glObjectPtrLabel	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const void * ptr,GLsizei length,const GLchar * label)
glObjectPtrLabelKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glObjectPtrLabelKHR (const void *ptr, GLsizei length, const GLchar */;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(const void * ptr,GLsizei length,const GLchar * label)
glObjectPurgeableAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum objectType,GLuint name,GLenum option)
glObjectUnpurgeableAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum objectType,GLuint name,GLenum option)
glOrtho	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glOrtho( GLdouble left, GLdouble right,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)
glOrthofOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glOrthofOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
glOrthoxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glOrthoxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
glPNTrianglesfATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPNTrianglesiATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPassTexCoordATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,GLuint coord,GLenum swizzle)
glPassThrough	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPassThrough( GLfloat token );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat token)
glPassThroughxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPassThroughxOES (GLfixed token);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed token)
glPatchParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * values)
glPatchParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint value)
glPathColorGenNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
glPathCommandsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
glPathCoordsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
glPathCoverDepthFuncNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCoverDepthFuncNV (GLenum func);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func)
glPathDashArrayNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
glPathFogGenNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathFogGenNV (GLenum genMode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum genMode)
glPathGlyphRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void *fon/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
glPathGlyphsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void *fontNam/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
glPathParameterfNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLfloat value)
glPathParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,const GLfloat * value)
glPathParameteriNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameteriNV (GLuint path, GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLint value)
glPathParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterivNV (GLuint path, GLenum pname, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,const GLint * value)
glPathStencilDepthOffsetNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor,GLfloat units)
glPathStencilFuncNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glPathStringNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStringNV (GLuint path, GLenum format, GLsizei length, const void *path/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum format,GLsizei length,const void * pathString)
glPathSubCommandsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
glPathSubCoordsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
glPathTexGenNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
glPauseTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPauseTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPauseTransformFeedbackNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPixelDataRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum target, GLsizei length, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei length,const void * pointer)
glPixelMapfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapfv( GLenum map, GLsizei mapsize,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLfloat * values)
glPixelMapuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapuiv( GLenum map, GLsizei mapsize,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLuint * values)
glPixelMapusv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapusv( GLenum map, GLsizei mapsize,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLushort * values)
glPixelMapx	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelMapx (GLenum map, GLint size, const GLfixed *values);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLint size,const GLfixed * values)
glPixelStoref	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelStoref( GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glPixelStorei	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelStorei( GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glPixelStorei	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint param)
glPixelStorex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelStorex (GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glPixelTexGenParameterfSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPixelTexGenParameterfvSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPixelTexGenParameteriSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPixelTexGenParameterivSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPixelTexGenSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glPixelTransferf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelTransferf( GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glPixelTransferi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelTransferi( GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glPixelTransferxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransferxOES (GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glPixelTransformParameterfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glPixelTransformParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glPixelTransformParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glPixelTransformParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *pa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glPixelZoom	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelZoom( GLfloat xfactor, GLfloat yfactor );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat xfactor,GLfloat yfactor)
glPixelZoomxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelZoomxOES (GLfixed xfactor, GLfixed yfactor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed xfactor,GLfixed yfactor)
glPointAlongPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegme/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
glPointParameterf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPointParameteriNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPointParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPointParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPointParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterxvOES (GLenum pname, const GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * params)
glPointSize	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPointSize( GLfloat size );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat size)
glPointSizexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointSizexOES (GLfixed size);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed size)
glPollAsyncSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *markerp);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint * markerp)
glPollInstrumentsSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *marker_p);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLint * marker_p)
glPolygonMode	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonMode( GLenum face, GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum mode)
glPolygonOffset	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonOffset( GLfloat factor, GLfloat units );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat factor,GLfloat units)
glPolygonOffset	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLfloat factor,GLfloat units)
glPolygonOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat factor, GLfloat bias);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor,GLfloat bias)
glPolygonOffsetxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPolygonOffsetxOES (GLfixed factor, GLfixed units);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed factor,GLfixed units)
glPolygonStipple	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonStipple( const GLubyte *mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * mask)
glPopAttrib	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopAttrib( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopClientAttrib	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopClientAttrib( void );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopDebugGroup	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPopDebugGroup (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPopDebugGroupKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPopDebugGroupKHR (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glPopGroupMarkerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPopGroupMarkerEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPopGroupMarkerEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPopGroupMarkerEXT (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glPopMatrix	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopMatrix( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopName( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPresentFrameDualFillNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
glPresentFrameKeyedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
glPrimitiveRestartIndex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glPrimitiveRestartIndexNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glPrimitiveRestartNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPrioritizeTextures	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPrioritizeTextures( GLsizei n,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,const GLuint * textures,const GLclampf * priorities)
glPrioritizeTexturesEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures,const GLclampf * priorities)
glPrioritizeTexturesxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesxOES (GLsizei n, const GLuint *textures, const GLfixed */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures,const GLfixed * priorities)
glProgramBinary	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
glProgramBinaryOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramBinaryOES (GLuint program, GLenum binaryFormat, const GLvoi/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLint length)
glProgramBufferParametersIivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIivNV (GLenum target, GLuint bindingIndex, GLuint w/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
glProgramBufferParametersIuivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIuivNV (GLenum target, GLuint bindingIndex, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
glProgramBufferParametersfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersfvNV (GLenum target, GLuint bindingIndex, GLuint wo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
glProgramEnvParameter4dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdoubl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramEnvParameter4dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *pa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * params)
glProgramEnvParameter4fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramEnvParameter4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * params)
glProgramEnvParameterI4iNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glProgramEnvParameterI4ivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *param/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLint * params)
glProgramEnvParameterI4uiNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glProgramEnvParameterI4uivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLuint * params)
glProgramEnvParameters4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glProgramEnvParametersI4ivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLint * params)
glProgramEnvParametersI4uivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLuint * params)
glProgramLocalParameter4dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdou/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramLocalParameter4dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * params)
glProgramLocalParameter4fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramLocalParameter4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * params)
glProgramLocalParameterI4iNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glProgramLocalParameterI4ivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *par/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLint * params)
glProgramLocalParameterI4uiNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glProgramLocalParameterI4uivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLuint * params)
glProgramLocalParameters4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glProgramLocalParametersI4ivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLint * params)
glProgramLocalParametersI4uivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLuint * params)
glProgramNamedParameter4dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramNamedParameter4dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
glProgramNamedParameter4fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramNamedParameter4fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
glProgramParameter4dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramParameter4dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * v)
glProgramParameter4fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramParameter4fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * v)
glProgramParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameters4dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
glProgramParameters4fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
glProgramStringARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void *s/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLsizei len,const void * string)
glProgramSubroutineParametersuivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei count,const GLuint * params)
glProgramUniform1d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0)
glProgramUniform1dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x)
glProgramUniform1dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform1dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform1f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0)
glProgramUniform1fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0)
glProgramUniform1fEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat x);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x)
glProgramUniform1fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0)
glProgramUniform1i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x)
glProgramUniform1i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform1iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0)
glProgramUniform1iEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint x);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x)
glProgramUniform1iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0)
glProgramUniform1ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x)
glProgramUniform1ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform1uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0)
glProgramUniform1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform1uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1)
glProgramUniform2dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y)
glProgramUniform2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform2dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform2f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1)
glProgramUniform2fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1)
glProgramUniform2fEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat x, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y)
glProgramUniform2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1)
glProgramUniform2i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
glProgramUniform2i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform2iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1)
glProgramUniform2iEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint x, GLin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y)
glProgramUniform2iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1)
glProgramUniform2ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
glProgramUniform2ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform2uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1)
glProgramUniform2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform2uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
glProgramUniform3dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
glProgramUniform3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glProgramUniform3fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glProgramUniform3fEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat x, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
glProgramUniform3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
glProgramUniform3i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glProgramUniform3i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform3iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
glProgramUniform3iEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint x, GLin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y,GLint z)
glProgramUniform3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
glProgramUniform3ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glProgramUniform3ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform3uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
glProgramUniform3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform3uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform4d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
glProgramUniform4dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramUniform4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform4f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glProgramUniform4fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glProgramUniform4fEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat x, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramUniform4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glProgramUniform4i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glProgramUniform4i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform4iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glProgramUniform4iEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint x, GLin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
glProgramUniform4iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ivEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glProgramUniform4ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glProgramUniform4ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform4uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glProgramUniform4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform4uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniformHandleui64ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 valu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64 value)
glProgramUniformHandleui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64 value)
glProgramUniformHandleui64vARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
glProgramUniformHandleui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
glProgramUniformMatrix2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x2dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x2fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4fvEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsize/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x2dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x2fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei coun/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT value)
glProgramUniformui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramVertexLimitNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramVertexLimitNV (GLenum target, GLint limit);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint limit)
glProvokingVertex	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glProvokingVertexEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glProvokingVertexEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glPushAttrib	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushAttrib( GLbitfield mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glPushClientAttrib	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushClientAttrib( GLbitfield mask );  \/* 1.1 *\/$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glPushClientAttribDefaultEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glPushDebugGroup	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *me/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLuint id,GLsizei length,const GLchar * message)
glPushDebugGroupKHR	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPushDebugGroupKHR (GLenum source, GLuint id, GLsizei length, const/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLuint id,GLsizei length,const GLchar * message)
glPushGroupMarkerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const GLchar * marker)
glPushGroupMarkerEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei length,const GLchar * marker)
glPushMatrix	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushMatrix( void );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPushName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushName( GLuint name );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint name)
glQueryCounter	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum target)
glQueryCounterEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glQueryCounterEXT (GLuint id, GLenum target);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum target)
glQueryMatrixxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLbitfield APIENTRY glQueryMatrixxOES (GLfixed *mantissa, GLint *exponent);$/;"	p	typeref:typename:GLAPI GLbitfield APIENTRY	signature:(GLfixed * mantissa,GLint * exponent)
glQueryObjectParameteruiAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glQueryObjectParameteruiAMD (GLenum target, GLuint id, GLenum pname, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,GLenum pname,GLuint param)
glRasterPos2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2d( GLdouble x, GLdouble y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y)
glRasterPos2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2f( GLfloat x, GLfloat y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y)
glRasterPos2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2i( GLint x, GLint y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y)
glRasterPos2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2s( GLshort x, GLshort y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y)
glRasterPos2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos2xOES (GLfixed x, GLfixed y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y)
glRasterPos2xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos2xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glRasterPos3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3d( GLdouble x, GLdouble y, GLdouble z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glRasterPos3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3f( GLfloat x, GLfloat y, GLfloat z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glRasterPos3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3i( GLint x, GLint y, GLint z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z)
glRasterPos3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3s( GLshort x, GLshort y, GLshort z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glRasterPos3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos3xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glRasterPos3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos3xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glRasterPos4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glRasterPos4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glRasterPos4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4i( GLint x, GLint y, GLint z, GLint w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glRasterPos4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4s( GLshort x, GLshort y, GLshort z, GLshort w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glRasterPos4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos4xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos4xOES (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
glRasterPos4xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos4xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glReadBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glReadBuffer( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glReadBufferIndexedEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadBufferIndexedEXT (GLenum src, GLint index);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum src,GLint index)
glReadBufferNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadBufferNV (GLenum mode);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glReadInstrumentsSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint marker);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint marker)
glReadPixels	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glReadPixels( GLint x, GLint y,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
glReadPixels	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
glReadnPixelsARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum fo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
glReadnPixelsEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadnPixelsEXT (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
glRectd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectd( GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)
glRectdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectdv( const GLdouble *v1, const GLdouble *v2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v1,const GLdouble * v2)
glRectf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectf( GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)
glRectfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectfv( const GLfloat *v1, const GLfloat *v2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v1,const GLfloat * v2)
glRecti	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRecti( GLint x1, GLint y1, GLint x2, GLint y2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x1,GLint y1,GLint x2,GLint y2)
glRectiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectiv( const GLint *v1, const GLint *v2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v1,const GLint * v2)
glRects	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRects( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x1,GLshort y1,GLshort x2,GLshort y2)
glRectsv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectsv( const GLshort *v1, const GLshort *v2 );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v1,const GLshort * v2)
glRectxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRectxOES (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
glRectxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRectxvOES (const GLfixed *v1, const GLfixed *v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * v1,const GLfixed * v2)
glReferencePlaneSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *equation);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * equation)
glReleaseShaderCompiler	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glReleaseShaderCompiler	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glReleaseShaderCompiler (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glRenderMode	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint GLAPIENTRY glRenderMode( GLenum mode );$/;"	p	typeref:typename:GLAPI GLint GLAPIENTRY	signature:(GLenum mode)
glRenderbufferStorage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorage	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisample	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum int/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleANGLE (GLenum target, GLsizei sample/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei sample/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageS/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleIMG	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleIMG (GLenum target, GLsizei samples,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleNV ( GLenum target, GLsizei samples,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glReplacementCodePointerSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum type, GLsizei stride, const void **point/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void ** pointer)
glReplacementCodeubSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte code)
glReplacementCodeubvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * code)
glReplacementCodeuiColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * c,const GLfloat * v)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLubyte * c,const GLfloat * v)
glReplacementCodeuiNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint code)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiTexCoord2fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
glReplacementCodeuiVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * v)
glReplacementCodeuivSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * code)
glReplacementCodeusSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort code)
glReplacementCodeusvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *code);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * code)
glRequestResidentProgramsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glResetHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glResetHistogram( GLenum target );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target)
glResetHistogram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetHistogram (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetHistogramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glResetMinmax( GLenum target );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target)
glResetMinmax	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetMinmax (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetMinmaxEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum target);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResizeBuffersMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glResolveMultisampleFramebufferAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glResolveMultisampleFramebufferAPPLE (void);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glResumeTransformFeedback	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glResumeTransformFeedbackNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glResumeTransformFeedbackNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glRotated	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRotated( GLdouble angle,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
glRotatef	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glRotatef( GLfloat angle,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
glRotatexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
glSampleCoverage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glSampleCoverage( GLclampf value, GLboolean invert );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleCoverage	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value,GLboolean invert)
glSampleCoverage	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glSampleCoverage (GLclampf value, GLboolean invert);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleCoverageARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLfloat value, GLboolean invert);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value,GLboolean invert)
glSampleCoverageOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverageOES (GLfixed value, GLboolean invert);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed value,GLboolean invert)
glSampleMapATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,GLuint interp,GLenum swizzle)
glSampleMaskEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf value, GLboolean invert);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleMaskIndexedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskIndexedNV (GLuint index, GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLbitfield mask)
glSampleMaskSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf value, GLboolean invert);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleMaski	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaski (GLuint maskNumber, GLbitfield mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint maskNumber,GLbitfield mask)
glSamplePatternEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum pattern);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pattern)
glSamplePatternSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum pattern);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pattern)
glSamplerParameterIiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLint * param)
glSamplerParameterIuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLuint * param)
glSamplerParameterf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLfloat param)
glSamplerParameterfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLfloat * param)
glSamplerParameteri	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint param)
glSamplerParameteriv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLint * param)
glScaled	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glScaled( GLdouble x, GLdouble y, GLdouble z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glScalef	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glScalef( GLfloat x, GLfloat y, GLfloat z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glScalexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glScalexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glScissor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glScissor( GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glScissor	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glScissorArrayv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLint * v)
glScissorIndexed	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
glScissorIndexedv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glSecondaryColor3b	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glSecondaryColor3bEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glSecondaryColor3bv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glSecondaryColor3bvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glSecondaryColor3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glSecondaryColor3dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glSecondaryColor3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glSecondaryColor3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glSecondaryColor3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glSecondaryColor3fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glSecondaryColor3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glSecondaryColor3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glSecondaryColor3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
glSecondaryColor3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glSecondaryColor3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint red, GLint green, GLint blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue)
glSecondaryColor3iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue)
glSecondaryColor3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glSecondaryColor3ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glSecondaryColor3s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glSecondaryColor3sEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glSecondaryColor3sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glSecondaryColor3svEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glSecondaryColor3ub	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glSecondaryColor3ubEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glSecondaryColor3ubv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * v)
glSecondaryColor3ubvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * v)
glSecondaryColor3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glSecondaryColor3uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glSecondaryColor3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * v)
glSecondaryColor3uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * v)
glSecondaryColor3us	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glSecondaryColor3usEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glSecondaryColor3usv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * v)
glSecondaryColor3usvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * v)
glSecondaryColorFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glSecondaryColorP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorP3ui (GLenum type, GLuint color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glSecondaryColorP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorP3uiv (GLenum type, const GLuint *color);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glSecondaryColorPointer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const void/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glSecondaryColorPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glSecondaryColorPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glSelectBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glSelectBuffer( GLsizei size, GLuint *buffer );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei size,GLuint * buffer)
glSelectPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint gro/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
glSelectPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GL/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * countersList)
glSeparableFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glSeparableFilter2D( GLenum target,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * row,const GLvoid * column)
glSeparableFilter2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
glSeparableFilter2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
glSetFenceAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint fence);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glSetFenceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence,GLenum condition)
glSetFenceNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence,GLenum condition)
glSetFragmentShaderConstantATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,const GLfloat * value)
glSetInvariantEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint id, GLenum type, const void *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,const void * addr)
glSetLocalConstantEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint id, GLenum type, const void *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,const void * addr)
glSetMultisamplefvAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat *val);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,const GLfloat * val)
glShadeModel	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glShadeModel( GLenum mode );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glShaderBinary	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
glShaderBinary	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glShaderBinary (GLsizei n, const GLuint* shaders, GLenum bin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * shaders,GLenum binaryformat,const GLvoid * binary,GLsizei length)
glShaderOp1EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1)
glShaderOp2EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
glShaderOp3EXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
glShaderSource	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
glShaderSource	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
glShaderSourceARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **s/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
glShaderStorageBlockBinding	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
glSharpenTexFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei n,const GLfloat * points)
glSpriteParameterfSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glSpriteParameterfvSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glSpriteParameteriSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glSpriteParameterivSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glStartInstrumentsSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glStartTilingQCOM	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glStartTilingQCOM (GLuint x, GLuint y, GLuint width, GLuint height, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask)
glStencilClearTagEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stencilTagBits,GLuint stencilClearTag)
glStencilFillPathInstancedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
glStencilFillPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum fillMode,GLuint mask)
glStencilFunc	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilFunc( GLenum func, GLint ref, GLuint mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glStencilFunc	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparate	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparate	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparateATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLui/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
glStencilMask	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilMask( GLuint mask );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint mask)
glStencilMask	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilMask (GLuint mask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint mask)
glStencilMaskSeparate	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLuint mask)
glStencilMaskSeparate	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLuint mask)
glStencilOp	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilOp( GLenum fail, GLenum zfail, GLenum zpass );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum fail,GLenum zfail,GLenum zpass)
glStencilOp	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum fail,GLenum zfail,GLenum zpass)
glStencilOpSeparate	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
glStencilOpSeparate	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLenum fail,GLenum zfail,GLenum zpass)
glStencilOpSeparateATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dpp/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
glStencilOpValueAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpValueAMD (GLenum face, GLuint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLuint value)
glStencilStrokePathInstancedNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
glStencilStrokePathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLint reference,GLuint mask)
glStopInstrumentsSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint marker);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint marker)
glStringMarkerGREMEDY	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei len, const void *string);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei len,const void * string)
glSwizzleEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
glSyncTextureINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glSyncTextureINTEL (GLuint texture);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture)
glTagSampleBufferSGIX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glTangent3bEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte tx,GLbyte ty,GLbyte tz)
glTangent3bvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glTangent3dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble tx,GLdouble ty,GLdouble tz)
glTangent3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glTangent3fEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat tx,GLfloat ty,GLfloat tz)
glTangent3fvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glTangent3iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint tx, GLint ty, GLint tz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint tx,GLint ty,GLint tz)
glTangent3ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glTangent3sEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort tx,GLshort ty,GLshort tz)
glTangent3svEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glTangentPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glTbufferMask3DFX	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint mask);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint mask)
glTessellationFactorAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTessellationFactorAMD (GLfloat factor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor)
glTessellationModeAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTessellationModeAMD (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glTestFenceAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint fence);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glTestFenceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint fence);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glTestFenceNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glTestFenceNV (GLuint fence);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint fence)
glTestObjectAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum object, GLuint name);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum object,GLuint name)
glTexBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferRange	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
glTexBumpParameterfvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum pname, const GLfloat *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * param)
glTexBumpParameterivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum pname, const GLint *param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * param)
glTexCoord1bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1bOES (GLbyte s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s)
glTexCoord1bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1d( GLdouble s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s)
glTexCoord1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1f( GLfloat s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s)
glTexCoord1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord1hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s)
glTexCoord1hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1i( GLint s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s)
glTexCoord1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord1s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1s( GLshort s );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s)
glTexCoord1sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord1xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1xOES (GLfixed s);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s)
glTexCoord1xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord2bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2bOES (GLbyte s, GLbyte t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t)
glTexCoord2bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2d( GLdouble s, GLdouble t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t)
glTexCoord2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2f( GLfloat s, GLfloat t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t)
glTexCoord2fColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
glTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glTexCoord2fColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
glTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat n/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
glTexCoord2fVertex3fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fVertex3fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * v)
glTexCoord2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord2hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV s, GLhalfNV t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t)
glTexCoord2hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2i( GLint s, GLint t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t)
glTexCoord2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2s( GLshort s, GLshort t );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t)
glTexCoord2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2xOES (GLfixed s, GLfixed t);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t)
glTexCoord2xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord3bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3bOES (GLbyte s, GLbyte t, GLbyte r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t,GLbyte r)
glTexCoord3bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3d( GLdouble s, GLdouble t, GLdouble r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t,GLdouble r)
glTexCoord3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3f( GLfloat s, GLfloat t, GLfloat r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r)
glTexCoord3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t,GLhalfNV r)
glTexCoord3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3i( GLint s, GLint t, GLint r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t,GLint r)
glTexCoord3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3s( GLshort s, GLshort t, GLshort r );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t,GLshort r)
glTexCoord3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3xOES (GLfixed s, GLfixed t, GLfixed r);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t,GLfixed r)
glTexCoord3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord4bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4bOES (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
glTexCoord4bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4d( GLdouble s, GLdouble t, GLdouble r, GLdouble q );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glTexCoord4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4f( GLfloat s, GLfloat t, GLfloat r, GLfloat q );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glTexCoord4fColor4fNormal3fVertex4fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glTexCoord4fColor4fNormal3fVertex4fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glTexCoord4fVertex4fSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glTexCoord4fVertex4fvSUN	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * v)
glTexCoord4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord4hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
glTexCoord4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4i( GLint s, GLint t, GLint r, GLint q );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t,GLint r,GLint q)
glTexCoord4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4s( GLshort s, GLshort t, GLshort r, GLshort q );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t,GLshort r,GLshort q)
glTexCoord4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord4xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4xOES (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
glTexCoord4xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoordFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glTexCoordP1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP1ui (GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP1uiv (GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP2ui (GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP2uiv (GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP3ui (GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP3uiv (GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP4ui (GLenum type, GLuint coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP4uiv (GLenum type, const GLuint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoordPointer( GLint size, GLenum type,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glTexCoordPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glTexCoordPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glTexCoordPointervINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glTexEnvf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvf( GLenum target, GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexEnvfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvfv( GLenum target, GLenum pname, const GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexEnvi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvi( GLenum target, GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexEnviv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnviv( GLenum target, GLenum pname, const GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexEnvxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glTexEnvxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glTexFilterFuncSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
glTexGend	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGend( GLenum coord, GLenum pname, GLdouble param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLdouble param)
glTexGendv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGendv( GLenum coord, GLenum pname, const GLdouble *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLdouble * params)
glTexGenf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGenf( GLenum coord, GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLfloat param)
glTexGenfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGenfv( GLenum coord, GLenum pname, const GLfloat *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLfloat * params)
glTexGeni	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGeni( GLenum coord, GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLint param)
glTexGeniv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGeniv( GLenum coord, GLenum pname, const GLint *params );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLint * params)
glTexGenxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,GLfixed param)
glTexGenxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,const GLfixed * params)
glTexImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage1D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage2D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalform/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2DMultisample	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalform/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTexImage2DMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTexImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage3D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei widt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTexImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTexImage3DMultisample	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalform/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTexImage3DMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTexImage3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexImage3DOES (GLenum target, GLint level, GLenum internalformat, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage4DSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
glTexPageCommitmentARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yof/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
glTexParameterIiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterIuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLuint * params)
glTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLuint * params)
glTexParameterf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameterf( GLenum target, GLenum pname, GLfloat param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexParameterf	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameterfv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexParameterfv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameteri( GLenum target, GLenum pname, GLint param );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexParameteri	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameteriv( GLenum target, GLenum pname,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameteriv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterxOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glTexParameterxvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glTexRenderbufferNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexRenderbufferNV (GLenum target, GLuint renderbuffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glTexStorage1D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTexStorage1DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTexStorage2D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTexStorage2DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTexStorage2DMultisample	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalfo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTexStorage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTexStorage3DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTexStorage3DMultisample	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalfo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTexStorageSparseAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
glTexSubImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage1D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glTexSubImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage2D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage2D	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage3D( GLenum target, GLint level,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage3D	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage4DSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffse/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
glTextureBarrierNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glTextureBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
glTextureBufferRangeEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalforma/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
glTextureColorMaskSGIS	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLbo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glTextureImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage2DMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTextureImage2DMultisampleNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei sample/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTextureImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage3DMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTextureImage3DMultisampleNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei sample/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTextureLightEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum pname);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname)
glTextureMaterialEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum face, GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glTextureNormalEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glTexturePageCommitmentEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
glTextureParameterIivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLint * params)
glTextureParameterIuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
glTextureParameterfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLfloat param)
glTextureParameterfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
glTextureParameteriEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint p/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint param)
glTextureParameterivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLint * params)
glTextureRangeAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureRangeAPPLE (GLenum target, GLsizei length, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei length,const void * pointer)
glTextureRenderbufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLuint renderbuffer)
glTextureStorage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTextureStorage1DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTextureStorage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTextureStorage2DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTextureStorage2DMultisampleEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei sam/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTextureStorage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTextureStorage3DEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTextureStorage3DMultisampleEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei sam/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTextureStorageSparseAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFor/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
glTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTextureView	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum int/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
glTrackMatrixNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint address,GLenum matrix,GLenum transform)
glTransformFeedbackAttribsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum buf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint count,const GLint * attribs,GLenum bufferMode)
glTransformFeedbackStreamAttribsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint *attribs, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
glTransformFeedbackVaryings	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
glTransformFeedbackVaryingsEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
glTransformFeedbackVaryingsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *l/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
glTransformPathNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
glTranslated	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTranslated( GLdouble x, GLdouble y, GLdouble z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glTranslatef	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glTranslatef( GLfloat x, GLfloat y, GLfloat z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glTranslatexOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glUniform1d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x)
glUniform1dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform1f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0)
glUniform1f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1f (GLint location, GLfloat x);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x)
glUniform1fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fARB (GLint location, GLfloat v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0)
glUniform1fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform1fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform1fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform1i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0)
glUniform1i	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1i (GLint location, GLint x);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x)
glUniform1i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x)
glUniform1i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform1iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1iARB (GLint location, GLint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0)
glUniform1iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform1iv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint* v)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform1ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0)
glUniform1ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x)
glUniform1ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform1uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uiEXT (GLint location, GLuint v0);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0)
glUniform1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform1uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y)
glUniform2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform2f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1)
glUniform2f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2f (GLint location, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y)
glUniform2fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1)
glUniform2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform2fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform2fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform2i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1)
glUniform2i	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2i (GLint location, GLint x, GLint y);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y)
glUniform2i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y)
glUniform2i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform2iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2iARB (GLint location, GLint v0, GLint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1)
glUniform2iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform2iv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint* v)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform2ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1)
glUniform2ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y)
glUniform2ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform2uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1)
glUniform2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform2uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y,GLdouble z)
glUniform3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glUniform3f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3f (GLint location, GLfloat x, GLfloat y, GLfloat z/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y,GLfloat z)
glUniform3fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glUniform3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform3fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform3fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2)
glUniform3i	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3i (GLint location, GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y,GLint z)
glUniform3i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glUniform3i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform3iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2)
glUniform3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform3iv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint* v)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform3ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2)
glUniform3ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glUniform3ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform3uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2)
glUniform3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform3uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform4d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glUniform4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform4f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glUniform4f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4f (GLint location, GLfloat x, GLfloat y, GLfloat z/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glUniform4fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glUniform4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform4fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat* /;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform4i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glUniform4i	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4i (GLint location, GLint x, GLint y, GLint z, GLin/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y,GLint z,GLint w)
glUniform4i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glUniform4i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform4iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glUniform4iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform4iv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint* v)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform4ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glUniform4ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glUniform4ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform4uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glUniform4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform4uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniformBlockBinding	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint unif/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
glUniformBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint buffer)
glUniformHandleui64ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64ARB (GLint location, GLuint64 value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64 value)
glUniformHandleui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64NV (GLint location, GLuint64 value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64 value)
glUniformHandleui64vARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 *valu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64 * value)
glUniformHandleui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64 * value)
glUniformMatrix2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2x3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2x3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2x4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2x4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3x2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3x2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3x4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3x4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4x2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4x2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4x3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4x3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformSubroutinesuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *ind/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLsizei count,const GLuint * indices)
glUniformui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT value)
glUniformui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUnlockArraysEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glUnmapBuffer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glUnmapBufferARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum target);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glUnmapBufferOES	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glUnmapBufferOES (GLenum target);$/;"	p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLenum target)
glUnmapNamedBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glUnmapObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint buffer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glUnmapTexture2DINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnmapTexture2DINTEL (GLuint texture, GLint level);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level)
glUpdateObjectBufferATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const v/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
glUseProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glUseProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUseProgram (GLuint program);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glUseProgramObjectARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB programObj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glUseProgramStages	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLbitfield stages,GLuint program)
glUseProgramStagesEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint pr/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLbitfield stages,GLuint program)
glUseShaderProgramEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint program)
glVDPAUFiniNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUFiniNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glVDPAUGetSurfaceivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glVDPAUInitNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUInitNV (const void *vdpDevice, const void *getProcAddress);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const void * vdpDevice,const void * getProcAddress)
glVDPAUIsSurfaceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLvdpauSurfaceNV surface)
glVDPAUMapSurfacesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
glVDPAURegisterOutputSurfaceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (const void *vdpSurface, GLenum t/;"	p	typeref:typename:GLAPI GLvdpauSurfaceNV APIENTRY	signature:(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
glVDPAURegisterVideoSurfaceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (const void *vdpSurface, GLenum ta/;"	p	typeref:typename:GLAPI GLvdpauSurfaceNV APIENTRY	signature:(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
glVDPAUSurfaceAccessNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface,GLenum access)
glVDPAUUnmapSurfacesNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
glVDPAUUnregisterSurfaceNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface)
glValidateProgram	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glValidateProgram	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glValidateProgram (GLuint program);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glValidateProgramARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB programObj);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glValidateProgramPipeline	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline)
glValidateProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glValidateProgramPipelineEXT (GLuint pipeline);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline)
glVariantArrayObjectATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buff/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
glVariantPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const void *addr/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,GLuint stride,const void * addr)
glVariantbvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint id, const GLbyte *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLbyte * addr)
glVariantdvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint id, const GLdouble *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLdouble * addr)
glVariantfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint id, const GLfloat *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLfloat * addr)
glVariantivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint id, const GLint *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLint * addr)
glVariantsvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint id, const GLshort *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLshort * addr)
glVariantubvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint id, const GLubyte *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLubyte * addr)
glVariantuivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint id, const GLuint *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLuint * addr)
glVariantusvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint id, const GLushort *addr);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLushort * addr)
glVertex2bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2bOES (GLbyte x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x)
glVertex2bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2d( GLdouble x, GLdouble y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y)
glVertex2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2f( GLfloat x, GLfloat y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y)
glVertex2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex2hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y)
glVertex2hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2i( GLint x, GLint y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y)
glVertex2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2s( GLshort x, GLshort y );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y)
glVertex2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex2xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2xOES (GLfixed x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x)
glVertex2xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertex3bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3bOES (GLbyte x, GLbyte y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x,GLbyte y)
glVertex3bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3d( GLdouble x, GLdouble y, GLdouble z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glVertex3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3f( GLfloat x, GLfloat y, GLfloat z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glVertex3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y,GLhalfNV z)
glVertex3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3i( GLint x, GLint y, GLint z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z)
glVertex3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3s( GLshort x, GLshort y, GLshort z );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glVertex3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex3xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3xOES (GLfixed x, GLfixed y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y)
glVertex3xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertex4bOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4bOES (GLbyte x, GLbyte y, GLbyte z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x,GLbyte y,GLbyte z)
glVertex4bvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4bvOES (const GLbyte *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertex4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4dv( const GLdouble *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertex4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4fv( const GLfloat *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex4hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
glVertex4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4i( GLint x, GLint y, GLint z, GLint w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glVertex4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4iv( const GLint *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4s( GLshort x, GLshort y, GLshort z, GLshort w );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glVertex4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4sv( const GLshort *v );$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex4xOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glVertex4xvOES	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4xvOES (const GLfixed *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertexArrayBindVertexBufferEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
glVertexArrayColorOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayEdgeFlagOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
glVertexArrayFogCoordOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayIndexOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayMultiTexCoordOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum tex/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayNormalOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayParameteriAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glVertexArrayRangeAPPLE	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,void * pointer)
glVertexArrayRangeNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei length, const void *pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const void * pointer)
glVertexArraySecondaryColorOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint siz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayTexCoordOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribBindingEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
glVertexArrayVertexAttribDivisorEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLuint divisor)
glVertexArrayVertexAttribFormatEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
glVertexArrayVertexAttribIFormatEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexArrayVertexAttribIOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint ind/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribLFormatEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexArrayVertexAttribLOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint ind/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint inde/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
glVertexArrayVertexBindingDivisorEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint bindingindex,GLuint divisor)
glVertexArrayVertexOffsetEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexAttrib1d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint index, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint index, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1f (GLuint indx, GLfloat x);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x)
glVertexAttrib1fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint index, GLfloat x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint index, GLfloat x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1fv (GLuint indx, const GLfloat* values);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib1fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x)
glVertexAttrib1hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib1s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint index, GLshort x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint index, GLshort x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib1svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib1svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2f (GLuint indx, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y)
glVertexAttrib2fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2fv (GLuint indx, const GLfloat* values);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib2fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y)
glVertexAttrib2hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint index, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib2s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3f (GLuint indx, GLfloat x, GLfloat y, GLfloat/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3fv (GLuint indx, const GLfloat* values);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib3fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
glVertexAttrib3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint index, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib3s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4Nbv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4NbvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4Niv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4NivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4Nsv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4NsvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4Nub	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4NubARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyt/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4Nubv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4NubvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4Nuiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4NuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4Nusv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4NusvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4bv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4bvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdou/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4f	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4f (GLuint indx, GLfloat x, GLfloat y, GLfloat/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4fv	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4fv (GLuint indx, const GLfloat* values);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib4fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4hNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
glVertexAttrib4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint index, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib4iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4ubNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4ubv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4ubvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4ubvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4uivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4usv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4usvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribArrayObjectATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboole/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
glVertexAttribBinding	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLuint bindingindex)
glVertexAttribDivisor	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorANGLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glVertexAttribDivisorANGLE (GLuint index, GLuint divisor);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorNV	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glVertexAttribDivisorNV (GLuint index, GLuint divisor);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribFormat	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
glVertexAttribFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean nor/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
glVertexAttribI1i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x)
glVertexAttribI1iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x)
glVertexAttribI1iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI1ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x)
glVertexAttribI1uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x)
glVertexAttribI1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI1uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI2i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y)
glVertexAttribI2iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y)
glVertexAttribI2iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI2ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y)
glVertexAttribI2uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y)
glVertexAttribI2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI2uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z)
glVertexAttribI3iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z)
glVertexAttribI3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI3ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z)
glVertexAttribI3uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z)
glVertexAttribI3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI3uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4bv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttribI4bvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttribI4i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z,GLint w)
glVertexAttribI4iEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z,GLint w)
glVertexAttribI4iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI4ivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI4sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttribI4svEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttribI4ubv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttribI4ubvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttribI4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glVertexAttribI4uiEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glVertexAttribI4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4uivEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4usv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribI4usvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribIFormat	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint r/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexAttribIFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stri/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride)
glVertexAttribIPointer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei strid/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribIPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei st/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribL1d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttribL1dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dEXT (GLuint index, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttribL1dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL1dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dvEXT (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL1i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x)
glVertexAttribL1i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL1ui64ARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x)
glVertexAttribL1ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x)
glVertexAttribL1ui64vARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL1ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttribL2dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttribL2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL2dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dvEXT (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL2i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y)
glVertexAttribL2i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL2ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y)
glVertexAttribL2ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttribL3dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttribL3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL3dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dvEXT (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL3i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glVertexAttribL3i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL3ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glVertexAttribL3ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL4d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdoubl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttribL4dEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttribL4dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL4dvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dvEXT (GLuint index, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL4i64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glVertexAttribL4i64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL4ui64NV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glVertexAttribL4ui64vNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribLFormat	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint r/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexAttribLFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stri/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride)
glVertexAttribLPointer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei strid/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribLPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei st/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribP1ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP1uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribParameteriAMD	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribParameteriAMD (GLuint index, GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint param)
glVertexAttribPointer	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean norm/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
glVertexAttribPointer	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttribPointer (GLuint indx, GLint size, GLenum type,/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * ptr)
glVertexAttribPointerARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean n/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
glVertexAttribPointerNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei str/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribs1dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs1fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs1hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs1svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs2dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs2fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs2hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs2svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs3dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs3fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs3hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs3svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs4dvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs4fvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs4hvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs4svNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs4ubvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLubyte * v)
glVertexBindingDivisor	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint bindingindex,GLuint divisor)
glVertexBlendARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint count);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint count)
glVertexBlendEnvfATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum pname, GLfloat param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glVertexBlendEnviATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum pname, GLint param);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glVertexFormatNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glVertexP2ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP2ui (GLenum type, GLuint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP2uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP2uiv (GLenum type, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexP3ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP3ui (GLenum type, GLuint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP3uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP3uiv (GLenum type, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexP4ui	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP4ui (GLenum type, GLuint value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP4uiv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP4uiv (GLenum type, const GLuint *value);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertexPointer( GLint size, GLenum type,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glVertexPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glVertexPointerListIBM	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const void **/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glVertexPointervINTEL	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glVertexStream1dATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum stream, GLdouble x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x)
glVertexStream1dvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum stream, const GLdouble *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream1fATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum stream, GLfloat x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x)
glVertexStream1fvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum stream, const GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream1iATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum stream, GLint x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x)
glVertexStream1ivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum stream, const GLint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream1sATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum stream, GLshort x);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x)
glVertexStream1svATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum stream, const GLshort *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream2dATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y)
glVertexStream2dvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum stream, const GLdouble *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream2fATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y)
glVertexStream2fvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum stream, const GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream2iATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum stream, GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y)
glVertexStream2ivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum stream, const GLint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream2sATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y)
glVertexStream2svATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum stream, const GLshort *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream3dATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
glVertexStream3dvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream3fATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
glVertexStream3fvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream3iATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y,GLint z)
glVertexStream3ivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream3sATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y,GLshort z)
glVertexStream3svATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream4dATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexStream4dvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum stream, const GLdouble *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream4fATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexStream4fvATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum stream, const GLfloat *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream4iATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y,GLint z,GLint w)
glVertexStream4ivATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum stream, const GLint *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream4sATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexStream4svATI	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum stream, const GLshort *coords);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexWeightPointerEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const voi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexWeightfEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat weight);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat weight)
glVertexWeightfvEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *weight);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * weight)
glVertexWeighthNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV weight)
glVertexWeighthvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * weight)
glVideoCaptureNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glVideoCaptureNV (GLuint video_capture_slot, GLuint *sequence_num, GLuint6/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
glVideoCaptureStreamParameterdvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
glVideoCaptureStreamParameterfvNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
glVideoCaptureStreamParameterivNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
glViewport	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void GLAPIENTRY glViewport( GLint x, GLint y,$/;"	p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glViewport	/usr/include/SDL2/SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height)/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glViewportArrayv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLfloat * v)
glViewportIndexedf	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
glViewportIndexedfv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glWaitSync	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glWaitSyncAPPLE	/usr/include/SDL2/SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glWeightPathsNV	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
glWeightPointerARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const void *poi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glWeightbvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightbvARB (GLint size, const GLbyte *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLbyte * weights)
glWeightdvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightdvARB (GLint size, const GLdouble *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLdouble * weights)
glWeightfvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightfvARB (GLint size, const GLfloat *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLfloat * weights)
glWeightivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightivARB (GLint size, const GLint *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLint * weights)
glWeightsvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightsvARB (GLint size, const GLshort *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLshort * weights)
glWeightubvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightubvARB (GLint size, const GLubyte *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLubyte * weights)
glWeightuivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightuivARB (GLint size, const GLuint *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLuint * weights)
glWeightusvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightusvARB (GLint size, const GLushort *weights);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLushort * weights)
glWindowPos2d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble x, GLdouble y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2dvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat x, GLfloat y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2fvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2i (GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint x, GLint y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2ivMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort x, GLshort y);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos2svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos2svMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3d	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3dvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3dvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3f	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3fvARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3fvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3i	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3i (GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint x, GLint y, GLint z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3ivARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3ivMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3s	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sv	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3svARB	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3svMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos4dMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glWindowPos4dvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos4fMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glWindowPos4fvMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos4iMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glWindowPos4ivMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos4sMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glWindowPos4svMESA	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *v);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWriteMaskEXT	/usr/include/SDL2/SDL_opengl_glext.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
gl_accelerated	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accelerated;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_accum_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_accum_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_accum_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_green_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_accum_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_red_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_alpha_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_blue_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_buffer_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_buffer_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_debug	/usr/include/SDL2/SDL_test_common.h	/^    int gl_debug;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_depth_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_depth_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_double_buffer	/usr/include/SDL2/SDL_test_common.h	/^    int gl_double_buffer;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_green_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_major_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_major_version;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_minor_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_minor_version;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_multisamplebuffers	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_multisamplesamples	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_profile_mask	/usr/include/SDL2/SDL_test_common.h	/^    int gl_profile_mask;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_red_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_retained_backing	/usr/include/SDL2/SDL_test_common.h	/^    int gl_retained_backing;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_stencil_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stencil_size;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
gl_stereo	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stereo;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
h	/usr/include/SDL2/SDL_rect.h	/^    float h;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
h	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
h	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
h	/usr/include/SDL2/SDL_video.h	/^    int h;                      \/**< height, in screen coordinates *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
hat	/usr/include/SDL2/SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
hat	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat;$/;"	m	struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	typeref:typename:int	access:public
hat	/usr/include/SDL2/SDL_gamecontroller.h	/^        } hat;$/;"	m	union:SDL_GameControllerButtonBind::__anonec6745aa030a	typeref:struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	access:public
hat_mask	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat_mask;$/;"	m	struct:SDL_GameControllerButtonBind::__anonec6745aa030a::__anonec6745aa0408	typeref:typename:int	access:public
hdc	/usr/include/SDL2/SDL_syswm.h	/^            HDC hdc;                    \/**< The window device context *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HDC	access:public
height	/usr/include/SDL2/SDL_test_images.h	/^  int height;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
here	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *here;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
hidden	/usr/include/SDL2/SDL_rwops.h	/^    } hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anonfff75667010a	access:public
hinstance	/usr/include/SDL2/SDL_syswm.h	/^            HINSTANCE hinstance;        \/**< The instance handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HINSTANCE	access:public
hlineColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int hlineColor(SDL_Renderer * renderer, Sint16 x1, Sint16 x2, Sint16 y/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 x2,Sint16 y,Uint32 color)
hlineRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int hlineRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 x2, Sint16 y,/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 x2,Sint16 y,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
host	/usr/include/SDL2/SDL_net.h	/^    Uint32 host;            \/* 32-bit IPv4 host address *\/$/;"	m	struct:__anonf2bfe3b30108	typeref:typename:Uint32	access:public
hwnd	/usr/include/SDL2/SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:HWND	access:public
i	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anond20919310108	typeref:typename:MD5UINT4[2]	access:public
iHeight	/usr/include/SDL2/SDL_egl.h	/^    EGLint iHeight;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
iStride	/usr/include/SDL2/SDL_egl.h	/^    EGLint iStride;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
iWidth	/usr/include/SDL2/SDL_egl.h	/^    EGLint iWidth;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
id	/usr/include/SDL2/SDL_touch.h	/^    SDL_FingerID id;$/;"	m	struct:SDL_Finger	typeref:typename:SDL_FingerID	access:public
in	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	m	struct:__anond20919310108	typeref:typename:unsigned char[64]	access:public
info	/usr/include/SDL2/SDL_syswm.h	/^    } info;$/;"	m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon51e8038f090a	access:public
inputStreamRef	/usr/include/SDL2/SDL_rwops.h	/^            void *inputStreamRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
int16_t	/usr/include/SDL2/SDL_config.h	/^typedef signed __int16 int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	/usr/include/SDL2/SDL_config.h	/^typedef signed short int16_t;$/;"	t	typeref:typename:signed short
int16_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef signed short int16_t;$/;"	t	typeref:typename:signed short
int16_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed __int16 int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed short int16_t;$/;"	t	typeref:typename:signed short
int16_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed __int16 int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed short int16_t;$/;"	t	typeref:typename:signed short
int32_t	/usr/include/SDL2/SDL_config.h	/^typedef signed __int32 int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	/usr/include/SDL2/SDL_config.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int32_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int32_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed __int32 int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int32_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed __int32 int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int32_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	/usr/include/SDL2/SDL_config.h	/^typedef signed __int64 int64_t;$/;"	t	typeref:typename:signed __int64
int64_t	/usr/include/SDL2/SDL_config.h	/^typedef signed long long int64_t;$/;"	t	typeref:typename:signed long long
int64_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef signed long long int64_t;$/;"	t	typeref:typename:signed long long
int64_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed __int64 int64_t;$/;"	t	typeref:typename:signed __int64
int64_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed long long int64_t;$/;"	t	typeref:typename:signed long long
int64_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed __int64 int64_t;$/;"	t	typeref:typename:signed __int64
int64_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed long long int64_t;$/;"	t	typeref:typename:signed long long
int64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
int8_t	/usr/include/SDL2/SDL_config.h	/^typedef signed __int8 int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	/usr/include/SDL2/SDL_config.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
int8_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
int8_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed __int8 int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
int8_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed __int8 int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
iscapture	/usr/include/SDL2/SDL_events.h	/^    Uint8 iscapture;    \/**< zero if an output device, non-zero if a capture device. *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
jaxis	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
jball	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
jbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
jdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyDeviceEvent	access:public
jhat	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
key	/usr/include/SDL2/SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
keysym	/usr/include/SDL2/SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:SDL_Keysym	access:public
khronos_boolean_enum_t	/usr/include/SDL2/SDL_egl.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anonf21dfde40103
khronos_boolean_enum_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anond2fc05840103
khronos_float_t	/usr/include/SDL2/SDL_egl.h	/^typedef          float         khronos_float_t;$/;"	t	typeref:typename:float
khronos_float_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t	typeref:typename:float
khronos_int16_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   short int     khronos_int16_t;$/;"	t	typeref:typename:signed short int
khronos_int16_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t	typeref:typename:signed short int
khronos_int32_t	/usr/include/SDL2/SDL_egl.h	/^typedef __int32                 khronos_int32_t;$/;"	t	typeref:typename:__int32
khronos_int32_t	/usr/include/SDL2/SDL_egl.h	/^typedef int                     khronos_int32_t;$/;"	t	typeref:typename:int
khronos_int32_t	/usr/include/SDL2/SDL_egl.h	/^typedef int32_t                 khronos_int32_t;$/;"	t	typeref:typename:int32_t
khronos_int32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t	typeref:typename:__int32
khronos_int32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t	typeref:typename:int
khronos_int32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t	typeref:typename:int32_t
khronos_int64_t	/usr/include/SDL2/SDL_egl.h	/^typedef __int64                 khronos_int64_t;$/;"	t	typeref:typename:__int64
khronos_int64_t	/usr/include/SDL2/SDL_egl.h	/^typedef int64_t                 khronos_int64_t;$/;"	t	typeref:typename:int64_t
khronos_int64_t	/usr/include/SDL2/SDL_egl.h	/^typedef long int                khronos_int64_t;$/;"	t	typeref:typename:long int
khronos_int64_t	/usr/include/SDL2/SDL_egl.h	/^typedef long long int           khronos_int64_t;$/;"	t	typeref:typename:long long int
khronos_int64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t	typeref:typename:__int64
khronos_int64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t	typeref:typename:int64_t
khronos_int64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t	typeref:typename:long int
khronos_int64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t	typeref:typename:long long int
khronos_int8_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   char          khronos_int8_t;$/;"	t	typeref:typename:signed char
khronos_int8_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t	typeref:typename:signed char
khronos_intptr_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t	typeref:typename:signed long int
khronos_intptr_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t	typeref:typename:signed long long int
khronos_intptr_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t	typeref:typename:signed long int
khronos_intptr_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t	typeref:typename:signed long long int
khronos_ssize_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t	typeref:typename:signed long int
khronos_ssize_t	/usr/include/SDL2/SDL_egl.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t	typeref:typename:signed long long int
khronos_ssize_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t	typeref:typename:signed long int
khronos_ssize_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t	typeref:typename:signed long long int
khronos_stime_nanoseconds_t	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t	typeref:typename:khronos_int64_t
khronos_stime_nanoseconds_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t	typeref:typename:khronos_int64_t
khronos_uint16_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t	typeref:typename:unsigned short int
khronos_uint16_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t	typeref:typename:unsigned short int
khronos_uint32_t	/usr/include/SDL2/SDL_egl.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t	typeref:typename:uint32_t
khronos_uint32_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t	typeref:typename:unsigned __int32
khronos_uint32_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t	typeref:typename:unsigned int
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t	typeref:typename:uint32_t
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t	typeref:typename:unsigned __int32
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t	typeref:typename:unsigned int
khronos_uint64_t	/usr/include/SDL2/SDL_egl.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t	typeref:typename:uint64_t
khronos_uint64_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t	typeref:typename:unsigned __int64
khronos_uint64_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t	typeref:typename:unsigned long int
khronos_uint64_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t	typeref:typename:unsigned long long int
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t	typeref:typename:uint64_t
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t	typeref:typename:unsigned __int64
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t	typeref:typename:unsigned long int
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t	typeref:typename:unsigned long long int
khronos_uint8_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t	typeref:typename:unsigned char
khronos_uint8_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t	typeref:typename:unsigned char
khronos_uintptr_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long int
khronos_uintptr_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long long int
khronos_uintptr_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long int
khronos_uintptr_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long long int
khronos_usize_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t	typeref:typename:unsigned long int
khronos_usize_t	/usr/include/SDL2/SDL_egl.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t	typeref:typename:unsigned long long int
khronos_usize_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t	typeref:typename:unsigned long int
khronos_usize_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t	typeref:typename:unsigned long long int
khronos_utime_nanoseconds_t	/usr/include/SDL2/SDL_egl.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t	typeref:typename:khronos_uint64_t
khronos_utime_nanoseconds_t	/usr/include/SDL2/SDL_opengles2_khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t	typeref:typename:khronos_uint64_t
lParam	/usr/include/SDL2/SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:LPARAM	access:public
large_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
lastticks	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 lastticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
left_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
left_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side; max 0xFFFF. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
leftright	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticLeftRight	access:public
len	/usr/include/SDL2/SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len	/usr/include/SDL2/SDL_net.h	/^    int len;            \/* The length of the packet data *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
len_cvt	/usr/include/SDL2/SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_mult	/usr/include/SDL2/SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_ratio	/usr/include/SDL2/SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
length	/usr/include/SDL2/SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect in milliseconds. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint32	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint32	access:public
level	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Sint16	access:public
lineColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int lineColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 x2/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint32 color)
lineRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int lineRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
linenum	/usr/include/SDL2/SDL_assert.h	/^    int linenum;$/;"	m	struct:SDL_AssertData	typeref:typename:int	access:public
lock_data	/usr/include/SDL2/SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
locked	/usr/include/SDL2/SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
logical_h	/usr/include/SDL2/SDL_test_common.h	/^    int logical_h;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
logical_w	/usr/include/SDL2/SDL_test_common.h	/^    int logical_w;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value; if negative, equivalent to 180 degrees extra phase shi/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
main	/usr/include/SDL2/SDL_main.h	/^#define main /;"	d
major	/usr/include/SDL2/SDL_net.h	/^    Uint8 major;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
major	/usr/include/SDL2/SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
map	/usr/include/SDL2/SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
max_texture_height	/usr/include/SDL2/SDL_render.h	/^    int max_texture_height;     \/**< The maximum texture height *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:int	access:public
max_texture_width	/usr/include/SDL2/SDL_render.h	/^    int max_texture_width;      \/**< The maximum texture width *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:int	access:public
maxlen	/usr/include/SDL2/SDL_net.h	/^    int maxlen;         \/* The size of the data buffer *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
mem	/usr/include/SDL2/SDL_rwops.h	/^        } mem;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	access:public
message	/usr/include/SDL2/SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const char *	access:public
mgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MultiGestureEvent	access:public
minor	/usr/include/SDL2/SDL_net.h	/^    Uint8 minor;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
minor	/usr/include/SDL2/SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
mir	/usr/include/SDL2/SDL_syswm.h	/^        } mir;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	access:public
mod	/usr/include/SDL2/SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	m	struct:SDL_Keysym	typeref:typename:Uint16	access:public
mode	/usr/include/SDL2/SDL_shape.h	/^    WindowShapeMode mode;$/;"	m	struct:SDL_WindowShapeMode	typeref:typename:WindowShapeMode	access:public
motion	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
msg	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
msg	/usr/include/SDL2/SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:UINT	access:public
msg	/usr/include/SDL2/SDL_syswm.h	/^    } msg;$/;"	m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon51e8038f020a	access:public
name	/usr/include/SDL2/SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:const char *	access:public
name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:char *	access:public
ncolors	/usr/include/SDL2/SDL_pixels.h	/^    int ncolors;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
needed	/usr/include/SDL2/SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
next	/usr/include/SDL2/SDL_assert.h	/^    const struct SDL_AssertData *next;$/;"	m	struct:SDL_AssertData	typeref:typename:const struct SDL_AssertData *	access:public
next	/usr/include/SDL2/SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat *	access:public
numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint16 numFingers;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint32 numFingers;$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
num_texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
num_windows	/usr/include/SDL2/SDL_test_common.h	/^    int num_windows;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
numbuttons	/usr/include/SDL2/SDL_messagebox.h	/^    int numbuttons;$/;"	m	struct:__anonbdddce5a0708	typeref:typename:int	access:public
offset	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
offset	/usr/include/SDL2/SDL_rwops.h	/^            long offset;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
pData	/usr/include/SDL2/SDL_egl.h	/^    void  *pData;$/;"	m	struct:EGLClientPixmapHI	typeref:typename:void *	access:public
padding	/usr/include/SDL2/SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
padding	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
padding	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding[56];$/;"	m	union:SDL_Event	typeref:typename:Uint8[56]	access:public
padding	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 padding[2];$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8[2]	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint16	access:public
padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint16	access:public
palette	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
parameters	/usr/include/SDL2/SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	m	struct:SDL_WindowShapeMode	typeref:typename:SDL_WindowShapeParams	access:public
patch	/usr/include/SDL2/SDL_net.h	/^    Uint8 patch;$/;"	m	struct:SDLNet_version	typeref:typename:Uint8	access:public
patch	/usr/include/SDL2/SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
periodic	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticPeriodic	access:public
pfnSDL_CurrentBeginThread	/usr/include/SDL2/SDL_thread.h	/^typedef int (*pfnSDL_CurrentBeginThread)(void (*func)(void *), void *, unsigned, void * \/*arg*\//;"	t	typeref:typename:int (*)(void (* func)(void *),void *,unsigned,void *)
pfnSDL_CurrentBeginThread	/usr/include/SDL2/SDL_thread.h	/^typedef uintptr_t (__cdecl * pfnSDL_CurrentBeginThread)$/;"	t	typeref:typename:uintptr_t (__cdecl *)(void *,unsigned,unsigned (__stdcall * func)(void *),void *,unsigned,unsigned *)
pfnSDL_CurrentEndThread	/usr/include/SDL2/SDL_thread.h	/^typedef void (*pfnSDL_CurrentEndThread)(void);$/;"	t	typeref:typename:void (*)(void)
pfnSDL_CurrentEndThread	/usr/include/SDL2/SDL_thread.h	/^typedef void (__cdecl * pfnSDL_CurrentEndThread) (unsigned code);$/;"	t	typeref:typename:void (__cdecl *)(unsigned code)
phase	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 phase;       \/**< Positive phase shift given by hundredth of a degree. *\/$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
pieColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int pieColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 rad,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint32 color)
pieRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int pieRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, Sint16 rad,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Sint16 rad,Sint16 start,Sint16 end,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
pitch	/usr/include/SDL2/SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
pixelColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int pixelColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, Uint32 col/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Uint32 color)
pixelRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int pixelRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, Uint8 r, Ui/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
pixel_data	/usr/include/SDL2/SDL_test_images.h	/^  const char *pixel_data;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:const char *	access:public
pixels	/usr/include/SDL2/SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
polygonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int polygonColor(SDL_Renderer * renderer, const Sint16 * vx, const Sin/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint32 color)
polygonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int polygonRGBA(SDL_Renderer * renderer, const Sint16 * vx, const Sint/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
port	/usr/include/SDL2/SDL_net.h	/^    Uint16 port;            \/* 16-bit protocol port *\/$/;"	m	struct:__anonf2bfe3b30108	typeref:typename:Uint16	access:public
position	/usr/include/SDL2/SDL_rwops.h	/^            long position;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
pressure	/usr/include/SDL2/SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
pressure	/usr/include/SDL2/SDL_touch.h	/^    float pressure;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
quit	/usr/include/SDL2/SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
r	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anonbdddce5a0408	typeref:typename:Uint8	access:public
r	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 r;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
ramp	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:SDL_HapticRamp	access:public
rate	/usr/include/SDL2/SDL2_framerate.h	/^		Uint32 rate;$/;"	m	struct:__anon04d11f350108	typeref:typename:Uint32	access:public
rate_incr	/usr/include/SDL2/SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
rateticks	/usr/include/SDL2/SDL2_framerate.h	/^		float rateticks;$/;"	m	struct:__anon04d11f350108	typeref:typename:float	access:public
readMethod	/usr/include/SDL2/SDL_rwops.h	/^            void *readMethod;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
readableByteChannelRef	/usr/include/SDL2/SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:void *	access:public
ready	/usr/include/SDL2/SDL_net.h	/^    int ready;$/;"	m	struct:_SDLNet_GenericSocket	typeref:typename:int	access:public
rectangleColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int rectangleColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint32 color)
rectangleRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int rectangleRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1,$/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_PixelFormat	typeref:typename:int	access:public
refcount	/usr/include/SDL2/SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
refresh_rate	/usr/include/SDL2/SDL_test_common.h	/^    int refresh_rate;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
refresh_rate	/usr/include/SDL2/SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
render_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 render_flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
renderdriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *renderdriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
renderers	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Renderer **	access:public
repeat	/usr/include/SDL2/SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
resolveFramebuffer	/usr/include/SDL2/SDL_syswm.h	/^            GLuint resolveFramebuffer; \/**< The Framebuffer Object which holds the resolve colo/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:GLuint	access:public
right_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
right_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side; max 0xFFFF. *\/$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
rotateSurface90Degrees	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE SDL_Surface* rotateSurface90Degrees(SDL_Surface* src, int numClockwiseTurns/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE SDL_Surface *	signature:(SDL_Surface * src,int numClockwiseTurns)
rotozoomSurface	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE SDL_Surface *rotozoomSurface(SDL_Surface * src, double angle, double zoom, /;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE SDL_Surface *	signature:(SDL_Surface * src,double angle,double zoom,int smooth)
rotozoomSurfaceSize	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE void rotozoomSurfaceSize(int width, int height, double angle, double zoom, /;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE void	signature:(int width,int height,double angle,double zoom,int * dstwidth,int * dstheight)
rotozoomSurfaceSizeXY	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE void rotozoomSurfaceSizeXY$/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE void	signature:(int width,int height,double angle,double zoomx,double zoomy,int * dstwidth,int * dstheight)
rotozoomSurfaceXY	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE SDL_Surface *rotozoomSurfaceXY$/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE SDL_Surface *	signature:(SDL_Surface * src,double angle,double zoomx,double zoomy,int smooth)
roundedBoxColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int roundedBoxColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sin/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 rad,Uint32 color)
roundedBoxRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int roundedBoxRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 rad,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
roundedRectangleColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int roundedRectangleColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 rad,Uint32 color)
roundedRectangleRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int roundedRectangleRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 rad,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
s	/usr/include/SDL2/SDL_endian.h	/^        } s;$/;"	m	union:SDL_Swap64::__anon308df0fb010a	typeref:struct:SDL_Swap64::__anon308df0fb010a::__anon308df0fb0208	access:public
samples	/usr/include/SDL2/SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in sample FRAMES (total samples divided /;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
samples	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
scale	/usr/include/SDL2/SDL_test_common.h	/^    float scale;$/;"	m	struct:__anon2a823ef40108	typeref:typename:float	access:public
scancode	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	m	struct:SDL_Keysym	typeref:typename:SDL_Scancode	access:public
sensor	/usr/include/SDL2/SDL_events.h	/^    SDL_SensorEvent sensor;         \/**< Sensor event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_SensorEvent	access:public
shell_surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager /;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_shell_surface *	access:public
shrinkSurface	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE SDL_Surface *shrinkSurface(SDL_Surface * src, int factorx, int factory);$/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE SDL_Surface *	signature:(SDL_Surface * src,int factorx,int factory)
silence	/usr/include/SDL2/SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
size	/usr/include/SDL2/SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
size	/usr/include/SDL2/SDL_rwops.h	/^            long size;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670208	typeref:typename:long	access:public
size_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned int size_t;$/;"	t	typeref:typename:unsigned int
size_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned int size_t;$/;"	t	typeref:typename:unsigned int
size_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned int size_t;$/;"	t	typeref:typename:unsigned int
size_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned int size_t;$/;"	t	typeref:typename:unsigned int
size_t	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * read)
size_t	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	p	struct:SDL_RWops	access:public	signature:(SDLCALL * write)
skip_renderer	/usr/include/SDL2/SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_bool	access:public
small_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
src_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
start	/usr/include/SDL2/SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text /;"	m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
start	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
status	/usr/include/SDL2/SDL_net.h	/^    int status;         \/* packet status after sending *\/$/;"	m	struct:__anonf2bfe3b30208	typeref:typename:int	access:public
stdio	/usr/include/SDL2/SDL_rwops.h	/^        } stdio;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670308	access:public
stop	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *stop;$/;"	m	struct:SDL_RWops::__anonfff75667010a::__anonfff756670408	typeref:typename:Uint8 *	access:public
stringColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int stringColor(SDL_Renderer * renderer, Sint16 x, Sint16 y, const cha/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,const char * s,Uint32 color)
stringRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int stringRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y, const char/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y,const char * s,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMinfo	typeref:typename:SDL_SYSWM_TYPE	access:public
subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMmsg	typeref:typename:SDL_SYSWM_TYPE	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            EGLSurface surface;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	typeref:typename:EGLSurface	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFBSurface *	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	typeref:struct:wl_surface *	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            void *surface;  \/**< Mir surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1108	typeref:typename:void *	access:public
sym	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	m	struct:SDL_Keysym	typeref:typename:SDL_Keycode	access:public
syswm	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
targets	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Texture **targets;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Texture **	access:public
testCase	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	m	struct:SDLTest_TestCaseReference	typeref:typename:SDLTest_TestCaseFp	access:public
testCases	/usr/include/SDL2/SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:const SDLTest_TestCaseReference **	access:public
testSetUp	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseSetUpFp	access:public
testTearDown	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseTearDownFp	access:public
text	/usr/include/SDL2/SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TextInputEvent	access:public
text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:char[]	access:public
text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:char[]	access:public
text	/usr/include/SDL2/SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	m	struct:__anonbdddce5a0308	typeref:typename:const char *	access:public
texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	m	struct:SDL_RendererInfo	typeref:typename:Uint32[16]	access:public
texturedPolygon	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int texturedPolygon(SDL_Renderer * renderer, const Sint16 * vx, const /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,const Sint16 * vx,const Sint16 * vy,int n,SDL_Surface * texture,int texture_dx,int texture_dy)
tfinger	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_TouchFingerEvent	access:public
thickLineColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int thickLineColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 width,Uint32 color)
thickLineRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int thickLineRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint1/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Uint8 width,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;                           \/**< In milliseconds, populated using SDL_GetTi/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;                         \/**< In milliseconds, populated using SDL_GetTick/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
title	/usr/include/SDL2/SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:const char *	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_TouchID	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:SDL_TouchID	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_TouchID	access:public
trigger_count	/usr/include/SDL2/SDL_assert.h	/^    unsigned int trigger_count;$/;"	m	struct:SDL_AssertData	typeref:typename:unsigned int	access:public
trigonColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int trigonColor(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 /;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint32 color)
trigonRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int trigonRGBA(SDL_Renderer * renderer, Sint16 x1, Sint16 y1, Sint16 x/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x1,Sint16 y1,Sint16 x2,Sint16 y2,Sint16 x3,Sint16 y3,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	m	union:SDL_Event	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED *\/$/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::S/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DISPLAYEVENT *\/$/;"	m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPC/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SENSORUPDATE *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;$/;"	m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	m	union:SDL_HapticEffect	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	m	struct:SDL_HapticDirection	typeref:typename:Uint8	access:public
type	/usr/include/SDL2/SDL_rwops.h	/^    Uint32 type;$/;"	m	struct:SDL_RWops	typeref:typename:Uint32	access:public
u	/usr/include/SDL2/SDL_endian.h	/^        Uint64 u;$/;"	m	union:SDL_Swap64::__anon308df0fb010a	typeref:typename:Uint64	access:public
ui32	/usr/include/SDL2/SDL_endian.h	/^        Uint32 ui32;$/;"	m	union:SDL_SwapFloat::__anon308df0fb030a	typeref:typename:Uint32	access:public
uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	access:public
uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0708	access:public
uint16_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint16_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint16_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint16_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint64_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint64_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint64_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	/usr/include/SDL2/SDL_opengl_glext.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint8_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned __int8 uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uint8_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uint8_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned __int8 uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uint8_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned __int8 uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned __int64 uintptr_t;$/;"	t	typeref:typename:unsigned __int64
uintptr_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned int uintptr_t;$/;"	t	typeref:typename:unsigned int
uintptr_t	/usr/include/SDL2/SDL_config.h	/^typedef unsigned long uintptr_t;$/;"	t	typeref:typename:unsigned long
uintptr_t	/usr/include/SDL2/SDL_config_minimal.h	/^typedef unsigned long uintptr_t;$/;"	t	typeref:typename:unsigned long
uintptr_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned __int64 uintptr_t;$/;"	t	typeref:typename:unsigned __int64
uintptr_t	/usr/include/SDL2/SDL_config_windows.h	/^typedef unsigned int uintptr_t;$/;"	t	typeref:typename:unsigned int
uintptr_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned __int64 uintptr_t;$/;"	t	typeref:typename:unsigned __int64
uintptr_t	/usr/include/SDL2/SDL_config_winrt.h	/^typedef unsigned int uintptr_t;$/;"	t	typeref:typename:unsigned int
unknown	/usr/include/SDL2/SDL_rwops.h	/^        } unknown;$/;"	m	union:SDL_RWops::__anonfff75667010a	typeref:struct:SDL_RWops::__anonfff75667010a::__anonfff756670508	access:public
unused	/usr/include/SDL2/SDL_keyboard.h	/^    Uint32 unused;$/;"	m	struct:SDL_Keysym	typeref:typename:Uint32	access:public
user	/usr/include/SDL2/SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
userdata	/usr/include/SDL2/SDL_audio.h	/^    void *userdata;             \/**< Userdata passed to callback (ignored for NULL callbacks). /;"	m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
userdata	/usr/include/SDL2/SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
value	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	m	struct:__anon67595f290108	typeref:typename:int	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:Sint16	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
value	/usr/include/SDL2/SDL_gamecontroller.h	/^    } value;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anonec6745aa030a	access:public
verbose	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 verbose;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
version	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 version;$/;"	m	struct:SDL_Palette	typeref:typename:Uint32	access:public
version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMinfo	typeref:typename:SDL_version	access:public
version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMmsg	typeref:typename:SDL_version	access:public
videodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *videodriver;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
vivante	/usr/include/SDL2/SDL_syswm.h	/^        } vivante;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	access:public
vivante	/usr/include/SDL2/SDL_syswm.h	/^        } vivante;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0808	access:public
vlineColor	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int vlineColor(SDL_Renderer * renderer, Sint16 x, Sint16 y1, Sint16 y2/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y1,Sint16 y2,Uint32 color)
vlineRGBA	/usr/include/SDL2/SDL2_gfxPrimitives.h	/^	SDL2_GFXPRIMITIVES_SCOPE int vlineRGBA(SDL_Renderer * renderer, Sint16 x, Sint16 y1, Sint16 y2,/;"	p	typeref:typename:SDL2_GFXPRIMITIVES_SCOPE int	signature:(SDL_Renderer * renderer,Sint16 x,Sint16 y1,Sint16 y2,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
volume	/usr/include/SDL2/SDL_mixer.h	/^    Uint8 volume;       \/* Per-sample volume, 0-128 *\/$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8	access:public
w	/usr/include/SDL2/SDL_rect.h	/^    float w;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
w	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
w	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
w	/usr/include/SDL2/SDL_video.h	/^    int w;                      \/**< width, in screen coordinates *\/$/;"	m	struct:__anon126ae9e30108	typeref:typename:int	access:public
wParam	/usr/include/SDL2/SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	typeref:typename:WPARAM	access:public
wheel	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseWheelEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerAxisEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerButtonEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:SDL_JoystickID	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The instance ID of the sensor *\/$/;"	m	struct:SDL_SensorEvent	typeref:typename:Sint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	m	struct:SDL_ControllerDeviceEvent	typeref:typename:Sint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	m	struct:SDL_JoyDeviceEvent	typeref:typename:Sint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The audio device index for the ADDED event (valid until next SDL_G/;"	m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
width	/usr/include/SDL2/SDL_test_images.h	/^  int width;$/;"	m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	access:public
win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0308	access:public
window	/usr/include/SDL2/SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	m	union:SDL_Event	typeref:typename:SDL_WindowEvent	access:public
window	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	m	struct:__anonbdddce5a0708	typeref:typename:SDL_Window *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            ANativeWindow *window;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1208	typeref:typename:ANativeWindow *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            EGLNativeWindowType window;$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1308	typeref:typename:EGLNativeWindowType	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0a08	typeref:typename:HWND	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0d08	typeref:typename:IDirectFBWindow *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            IInspectable * window;      \/**< The WinRT CoreWindow *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08	typeref:typename:IInspectable *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            NSWindow __unsafe_unretained *window; \/**< The Cocoa window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0e08	typeref:typename:NSWindow __unsafe_unretained *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            UIWindow __unsafe_unretained *window; \/**< The UIKit window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0f08	typeref:typename:UIWindow __unsafe_unretained *	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	m	struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	typeref:typename:Window	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window that was dropped on, if any *\/$/;"	m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window underneath the finger, if any *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
window_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 window_flags;$/;"	m	struct:__anon2a823ef40108	typeref:typename:Uint32	access:public
window_h	/usr/include/SDL2/SDL_test_common.h	/^    int window_h;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_icon	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_icon;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
window_maxH	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxH;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_maxW	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxW;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_minH	/usr/include/SDL2/SDL_test_common.h	/^    int window_minH;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_minW	/usr/include/SDL2/SDL_test_common.h	/^    int window_minW;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_title	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_title;$/;"	m	struct:__anon2a823ef40108	typeref:typename:const char *	access:public
window_w	/usr/include/SDL2/SDL_test_common.h	/^    int window_w;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_x	/usr/include/SDL2/SDL_test_common.h	/^    int window_x;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
window_y	/usr/include/SDL2/SDL_test_common.h	/^    int window_y;$/;"	m	struct:__anon2a823ef40108	typeref:typename:int	access:public
windows	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Window **windows;$/;"	m	struct:__anon2a823ef40108	typeref:typename:SDL_Window **	access:public
winrt	/usr/include/SDL2/SDL_syswm.h	/^        } winrt;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0b08	access:public
wl	/usr/include/SDL2/SDL_syswm.h	/^        } wl;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f1008	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negati/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    float x;$/;"	m	struct:SDL_FPoint	typeref:typename:float	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    float x;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    int x;$/;"	m	struct:SDL_Point	typeref:typename:int	access:public
x	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int x;$/;"	m	struct:__anonce60ad6c0108	typeref:typename:unsigned int	access:public
x	/usr/include/SDL2/SDL_touch.h	/^    float x;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMinfo::__anon51e8038f090a	typeref:struct:SDL_SysWMinfo::__anon51e8038f090a::__anon51e8038f0c08	access:public
x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMmsg::__anon51e8038f020a	typeref:struct:SDL_SysWMmsg::__anon51e8038f020a::__anon51e8038f0408	access:public
xrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
xrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and ne/;"	m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;$/;"	m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    float y;$/;"	m	struct:SDL_FPoint	typeref:typename:float	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    float y;$/;"	m	struct:SDL_FRect	typeref:typename:float	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	typeref:typename:int	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    int y;$/;"	m	struct:SDL_Point	typeref:typename:int	access:public
y	/usr/include/SDL2/SDL_touch.h	/^    float y;$/;"	m	struct:SDL_Finger	typeref:typename:float	access:public
yrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
yrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
zoomSurface	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE SDL_Surface *zoomSurface(SDL_Surface * src, double zoomx, double zoomy, int/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE SDL_Surface *	signature:(SDL_Surface * src,double zoomx,double zoomy,int smooth)
zoomSurfaceSize	/usr/include/SDL2/SDL2_rotozoom.h	/^	SDL2_ROTOZOOM_SCOPE void zoomSurfaceSize(int width, int height, double zoomx, double zoomy, int/;"	p	typeref:typename:SDL2_ROTOZOOM_SCOPE void	signature:(int width,int height,double zoomx,double zoomy,int * dstwidth,int * dstheight)
